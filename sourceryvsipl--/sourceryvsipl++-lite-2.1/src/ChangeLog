2009-05-12  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/cbe/ppu/plugin.cpp: Backport fix from trunk.
	* src/vsip/opt/cbe/ppu/bindings.hpp: Likewise.
	* src/vsip/core/fft.hpp: Likewise.
	* cvsip/fft_api.hpp: Likewise.
	* cvsip/fftm_api.hpp: Likewise.
	* cvsip/fft2d_api.hpp: Likewise.
	* cvsip/fft3d_api.hpp: Likewise.
	* examples/cvsip/makefile.standalone.in: Likewise.
	* examples/makefile.standalone.in: Likewise.
	
2009-04-30  Stefan Seefeld  <stefan@codesourcery.com>

	* examples/GNUmakefile.inc.in: Fix build rule.
	* src/vsip/core/block_copy.hpp: Fix docstring.
	* src/vsip/core/block_traits.hpp: Likewise.
	* src/vsip/core/extdata.hpp: Likewise.
	* src/vsip/core/extdata_common.hpp: Likewise.
	* src/vsip/core/layout.hpp: Likewise.
	* src/vsip/core/lvalue_proxy.hpp: Likewise.
	* src/vsip/core/storage.hpp: Likewise.
	* src/vsip/opt/extdata.hpp: Likewise.

2009-04-29  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/lapack/bindings.hpp: Fix complex construction
	issue with GCC 3.4.

2009-04-29  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip_csl/matlab.hpp (swap_header): Swap both dimensions
	  for Matlab vectors.
	  (class_type_is_int): New function, replaces...
	  (data_type_is_int): ...this.
	  (class_type_is_signed): New function, replaces...
	  (data_type_is_signed): ...this.
	* src/vsip_csl/matlab_bin_formatter.hpp (operator<<): Don't
	  ever write data out as a single block.
	  (operator>>): Test using class_type_is..., not data_type_is...
	  functions.
	* tests/vsip_csl/matlab_bin_file/data/matlab-ref-be.mat: Replace
	  with temp.mat output from test program generated on a 32-bit
	  Power (big-endian) platform.

2009-04-29  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/lapack.m4: Add --with-f2c-abi flag.
	* m4/release.m4: Remove --enable-maintainer-mode.
	* GNUmakefile.in: Adjust.
	* doc/GNUmakefile_manuals.inc.in: Adjust.
	* doc/GNUmakefile.inc.in: Make 'api-reference' an explicit target.
	* configure.ac: Let dependency generation use -MM with GCC.
	* scripts/package.py: Remove.
	* scripts/config: Remove.
	
2009-04-27  Mike LeBlanc  <mike@codesourcery.com>

	* benchmarks/sort.cpp: New file.  Benchmark for new sort facility.
	* src/vsip_csl/sort.hpp: For sort_indices, overwrite the index vector
	  with a ramp before sorting.

2009-04-26  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/sort.hpp: Fix sort_indices implementation.
	* tests/vsip_csl/sort.cpp: Fix tests.

2009-04-25  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/sort.hpp: Fix a variety of issues.
	* tests/sort.cpp: Move to...
	* tests/vsip_csl/sort.cpp: ...here.

2009-04-24  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip_csl/sort.hpp: Add functions to sort a view in-place.
	* tests/sort.cpp: Add tests for the new functions.
	* doc/reference-manual/sort_data_ip.xml: New file.  Add a man page for
	  the new functions.
	* doc/reference-manual/sort_data.xml: Fix "See Also" section.
	* doc/reference-manual/extensions.xml: Likewise.
	* doc/reference-manual/sort_indices.xml: Likewise.

2009-04-24  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip_csl/matlab.hpp (view_header): Clarify size of dim
	  in the case of vectors.
	  (read): Read elements in column-major order.  Skip over
	  padding at the end of the block.
	  (write): Write elements in column-major order.  Include
	  padding at the end of the block.
	  (data_type_is_int): New function.
	  (data_type_is_signed): New function.
	* src/vsip_csl/matlab_bin_formatter.hpp (operator>>): Create
	  row vectors, not column vectors.
	  (operator<<): Complain for loading complex data into real
	  view, not vice versa.  Allow loading unsigned data into
	  signed types and integer data into float types, but not
	  vice versa.  Accept either column or row vectors.  Handle
	  the case of loading real data into a complex view.

	* tests/vsip_csl/matlab_bin_file/matlab_bin_file.cpp: Include
	  Matlab code for generating sample data files in comment.
	  Add additional tests for int32 and uint32 vectors.  Remove
	  useless debug code.  Add additional tests for handling of
	  allowed mismatches between input and output types.
	* tests/vsip_csl/matlab_bin_file/data/matlab-ref-le.mat:
	  Regenerate (from a run of matlab_bin_file.cpp on x86).
	* tests/vsip_csl/matlab_bin_file/data/matlab-ref-octave-le.mat:
	  New file, generated by running the Matlab code in the above
	  comment through Octave 3.0.3 (Cygwin).

2009-04-24  Jules Bergmann  <jules@codesourcery.com>

	* doc/reference-manual/view_cast.xml: New file, document view_cast.
	* doc/reference-manual/extensions.xml: Include view_cast.
	* doc/getting-started/getting-started.xml: Incorporte patch feedback.

2009-04-24  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip_csl/view_cast.hpp: New file, makes view_cast visible
	  from vsip_csl.
	* tests/view_cast.cpp: Test vsip_csl view_cast (instead of vsip::impl).

2009-04-23  Mike LeBlanc  <mike@codesourcery.com>

	* doc/reference-manual/reference-manual.xml: Add a new extensions
	  chapter.
	* doc/reference-manual/extensions.xml: New file.  Add a chapter for
	  vsip_csl extensions.  It includes the new man pages listed below.
	* doc/reference-manual/sort_indices.xml: New file.  Add a man page for
	  the function sort_indices().
	* doc/reference-manual/sort_data.xml: New File. Add a man page for the
	  function sort_data();

2009-04-22  Don McCoy  <don@codesourcery.com>

	* src/vsip/initfin.cpp: Renamed CUDA init/fini functions.
	* src/vsip/opt/cuda/bindings.hpp: Modified to use new names.  Moved
	  error checking function into three separate macros.  Also eliminated
	  dependency on CUDA header file by defining just those symbols we need.
	  Added wrappers for block copy functions to simplify calling syntax.
	* src/vsip/opt/cuda/gpu_block.hpp: Cleaned up throw specifications.
	  Used simplified block copy syntax.  Eliminated Map template parameter
	  for Gpu_block.  Added static asserts to enforce supported parameter
	  types	for the layout policy.  Moved Device_storage class 
	  definition to...
	* src/vsip/opt/cuda/device_storage.hpp: ...here.
	* src/vsip/opt/cuda/fft.cpp: Use new error checking macro.  Inlined
	  the code to raise exceptions on memory allocation failures.
	* src/vsip/opt/cuda/fastconv.cpp: Use error checking macro.
	* src/vsip/opt/cuda/matvec.hpp: Likewise.  Also fixed missing .op() 
	  bug in cdot.
	* src/vsip/opt/cuda/device_memory.hpp: Use Device_storage.
	* src/vsip/opt/cuda/bindings.cpp: Use error checking macros.  Removed
	  cublas_check_error().

2009-04-22  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/plugin/zhalfast_f.c: Fix bug calling
	  f_dtl_end too early.  Fixes fft_be failure in issue #274.
	
2009-04-22  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/getting-started/getting-started.xml: Fix typo.
	* src/vsip/opt/cbe/cml/conv.hpp: Remove problematic (and luckily redundant)
	include directives.

2009-04-22  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip_csl/sort.hpp: New file. Add first version of VSIPL++ sort
	  facility.
	* tests/sort.cpp: New file.  Test new sort facility.

2009-04-22  Don McCoy  <don@codesourcery.com>

	* benchmarks/cuda/vmmul.cpp: Updated to allow for changes in the
	  Device_memory class interface.
	* benchmarks/cuda/fastconv.cpp: Include call to sync threads after
	  calling vector-matrix multiply kernel.
	* benchmarks/cuda/copy.cpp: Added two new cases for testing device
	  to device memory transfers.
	* benchmarks/cuda/fftm.cpp: New file.  Routines for device-memory-only 
	  FFT/FFTM performance measurements.

2009-04-22  Jules Bergmann  <jules@codesourcery.com>
	
	* doc/getting-started/getting-started.xml: Updates for x86 ATLAS
	  usage and ppc64 ATLAS-altivec buggage.
	
2009-04-21  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Remove use of $PACKAGE_VERSION.
	* src/vsip/core/block_traits.hpp: Cleanup doc strings.
	* src/vsip/core/parallel/distributed_block.hpp: Likewise.
	* src/vsip/opt/lapack/bindings.hpp: Likewise.
	* src/vsip/core/signal/window.hpp: Generalize acosh<>() function template.
	* src/vsip/core/signal/window.cpp: Tidy up.
	* src/vsip/opt/lapack/matvec.hpp: Likewise.
	* tests/context.in: Remove stale variable reference.
	
2009-04-20  Jules Bergmann  <jules@codesourcery.com>
	
	* doc/getting-started/getting-started.xml: Incorporate patch
	  feedback.
	
2009-04-19  Don McCoy  <don@codesourcery.com>

	* tests/gpu_memory.cpp: Conditionalized tests requiring CUDA.

2009-04-17  Brooks Moses  <brooks@codesourcery.com>

	* doc/getting-started/getting-started.xml: Add version to title
	  page.
	* doc/users-guide/users-guide.xml: Likewise.
	* doc/reference-manual/reference-manual.xml: Likewise.  Use
	  csldoc.dtd rather than hardwired ENTITY definitions.
	* doc/reference-manual/datatypes.xml: Use csldoc.dtd and its
	  ENTITY definitions rather than hardwired ones.
	* doc/reference-manual/cvsip_ext.xml: Likewise.
	* doc/reference-manual/functions.xml: Likewise.
	* doc/reference-manual/operations.xml: Likewise.
	* doc/reference-manual/biblio.xml: Likewise.
	* doc/reference-manual/namespaces.xml: Likewise.

2009-04-17  Brooks Moses  <brooks@codesourcery.com>

	* m4/release.m4: Clean up case statements.
	  (enable_csl_documentation): Consistently use values of "1"
	  or "".

2009-04-17  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cuda/bindings.hpp: Moved Device_memory and 
	  vmmul evaluator to their own header files.  Added copy
	  and zero function wrappers.
	* src/vsip/opt/cuda/kernels/copy.cu: Added device memory
	  copy and zeroing functions.
	  src/vsip/opt/cuda/fastconv.cpp: Modified to use new
	  Device_storage class.
	* src/vsip/opt/cuda/matvec.hpp: Modified to use new Device
	  memory class.
	* src/vsip/opt/cuda/kernels.hpp: Added device memory copy
	  and zeroing declarations.
	* src/vsip/opt/cuda/gpu_block.hpp: New file.  Implements a 
	  special block type for managing GPU-based memory.
	* src/vsip/opt/cuda/device_memory.hpp: New file.  Device memory
	  class for regular and GPU-based blocks.
	* src/vsip/opt/cuda/eval_vmmul.hpp: New file.  Vector-matrix
	  multiply evaluator (moved from bindings.hpp).
	* src/vsip/opt/cuda/bindings.cpp: Moved Device_memory class
	  to it's own header.
	* src/vsip/opt/expr/serial_dispatch.hpp: Include new header 
	  for vmmul evaluator.
	* tests/gpu_memory.cpp: New tests for device memory and GPU block
	  interfaces.

2009-04-17  Jules Bergmann  <jules@codesourcery.com>

	* doc/getting-started/getting-started.xml: Move installation
	  of binary packages earlier, add software requirements, and
	  setting of ALF_LIBRARY_PATH.

2009-04-15  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/fast_block.hpp: Docstring cleanup.

2009-04-15  Brooks Moses  <brooks@codesourcery.com>

	* m4/cbe.m4 (CPPFLAGS, LDFLAGS): Include cml/ppu subdirectory.
	  (CPP_FLAGS_SPU, LD_FLAGS_SPU): Include cml/spu subdirectory.

 	* src/vsip/opt/cbe/cml/conv.hpp: Include cml.h, not
	  cml/{ppu,spu}/cml.h
	* src/vsip/opt/cbe/cml/corr.hpp: Likewise.
	* src/vsip/opt/cbe/cml/fir.hpp: Likewise.
	* src/vsip/opt/cbe/cml/lu.hpp: Likewise.
	* src/vsip/opt/cbe/cml/prod.hpp: Likewise.
	* src/vsip/opt/cbe/cml/qr.hpp: Likewise.
	* src/vsip/opt/cbe/cml/transpose.hpp: Likewise.
	* src/vsip/opt/cbe/ppu/alf.hpp: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconvm_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconvm_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_plugin.c: Likewise.
	* src/vsip/opt/cbe/spu/olay1/zfft_f.c: Likewise.
	* src/vsip/opt/cbe/spu/olay2/xvadd_f.c: Likewise.
	* src/vsip/opt/cbe/spu/olay2/xvmul_f.c: Likewise.
	* src/vsip/opt/cbe/spu/olay2/zrvmmul_col_f.c: Likewise.
	* src/vsip/opt/cbe/spu/olay2/zvmmul_col_f.c: Likewise.
	* src/vsip/opt/cbe/spu/olay2/zvmmul_row_f.c: Likewise.
	* src/vsip/opt/cbe/spu/plugin/chalfast_f.c: Likewise.
	* src/vsip/opt/cbe/spu/plugin/xvadd_f.c: Likewise.
	* src/vsip/opt/cbe/spu/plugin/xvmul_f.c: Likewise.
	* src/vsip/opt/cbe/spu/plugin/zhalfast_f.c: Likewise.
	* src/vsip/opt/cbe/spu/plugin/zrvmmul_col_f.c: Likewise.
	* src/vsip/opt/cbe/spu/plugin/zvmmul_col_f.c: Likewise.
	* src/vsip/opt/cbe/spu/plugin/zvmmul_row_f.c: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cblock_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfft_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cmadd_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cvmmul_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cvmul_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/fused_kernel.hpp:
	  Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/interp_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/madd_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/scmadd_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/vmul_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfft_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmmul_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmul_f.hpp: Likewise.

	* src/vsip/opt/cbe/ppu/alf.hpp: Include alf_cache.h, not
	  cml/ppu/alf_cache.h

2009-04-15  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/config.hpp: Docstring cleanup.
	* src/vsip/core/dense_fwd.hpp: Likewise.
	* src/vsip/core/expr/binary_block.hpp: Likewise.
	* src/vsip/core/expr/scalar_block.hpp: Likewise.
	* src/vsip/core/expr/ternary_block.hpp: Likewise.
	* src/vsip/core/expr/unary_block.hpp: Likewise.
	* src/vsip/core/fft.hpp: Likewise.
	* src/vsip/core/fns_scalar.hpp: Likewise.
	* src/vsip/core/fns_elementwise.hpp: Likewise.
	* src/vsip/core/signal/histo.hpp: Likewise.
	* src/vsip/dense.hpp: Likewise.
	* src/vsip/opt/dispatch.hpp: Likewise.
	* src/vsip/opt/lapack/bindings.hpp: Likewise.
	* src/vsip/selgen.hpp: Likewise.
	* src/vsip/support.hpp: Likewise.
	* synopsis.py.in: Use '///' instead of '//.' for docstrings.
	
2009-04-14  Brooks Moses  <brooks@codesourcery.com>

	* m4/cbe.m4 (CPPFLAGS): Prefix with $with_cbe_sdk_sysroot.
	  (LDFLAGS): Likewise.

2009-04-08  Mike LeBlanc  <mike@codesourcery.com>

	* apps/vadd: New application.
	* apps/vadd/vadd.cpp: New file - source for the application.
	* apps/vadd/Makefile.in: New file - for in-tree building.
	* apps/vadd/GNUmakefile: New file - for general building.
	* apps/vadd/README: New file - simple instructions.

2009-04-08  Jules Bergmann  <jules@codesourcery.com>

	* examples/x86/setup.sh: New file, example configuration for
	  x86/linux.

2009-04-08  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (NVCCFLAGS_LIB): New AC_SUBST to pass -fPIC to CUDA.
	* src/vsip/opt/cuda/GNUmakefile.inc.in (NVCCFLAGS_LIB): Use it.

2009-04-08  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_plugin.c: Adjust size of code_buffer
	  for cases were ALF uses more buffer space.
	* src/vsip/opt/ukernel.hpp: Accurately compute dtl_size for 2-dim
	  streams.  Handle kernels that use more buffer space than default.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmmul_f.hpp: Comment.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfconv_f.cpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cvmmul_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfconv_f.cpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfft_f.cpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfft_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/interp_f.hpp: Rename variables
	  to match reference algorithm.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfft_f.cpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfft_f.hpp: Cleanup.
	* src/vsip/opt/cuda/fft.cpp: Define BE name().
	* tests/ukernel/interp.cpp: Hard code depth of window to 17, to match
	  interp_f kernel implementation.
	
2009-04-07  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/cbe.m4: Resolve issue with sysroot.

2009-04-06  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Rename LD_SPU_FLAGS to LD_FLAGS_SPU,
	and likewise CPP_SPU_FLAGS.
	* m4/cbe.m4: Likewise.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Likewise.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: Use $(link_benchmark).
	* src/vsip/opt/cbe/ppu/plugin.cpp: Fix typo.

2009-04-05  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/signal/fir_opt.hpp: Fix various typos.

2009-04-03  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/signal/fir_opt.hpp: Fix apply() signature.


2009-04-02  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Create lib/plugin and lib/uk_plugin, if required.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Make plugin build portable.
	* src/vsip/opt/cbe/ppu/plugin.cpp: Some tidying up.
	* test/convolution/convolution.hpp: Fix warning.

2009-04-01  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/plugin/zhalfast_f.c: Fix typo.

2009-04-01  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Move point of evaluation of $builtin_libdir to...
	* GNUmakefile.in: ...here
	* vsipl.pc.in: ...and here
	* vsipl++.pc.in: ...and here.

2009-04-01  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/release.m4: New file. Support --with-version-string et al.
	* configure.ac: Refactor slightly, using the above.
	* doc/csldoc.dtd.in: New DTD for all our docs.
	* doc/GNUmakefile_manuals.inc.in: Add search path to find the above.
	* doc/getting-started/getting-started.xml: Adjust.
	* doc/users-guide/users-guide.xml: Adjust.
	* m4/lapack.m4: Only check for g2c if $F77 != gfortran.

2009-04-01  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/signal/fir.hpp: Declare Diagnose_fir.
	* src/vsip/core/signal/fir_backend.hpp: Add FIR BE name() for diag.
	* src/vsip/opt/ipp/fir.hpp: Likewise.
	* src/vsip/opt/diag/fir.hpp: New file, FIR diagnostic routines.
	* src/vsip/opt/signal/fir_opt.hpp: Add convolution based FIR.

2009-03-31  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Fix plugin build rules.

2009-03-30  Jules Bergmann  <jules@codesourcery.com>

	* scripts/create_plugin_image.pl: New file, create plugin images.

2009-03-27  Brooks Moses  <brooks@codesourcery.com>

	* m4/cbe.m4 (CPP_SPU_FLAGS): Add -I$cml_incdir/spu.
	  (LD_SPU_FLAGS): Use -L$trylibdir/spu.

2009-03-26  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cuda/fastconv.cpp: Removed debug printf.
	
2009-03-26  Don McCoy  <don@codesourcery.com>

	* benchmarks/cuda/vmmul.cpp: New file.  Benchmark for on-device (GPU)
	  kernel operations.
	* benchmarks/cuda/fastconv.cpp: Added two new benchmarks to demonstrate
	  different algorithms for fast convolution, both for measuring on-device
	  performance.

2009-03-26  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/release.m4: Add release-related options.
	* configure.ac: Use them.
	* doc/csldoc.dtd.in: Define document type for SV++ docs.
	* doc/getting-started/getting-started.xml: Use it.
	* doc/users-guide/users-guide.xml: Use it.
	* doc/GNUmakefile_manuals.inc.in: Add search path for external dtd.

2009-03-26  Stefan Seefeld  <stefan@codesourcery.com>

	* autogen.sh: Run aclocal and autoheader for fftw3, too.

2009-03-25  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cuda/eval_fastconv.hpp: New file.  Serial expression
	  evaluators for fast convolution.
	* src/vsip/opt/cuda/bindings.hpp: Corrected warnings about comparing
	  strides.
	* src/vsip/opt/cuda/kernels/vmmul.cu: Added matrix-matrix multiply
	  kernel.
	* src/vsip/opt/cuda/fastconv.cpp: New file.  Fast convolution class
          for CUDA.  Provides versions for that accept either a vector or 
	  a matrix of coefficients.
	* src/vsip/opt/cuda/kernels.hpp (mmmuls_cc): Added matrix-matrix
	  kernel declaration.
	* src/vsip/opt/cuda/fastconv.hpp: New file.  Fast convolution class.
	* src/vsip/opt/expr/serial_dispatch.hpp: Include CUDA-based evaluator.
	* src/vsip/GNUmakefile.inc.in: Include fastconv sources.
	* tests/fastconv.cpp: Fixed several assert --> test_assert calls.
	  Enhanced matrix-of-coefficients test to place unique data in each
	  row of the kernel.

2009-03-25  Don McCoy  <don@codesourcery.com>

	* doc/getting-started/getting-started.xml: Document CUDA-related 
	  configuration options.

2009-03-25  Don McCoy  <don@codesourcery.com>

	* configure.ac (benchmarks/cuda): Create new directory.

2009-03-24  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/lapack.m4: Fix and clarify detection of Fortran calling ABI.
	* src/vsip/opt/lapack/bindings.hpp: Likewise.
	
2009-03-18  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cuda/bindings.hpp: Modified Device_memory class to
	  use SYNC_IN/OUT symantics (as with Ext_data).
	* src/vsip/opt/cuda/matvec.hpp: Added error check for conjugate 
	  dot product case.
	* src/vsip/opt/cuda/bindings.cpp: Include sstream instead of
	  iostream.  Eliminated warnings on initialization order and unused
          variables.  Support use of SYNC_IN/OUT mechanism in Device_memory.

2009-03-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/signal/freqswap.hpp (Freqswap_functor): Add local().
	* src/vsip/core/dispatch_assign.hpp: Update comments.
	* src/vsip/core/parallel/support.hpp: Fix global_from_local_index to
	  handle empty subblock.
	
	* src/vsip/opt/cbe/ppu/plugin.cpp: New file, handle loading of
	  plugins into PPU memory.
	* src/vsip/opt/cbe/ppu/plugin.hpp: Likewise.
	
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Remove unused tags.
	* src/vsip/opt/cbe/ppu/bindings.hpp: Handle large vmmul_row cases.
	* src/vsip/opt/cbe/ppu/fft.cpp: Use plugins.  Apply short FFT
	  optimization (multiple chunks per WB) to interleaved complex
	  (already done for split).
	* src/vsip/opt/cbe/ppu/bindings.cpp: Use plugins.
	* src/vsip/opt/cbe/spu/alf_vmmul_split_c.c: Remove old file.
	* src/vsip/opt/cbe/spu/alf_overlay.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fft_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmmul_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Likewise.
	* src/vsip/opt/cbe/spu/driver-ld.script: Ld script for plugin driver.
	* src/vsip/opt/cbe/spu/plugin-ld.script: Ld script for plugins.
	* src/vsip/opt/cbe/spu/plugin/zrvmmul_col_f.c: New file, plugin for
	  split rvmmul_col_f.
	* src/vsip/opt/cbe/spu/plugin/xvmul_f.c: New file, plugin for 
	  {,c,z}vmul_f.
	* src/vsip/opt/cbe/spu/plugin/zhalfast_f.c: New file, plugin for
	  split FFT and vmmul_row.
	* src/vsip/opt/cbe/spu/plugin/zvmmul_row_f.c: New file, plugin for
	  split vmmul_row_f.
	* src/vsip/opt/cbe/spu/plugin/chalfast_f.c: New file, plugin for
	  interleaved FFT and vmmul_row.
	* src/vsip/opt/cbe/spu/plugin/xvadd_f.c: New file, plugin for
	  {,c,z}vadd_f.
	* src/vsip/opt/cbe/spu/plugin/zvmmul_col_f.c: New file, plugin for
	  split vmmul_col_f.
	* src/vsip/opt/cbe/spu/alf_plugin.c: New file, plugin driver code
	  (always resident).
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Rules for plugins.
	* src/vsip/opt/cbe/spu/plugin_functions.h: New file, functions
	  provided by resident for use in plugins.
	* src/vsip/opt/cbe/fft_params.h: Extend to pass plugin parameters.
	* src/vsip/opt/cbe/vmmul_params.h: Likewise.
	* src/vsip/opt/cbe/overlay_params.h: Likewise.
	* src/vsip/opt/cbe/vmul_params.h: Likewise.
	* src/vsip/opt/ukernel.hpp: Use plugins.
	* src/vsip/opt/ukernel/cbe_accel/alf_base.hpp: Use plugins.
	* src/vsip/opt/ukernel/cbe_accel/buffer_resource.hpp: Deleted file.
	* src/vsip/opt/ukernel/cbe_accel/resource_manager.hpp: Deleted file.
	* src/vsip/opt/ukernel/cbe_accel/fft_resource.hpp: Deleted file.
	* src/vsip/opt/ukernel/cbe_accel/ukernel.hpp: Update for removal
	  of resource manager.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmmul_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cblock_f.hpp Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfconv_f.cpp Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/fused_kernel.hpp Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/interp_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cvmmul_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfft_f.cpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/box1_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfft_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/box2_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/id2_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfft_f.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/box1.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/box2.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/fconv.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/id1.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/cblock.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/id2.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/fft.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/vcopy.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/vmmul.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/interp.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/vmul.hpp: Use plugins.
	* src/vsip/opt/ukernel/kernels/host/madd.hpp: Use plugins.
	* src/vsip/opt/ukernel/ukernel_params.hpp: Fit parameter block into
	  512 bytes.  Pass common plugin parameters.
	* src/vsip/GNUmakefile.inc.in: Build plugin related files.
	* GNUmakefile.in: Install plugin headers.
	* tests/ukernel/fconv.cpp: Additional test coverage.
	* configure.ac: Plugin related configuration.
	* benchmarks/create_map.hpp (create_map): Add default.
	* benchmarks/fftw3/fftm.cpp: Cleanup ordering, add usage.
	* benchmarks/fir.cpp: Add case to sweep block size.
	* benchmarks/main.cpp: Allow number of huge pages to be controlled.
	* benchmarks/task_switch.cpp: Add vmul/vadd case, remove fftm and
	  vmmul only cases.


2009-03-18  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cuda/matvec.hpp: Inserted a missing .op() call
	  in the rt_valid() function for the conjugated dot product.

2009-03-17  Don McCoy  <don@codesourcery.com>

	* src/vsip/initfin.cpp (finalize_default_pool): Use new function 
	  to free default pool when finalizing library.
	* src/vsip/core/memory_pool.hpp: Declare it.
	* src/vsip/core/memory_pool.cpp: Define it.

2009-03-17  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/type_list.hpp: Lengthened the type list.
	* src/vsip/opt/diag/eval.hpp: Added CUDA tag.
	* src/vsip/opt/cuda/bindings.hpp: Added wrapper functions
	  to join vmmul functions to vmmul kernels.  Added evaluator
	  for vmmul.
	* src/vsip/opt/cuda/kernels/copy.cu: New file.  CUDA kernel 
	  for benchmarking memory copy.
	* src/vsip/opt/cuda/kernels/vmmul.cu: New file.  Vector-
	  matrix multiply kernels.
	* src/vsip/opt/cuda/GNUmakefile.inc.in: New file.  Build
	  rules for CUDA kernels.
	* src/vsip/opt/cuda/kernels.hpp: New file. Declarations for
	  CUDA kernels.
	* src/vsip/opt/cuda/bindings.cpp: Modified Device_memory
	  class to use runtime API functions for allocating memory.
	* src/vsip/opt/expr/serial_dispatch.hpp: Added includes for
	  CUDA bindings.
	* src/vsip/opt/expr/serial_dispatch_fwd.hpp: Added CUDA tag.
	* src/vsip/GNUmakefile.inc.in: Include CUDA makefile fragment.
	* tests/vmmul.cpp: Modified vmmul test to cover both dimension
	  orderings for the result matrix.
	* configure.ac (src/vsip/opt/cuda/kernels): Create new directory.
	* benchmarks/GNUmakefile.inc.in: Added 'cuda' subdirectory and
	  build commands.
	* benchmarks/cuda/fastconv.cpp: New file.  Raw fast convolution
	  using CUDA.
	* benchmarks/cuda/copy.cpp: New file.  Raw memory to memory
	  transfers using CUDA.

2009-03-11  Don McCoy  <don@codesourcery.com>

	* doc/getting-started/getting-started.xml: Added new appendix for
	  proprietary license.  
	
2009-03-10  Don McCoy  <don@codesourcery.com>

	* m4/cuda.m4: Added logic to detect CUDA FFT library (if enabled).
	* m4/fft.m4: Likewise.
	* src/vsip/core/fft.hpp: Conditionally include CUDA FFT headers.
	* src/vsip/opt/cuda/fft.cpp: New file, implementation of 1-D FFT
	  and FFTM backends.
	* src/vsip/opt/cuda/fft.hpp: New file, declarations for evaluators.
	* src/vsip/GNUmakefile.inc.in:  Include CUDA FFT backend sources.
	* GNUmakefile.in (VSIP_IMPL_HAVE_CUDA, VSIP_IMPL_CUDA_FFT): Added 
	  variable substitutions.

2009-03-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip_csl/matlab_utils.hpp: Make fd_fftshift distributed aware.

2009-03-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip_csl/save_view.hpp: Fix Wall warning.

2009-03-06  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/ukernel.hpp: Add num_accel function to 
	  Host_kernel_base.
	* src/vsip/opt/ukernel/kernels/host/cblock.hpp: Support control
	  over number of accelerators.
	* tests/ukernel/cblock.hpp: Exercise control over number of
	  accelerators.

2009-03-04  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/GNUmakefile.inc.in: Fix typo to install libsvpp.so.

2009-03-03  Jules Bergmann  <jules@codesourcery.com>

	* m4/ipp.m4: Add missing provide_fft_{float,double}.

2009-03-03  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Use -fPIC only for building library (not executables).
	* GNUmakefile.in: Likewise.

2009-03-02  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/fft.hpp: Corrected table for FFT parameters
	  to match section 11.2.4 of specification.  Affects comments only.
	  Specifically the differences are: M and N now interchanged 
	  (M == rows, N == cols); fft_fwd and fft_inv are always used
	  where complex-complex transforms are used; and SD indicates
	  the dimension for which the input and output sizes are not equal.

2009-03-02  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--enable-shared-lib): New option to build shared
	  VSIPL++ libraries.
	* GNUmakefile.in: Add macros for building shared libraries and
	  for building benchmarks.
	* src/vsip/GNUmakefile.inc.in: Build libsvpp.so
	* src/vsip_csl/GNUmakefile.inc.in: Build libvsip_csl.so
	* doc/getting-started/getting-started.xml: Document
	  --enable-shared-lib.
	* benchmarks/GNUmakefile.inc.in: Adjust benchmark building.

2009-02-24  Jules Bergmann  <jules@codesourcery.com>

	* apps/ssar/Makefile.in: New file, makefile for in-objdir building
	  of SSAR.

2009-02-19  Jules Bergmann  <jules@codesourcery.com>

	* doc/getting-started/getting-started.xml: Update documentation for
	  --with-cbe-sdk option (2.1 no longer supported).
	* examples/cell/setup.sh: Update --with-cbe-sdk option.

2009-02-19  Jules Bergmann  <jules@codesourcery.com>

	* examples/cell/setup.sh: Add recommended --enable-timer=power_tb.

2009-02-13  Jules Bergmann  <jules@codesourcery.com>

	* m4/parallel.m4: Only define VSIP_IMPL_HAVE_MPI when we actually
	  have MPI.

2009-02-13  Jules Bergmann  <jules@codesourcery.com>

	* doc/getting-started/getting-started.xml: Fix description for 
	  building a program manually.

2009-02-13  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/ukernel.hpp: Use ALF inout buffers for ukernels.
	* src/vsip/opt/ukernel/cbe_accel/alf_base.hpp: Likewise.

2009-02-12  Don McCoy  <don@codesourcery.com>

	* m4/cuda.m4: Add checks for CUBLAS in default CUDA 
	  install location.

2009-02-12  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/cuda.m4: New CUDA checks.
	* configure.ac: Use them.
	* src/vsip/GNUmakefile.inc.in: Likewise.

2009-02-11  Don McCoy  <don@codesourcery.com>

	* src/vsip/initfin.cpp: Fix warning on char string conversion.  Add
	  calls to initialize CUDA library (if in use).
	* src/vsip/core/matvec.hpp: Add new CUDA BLAS backend for dot().
	* src/vsip/core/impl_tags.hpp: New CUDA backend tag.
	* src/vsip/opt/cuda/bindings.hpp: New file, C++ bindings for CUDA.
	* src/vsip/opt/cuda/matvec.hpp: New file, Evaluators for CUDA.
	* src/vsip/opt/cuda/bindings.cpp: New file, ini/fini routines.
	* src/vsip/GNUmakefile.inc.in: Include 'opt/cuda' directory.
	* scripts/char.db: Add two new test cases for CUDA dot products.
	* GNUmakefile.in: Scan 'opt/cuda' for dependencies.
	* configure.ac: Create 'opt/cuda' directory.
	* benchmarks/dot.cpp: Added two new test cases for calling CUDA
	  backend directly.

2009-02-11  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/view_api.hpp: Allow null pointers to all *destroy* calls.
	* cvsip/cview_api.hpp: Likewise.
	* tests/cvsip/destroy.c: Test it.

2009-02-10  Stefan Seefeld  <stefan@codesourcery.com>

	* synopsis.py.in: Simplify.
	* doc/GNUmakefile.inc.in: Cleanup.
	* tests/extdata-fft.cpp: Remove obsolete cast to "char*".

2009-02-10  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/core/solver/svd.hpp: Change A && B || C to (A && B) || C
	    to avoid warnings.
	* src/vsip/opt/sal/svd.hpp: Ditto
	* src/vsip/opt/lapack/svd.hpp: Ditto
	* src/vsip_csl/ref_dft.hpp: Ditto
	* src/vsip/core/matvec.hpp: Remove unused variable.
	* tests/lvalue-proxy.cpp: Change A == B ^ C to (A == B) ^ C
	* tests/extdata-fft.cpp: Use explicit cast of string to char*
	    to avoid warnings.

2009-02-05  Brooks Moses  <brooks@codesourcery.com>

	* doc/getting-started/getting-started.xml: Remove
	  documentation of --enable-cbe-sdk-embedded-images.

2009-02-04  Brooks Moses  <brooks@codesourcery.com>

	* GNUmakefile.in (clean): Add automatic cleanup of $(libs)
	  and $(other_libs).
	* vendor/GNUmakefile.inc.in: Clean up CLAPACK rules.
	  (BUILD_REF_CLAPACK): Remove.
	  (BUILD_REF_CLAPACK_BLAS): Remove.
	  (BUILD_LIBF77): Remove.
	  (USE_SIMPLE_LAPACK): Rename to...
	  (USE_BUILTIN_LAPACK) ...this.
	  (clean): Remove explicit listing of FFTW libraries.
	* m4/lapack.m4 (BUILD_REF_CLAPACK): Remove.
	  (BUILD_REF_CLAPACK_BLAS): Remove.
	  (BUILD_LIBF77): Remove.
	  (USE_SIMPLE_LAPACK): Rename to...
	  (USE_BUILTIN_LAPACK) ...this.
	* cvsip/GNUmakefile.inc.in: Remove explicit all, clean
	  targets.
	* src/vsip/GNUmakefile.inc.in: Likewise.
	* src/vsip_csl/GNUmakefile.inc.in: Likewise.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Remove all
	  target; remove spe_kernels from mostlyclean target.

2009-02-04  Brooks Moses  <brooks@codesourcery.com>

	* GNUmakefile.in (all): Add libs dependency.

2009-02-04  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/opt/sal/elementwise.hpp: Remove warning with -g.
	* src/vsip_csl/img/impl/pwarp_simd.hpp: Use workaround for
	  vec_pack problem

2009-02-04  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/cbe/ppu/task_manager.hpp: Move initialize() to...
	* src/vsip/opt/cbe/ppu/task_manager.cpp: ...here, and add missing header.

2009-02-03  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/cvsip/vector.c: Fix memory deallocation.
	* vendor/GNUmakefile.inc.in: Always build vendor libs serially.

2009-02-03  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/ipp/fft.cpp: Guard IPP 5.0 API usage.

2009-02-02  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/cvsip/block.hpp: Add is_derived() method.
	* src/vsip_csl/cvsip/view.hpp: Use it when creating subviews.
	* tests/cvsip/derived.c: Test the above.

2009-01-30  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/ipp/fft.cpp: Add in-place and split options.  Add usage.
	* benchmarks/fftw3/fft.cpp: Simplify shorten-dimension logic,
	  Allow wisdom to be saved.  Add usage.
	* benchmarks/benchmarks.hpp: Add mag op cost estimate.
	* benchmarks/vma.cpp: Add usage.
	* benchmarks/fftm.cpp: Parallelize some cases.
	* benchmarks/vmmul.cpp: Parallelize some cases.
	
2009-01-27  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in: Include scripts/GNUmakefile.inc.in
	* scripts/GNUmakefile.inc.in: New file, rules for generating
	  datasheets.
	* scripts/datasheet.pl: Quote commas for csv output, other cleanup.
	
2009-01-16  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/*: Adjust inclusion of view_decl.hpp.

2009-01-12  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/vector.hpp: Move to...
	* src/vsip/core/vector.hpp ...this, and replace by thin wrapper.
	* src/vsip/map.hpp: Adjust.
	* src/vsip/core/parallel/services.cpp: Likewise.
	* src/vsip/core/parallel/subset_map.hpp: Likewise.
	* src/vsip/core/parallel/support.hpp: Likewise.
	* src/vsip/core/parallel/transpose_map.hpp: Likewise.
	* src/vsip/core/parallel/util.hpp: Likewise.
	* src/vsip/parallel.hpp: Likewise.

2009-01-09  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/block.hpp: Move to...
	* src/vsip_csl/cvsip/block.hpp: ...here.
	* cvsip/view.hpp: Move to...
	* src/vsip_csl/cvsip/view.hpp: ...here.
	* cvsip/type_conversion.hpp: Move to...
	* src/vsip_csl/cvsip/type_conversion.hpp: ...here.
	* cvsip/view_decl.hpp: Move to...
	* src/vsip_csl/cvsip/view_decl.hpp: ...here.
	* cvsip/cview_decl.hpp: Move to...
	* src/vsip_csl/cvsip/cview_decl.hpp: ...here.
	* cvsip/view_api.hpp: Adjust.
	* cvsip/cview_api.hpp: Adjust.
	* cvsip/support.cpp: Adjust.
	* src/vsip_csl/cvsip/views.hpp: New view declarations.
	* src/vsip_csl/cvsip.hpp: New SV C++ wrapper file.
	* src/vsip_csl/GNUmakefile.inc.in: Install new files.
	* tests/cvsip/extract.cpp: Test SV->SV++ view extraction.
	* tests/context.in: Add missing flags to compile C++ tests in cvsip/ test suite.
	
	* cvsip/vsip_csl.h: Fix DDA prototypes.

2009-01-09  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/reference-manual/cvsip_ext.xml: New file.
	* doc/reference-manual/reference-manual.xml: Adjust.

2008-12-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fft.cpp: Use overlay-based kernel for split
	  fft.  Send multiple chunks so that each workblock-use transfer
	  is 16 KB.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Support use of ALF in/out
	  buffers (reserve_iobuf).  Add Overlay_tag.
	* src/vsip/opt/cbe/ppu/bindings.hpp: Dispatch column-vmmul variants
	  to vmmul_col.
	* src/vsip/opt/cbe/ppu/alf.cpp: Support ALF in/out buffers.
	* src/vsip/opt/cbe/ppu/alf.hpp: Likewise.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Use overlay-based kernel for
	  vmul_f, cvmul_f, zvmul_f, vadd_f, cvadd_f, zvadd_f, and vmmul_row.
	  Add overlay-based kernels for column-wise vmmul.
	* src/vsip/opt/cbe/spu/alf_overlay.c: New file, overlay-based kernel.
	  Dispatches to specific overlays based on comman.
	* src/vsip/opt/cbe/spu/alf_fft_split_c.c: Deleted, replaced with ...
	* src/vsip/opt/cbe/spu/olay1/zfft_f.c: New file, overlay kernel
	  for split FFT.
	* src/vsip/opt/cbe/spu/olay2/zrvmmul_col_f.c: New file, overlay
	  kernel for split real-complex column-wise vmmul.
	* src/vsip/opt/cbe/spu/alf_vmul_split_c.c: Deleted, replaced with ...
	* src/vsip/opt/cbe/spu/olay2/xvmul_f.c: New file, overlay kernel
	  for vmul.
	* src/vsip/opt/cbe/spu/olay2/zvmmul_row_f.c: New file, overlay kernel
	  for split complex row-wise vmmul.
	* src/vsip/opt/cbe/spu/olay2/xvadd_f.c: Overlay kernel for vadd.
	* src/vsip/opt/cbe/spu/olay2/zvmmul_col_f.c: New file, overlay kernel
	  for split complex column-wise vmmul.
	* src/vsip/opt/cbe/spu/ld.script: Linker script for overlays.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Make overlays.
	* src/vsip/opt/cbe/overlay_params.h: Union parameters for overlay
	  based kernels.
	* src/vsip/opt/cbe/fft_params.h: Add command field.  Add support
	  for multiple chunks per use.
	* src/vsip/opt/cbe/vmmul_params.h: Add command field.
	* src/vsip/opt/cbe/vmul_params.h: Likewise.
	* src/vsip/opt/cbe/cml/transpose.hpp: Update thresholds.
	* src/vsip/opt/ukernel.hpp: Update to new create_task signature.
	* src/vsip/opt/simd/simd_spu.hpp: Make right-shift arithmetic.
	* configure.ac: Make overlay directories.
	* m4/cbe.m4: Next {C,CXX}FLAGS_SPU setup if Cell is enabled.
	* benchmarks/task_switch.cpp: New file, measure overhead of task
	  switching.
	* tests/regressions/vmmul_rz_col.cpp: New file, regression for
	  bug in CML (issue #243).

2008-12-24  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Stride from PPU is in elements
	  (floats), not bytes.
	* tests/regressions/large_vmul.cpp: Add regression test for above.

2008-12-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/task_manager.hpp: Pass kernel library name.
	* src/vsip/opt/cbe/ppu/alf.cpp (Task::Task): Make library name an
	  argument.
	* src/vsip/opt/cbe/ppu/alf.hpp (Task::Task, create_task): Likewise.
	* src/vsip/opt/ukernel.hpp: Encode library namee in
	  DEFINE_UKERNEL_TASK.  Pass to create_task.
	* src/vsip/opt/ukernel/kernels/host/box1.hpp: Add library name.
	* src/vsip/opt/ukernel/kernels/host/box2.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/fconv.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/id1.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/cblock.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/id2.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/fft.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/vcopy.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/vmmul.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/interp.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/vmul.hpp: Likewise.
	* src/vsip/opt/ukernel/kernels/host/madd.hpp: Likewise.
	* src/vsip/GNUmakefile.inc.in: Install vsip/opt/ukernel/cbe_accel.
	* GNUmakefile.in: Likewise.
	
2008-12-16  Jules Bergmann  <jules@codesourcery.com>

	* m4/cbe.b4: Substitute CXXFLAGS_SPU and CFLAGS_SPU, set default
	  values.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Use CXXFLAGS_SPU and
	  CFLAGS_SPU.

2008-12-15  Don McCoy  <don@codesourcery.com>

	* benchmarks/dot.cpp: Fixed cases where backend is called directly, 
	  skipping the dispatcher mechanism.
	* benchmarks/maxval.hpp: Likewise.

2008-12-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in (clean): Remove .spe files.
	* src/vsip/opt/ukernel.hpp (...): Add 0-in/0-out case.
	* src/vsip/opt/ukernel/cbe_accel/alf_base.hpp: Likewise.
	* src/vsip/opt/ukernel/cbe_accel/ukernel.hpp: Pass rank to ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cblock_f.cpp: New file,
	  control-block ukernel example.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cblock_f.hpp: New file,
	  control-block ukernel example.
	* src/vsip/opt/ukernel/kernels/params/cblock_param.hpp: New file,
	  parameters for control-block ukernel example.
	* src/vsip/opt/ukernel/kernels/host/cblock.hpp: New file, host side
	  decls for control-block ukernel example.
	* src/vsip/opt/ukernel/ukernel_params.hpp: Add rank parameters.
	* tests/ukernel/cblock.cpp: New file, test for control-block ukernel
	  example.

2008-12-13  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/ukernel.hpp: Added debug info.
	* src/vsip/opt/ukernel/cbe_accel/alf_base.hpp: Adjusted iteration
	  count for the case where a 'PreArgc' stream is transferred.

2008-12-12  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add missing check for hypot declaration.

2008-12-11  Jules Bergmann  <jules@codesourcery.com>

	* tests/solver-cholesky.cpp: Split test into ...
	* tests/solvers/cholesky/cholesky.hpp: ... common bits.
	* tests/solvers/cholesky/float.cpp: ... float tests.
	* tests/solvers/cholesky/float_big.cpp: ... large float tests.
	* tests/solvers/cholesky/double.cpp: ... double tests.
	* tests/solvers/cholesky/double_big.cpp: ... large double tests.

2008-12-11  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/ops_info.hpp: Add ops count for mag.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Remove unnecessary 
	  -lfft_example.
	* apps/ssar/kernel1.hpp: Remove commented out code.

2008-12-09  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/signal/fir.hpp: Add Profile_policy specializations
	to prevent move-semantics.

2008-12-04  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/dense.hpp: Fix release() function.
	* src/vsip/opt/dispatch_profile.hpp: Add specialization for 6-ary 
	signatures.

2008-12-03  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/profile.hpp: Add 'none' feature.
	* src/vsip/opt/profile.cpp: Provide default output option.
	* src/vsip/opt/dispatch_profile.hpp: Add profiling support to dispatcher.
	* src/vsip/opt/dispatch.hpp: Likewise.
	* GNUmakefile.in: Only export XML_CATALOG_FILES if it is defined.
	
2008-12-01  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/reductions/reductions.hpp: Use new dispatcher.
	* src/vsip/core/reductions/functors.hpp: Likewise.
	* src/vsip/core/reductions/reductions_idx.hpp: Likewise.
	* src/vsip/core/cvsip/eval_reductions_idx.hpp: Likewise.
	* src/vsip/core/cvsip/eval_reductions.hpp: Likewise.
	* src/vsip/core/general_evaluator.hpp: Removed, obsolete.
	* src/vsip/opt/sal/eval_reductions.hpp: Use new dispatcher.
	* src/vsip/opt/reductions/par_reductions.hpp: Likewise.
	* src/vsip/opt/general_dispatch.hpp: Removed, obsolete.

2008-11-25  Stefan Seefeld  <stefan@codesourcery.com>

	* apps/ssar/viewtoraw.cpp: Removed. Replaced by...
	* apps/ssar/viewtopng.cpp: ...this.
	* apps/ssar/GNUmakefile: Adjust.
	* apps/ssar/make_images.sh: Adjust.
	* src/vsip_csl/matlab_utils.hpp: Fix missing name qualification.
	* benchmarks/*: Treat string literals as 'char const *'.

2008-11-24  Stefan Seefeld  <stefan@codesourcery.com>

	* benchmarks/prod.cpp: Adjust to matvec's dispatcher upgrade.

2008-11-21  Jules Bergmann  <jules@codesourcery.com>

	HPEC SSAR Optimizations
	* apps/ssar/kernel1.hpp: optimizations for Cell: Half-fast
	  convolutions, remove fftshift in compute path, ensure
	  128-byte alignment, place large dataset in huge-page memory.
	* apps/ssar/ssar.cpp: Likewise.
	* src/vsip/core/parallel/local_map.hpp (impl_set_pool): Allow
	  memory pool to be set.
	* src/vsip/core/huge_page_pool.cpp: Maintain 128-byte alignment.
	* src/vsip/opt/ukernel/kernels/cbe_accel/interp_f.hpp: Vectorize,
	  unroll, and perform freq-domain fftshfit.
	* src/vsip_csl/memory_pool.hpp: User API for memory pool extension.
	* src/vsip_csl/matlab_utils.hpp: Partial matrix fftshifts.  Freq-
	  domain matrix fftshifts.
	
2008-11-23  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/matvec_prod.hpp: Deleted unused typedefs.

2008-11-23  Don McCoy  <don@codesourcery.com>

	* tests/tutorial/*.cpp: Corrected directory path doc/tutorial to
	  doc/users-guide.

2008-11-20  Jules Bergmann  <jules@codesourcery.com>

	Fix ukernel/interp.cpp 64-bit failure:
	* src/vsip/opt/ukernel/kernels/host/interp.hpp: Use uint32_t for
	  matrix of indices (SPE expects integers to be 32-bit).
	* tests/ukernel/interp.cpp: Likewise.
	
2008-11-20  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/cvsip/dda.c: Remove C++isms from C code.
	* tests/cvsip/cdda.c: Likewise.

2008-11-19  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/sal/elementwise.hpp: Fixed bug in split-complex handling 
	  of vsmul used for outer() and gemp() evaluators.  Removed unneeded
	  svmul macros.

2008-11-18  Don McCoy  <don@codesourcery.com>

	* doc/GNUmakefile_manuals.inc.in: Modified to use new top-level source file
	  names for building documentation.
	* doc/reference-manual/reference-manual.xml: Added sub-title and made title
	  consistent with other documents.
	* doc/users-guide/users-guide.xml: Changed name of section to from 'Reference'
	  to 'Advanced Features' to disambiguate it from the Reference Manual.

2008-11-18  Don McCoy  <don@codesourcery.com>

	* doc/users-guide/tutorial.xml: Renamed to doc/users-guide/users-guide.xml.
	* doc/getting-started/quickstart.xml: Renamed to doc/getting-started/getting-started.xml.
	* doc/reference-manual/manual.xml: Renamed to doc/reference-manual/reference-manual.xml.

2008-11-18  Don McCoy  <don@codesourcery.com>

	* doc/tutorial/: Renamed to doc/users-guide/.
	* doc/quickstart/: Renamed to doc/getting-started/.
	* doc/manual/: Renamed to doc/reference-manual/.

2008-11-18  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/cvsip/matvec.hpp: Converted evalutators to use the new
	  dispatch.
	* src/vsip/core/dispatch.hpp: New file.  Provide prototypes for Signature
	  and Evaluator needed for producing reference build.
	* src/vsip/core/matvec_prod.hpp: Converted to new dispatch.
	* src/vsip/core/matvec.hpp: Likewise.
	* src/vsip/core/impl_tags.hpp: Moved operator tags from 
	  general_evaluator.hpp to here.
	* src/vsip/opt/sal/eval_misc.hpp: Converted to new dispatch.
	* src/vsip/opt/dispatch.hpp: Removed redundant definitions now found
	  in core/dispatch.hpp.
	* src/vsip/opt/cbe/cml/matvec.hpp: Converted to new dispatch.
	* src/vsip/opt/lapack/matvec.hpp: Likewise.
	* tests/matvec.cpp: Modified routine to check gemp results to use
	  error_db() instead of a loop using equal().

2008-11-12  Mike LeBlanc  <mike@codesourcery.com>

	* scripts/char.pl: Add an option -sheet to direct the script to use
	  the new 'sheetcases:' clause if available; and to use the target
	  macro 'sheet', ignoring any others.
	* scripts/char.db: Add the macro 'sheet' mentioned above.  Add
	  'sheetcases:' clauses where appropriate.  Add sets for CVSIP
	  benchmarks.
	* scripts/datasheet.pl: Add an option -sheet just to reduce the
	  verbosity.
	* scripts/ds.db: Add sets for CVSIP benchmarks.  Add sets for FFTW3
	  FFTM.  Modify a few other sets to match what is wanted in the final
	  datasheet.

2008-11-10  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/vsip_csl.h: Add new Direct Data Access interface.
	* cvsip/csl_view_api.hpp: Implement it.
	* cvsip/csl_cview_api.hpp: Likewise.
	* cvsip/support.cpp: Likewise.
	* tests/cvsip/dda.c: Test it.
	* tests/cvsip/cdda.c: Likewise.
	* cvsip/GNUmakefile.inc.in: Fix header search path..
	* cvsip/vsip.h: Fix comments.

2008-11-05  Stefan Seefeld  <stefan@codesourcery.com>

	* benchmarks/cvsip/vmul.cpp: New file.
	* src/vsip/opt/diag/eval.hpp: Add missing <typeinfo> inclusion.
	* src/vsip/initfin.cpp: Add missing <cstring> inclusion.
	* src/vsip/opt/lapack/bindings.hpp: Pass string literals as
	'char const *'.  Remove xerbla_ decl.
	* examples/cvsip/fft.c: Remove some C++-isms.
	
2008-10-29  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/operations.xml: Add a brief description of the freqswap()
	  function.
	* doc/manual/freqswap.xml: Add new page for the freqswap() function.
	* doc/manual/functions.xml: Include the new page.

2008-10-27  Jules Bergmann  <jules@codesourcery.com>

	* scripts/char.db: Update vmmul parameters.  Add missing sal req.
	  Add fftm case, update fftm parameters.  Update fastconv parameters.
	  Add correlation and product cases.
	* scripts/ds.db: New file, describes VSIPL++ datasheet.
	* scripts/datasheet.pl: Reduce verbosity for missing 'optional'
	  entries.

2008-10-22  Mike LeBlanc  <mike@codesourcery.com>

	* benchmarks/stream.cpp: Add a VSIPL++ version of the STREAM
	  benchmark.  See http://www.cs.virginia.edu/stream/

2008-10-17  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/tutorial/tutorial.xml: Bump version number to 2.0.
	* benchmarks/cvsip/fft.cpp: New benchmark.
	* benchmarks/cvsip/fftm.cpp: Likewise.
	* benchmarks/cvsip/fir.cpp: Likewise.
	* benchmarks/cvsip/GNUmakefile.inc.in: Build them.
	* benchmarks/cvsip/makefile.standalone.in: Build them stand-alone.

2008-10-16  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/context-installed.pre.in: Add C++ runtime for VSIPL tests.

2008-10-14  Stefan Seefeld  <stefan@codesourcery.com>

	* vendor/GNUmakefile.inc.in: Replace 'install' by 'install-core' etc.
	to support 'install-sv' and 'install-svxx' targets.

2008-10-13  Don McCoy  <don@codesourcery.com>

	* doc/manual/chol.xml: Corrected phrase 'template class' to 
	  simply say 'class' when referring to an instance of the class.
	  Corrected other cases that referred to the template itself to
	  read 'class template'.
	* doc/manual/sv.xml: Likewise.
	* doc/manual/lu.xml: Likewise.
	* doc/manual/qr.xml: Likewise.
	* doc/manual/operations.xml: Corrected to read 'class template' as
	  it is referring to a template, not an instance of a class.
	* doc/manual/namespaces.xml: Likewise.

2008-10-13  Don McCoy  <don@codesourcery.com>

	* doc/manual/chol.xml: New file.  Cholesky decomposition.
	* doc/manual/sv.xml: New file.  Singular value decomposition.
	* doc/manual/datatypes.xml(mat_uplo): New definition.
	  (storage_type) Fixed and expanded definition.
	* doc/manual/lu.xml: New file.  LU decomposition.
	* doc/manual/cov.xml: New file.  Covariance solver.
	* doc/manual/functions.xml: Added new include statements for new 
	  sections.
	* doc/manual/qr.xml: Various minor cleanup/formatting issues.
	  Substituted variable names to be consistent with other solvers.
	* doc/manual/toep.xml: New file.  Toeplitz solver.
	* doc/manual/llsq.xml: New file.  Linear least squares solver.

2008-10-13  Stefan Seefeld  <stefan@codesourcery.com>

	* benchmarks/cvsip/GNUmakefile.inc.in: Build VSIPL benchmarks.
	* benchmarks/cvsip/fft.cpp: VSIPL FFT benchmark.
	* benchmarks/cvsip/fftm.cpp: VSIPL FFTM benchmark.
	* benchmarks/cvsip/make.standalone.in: New stand-alone Makefile.

2008-10-13  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Create $(builddir)/benchmarks/cvsip
	* vsipl.pc.in: Add missing variables to support compilation with C++.
	* benchmarks/GNUmakefile.inc.in: Move $(benchmarks_exec_prefix) up to...
	* GNUmakefile.in: ...here. Use 'install-sv' and 'install-svxx' targets.
	* cvsip/GNUmakefile.inc.in: Likewise.
	* src/vsip/GNUmakefile.inc.in: Likewise.
	* src/vsip_csl/GNUmakefile.inc.in: Likewise.
	* examples/cvsip/GNUmakefile.inc.in: Likewise.
	* examples/GNUmakefile.inc.in: Likewise.
	* benchmarks/make.standalone.in: Fix typo.

2008-10-07  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (CPP_SPU_FLAGS): Add -DPPU_IS_32=1 if ppu is 32-bit.
	* src/vsip/opt/cbe/spu/alf_fft_split_c.c: Avoid DMA list when PPU
	  EAs are 64-bit.
	* src/vsip/opt/cbe/spu/alf_vmmul_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconvm_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconvm_c.c: Likewise.
	* tests/solver-common.hpp: Relax is_positive defn to allow
	  near zero imaginary part.
	
2008-10-06  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_vmmul_split_c.c: New file, split vmmul,
	  missing from previous commit.

2008-10-06  Jules Bergmann  <jules@codesourcery.com>

	* tests/fft_be.cpp: Fix check for CBE SDK FFT BE.

2008-10-06  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/check_config_body.hpp: Add additional output for
	  FFT BE configuration.

2008-10-03  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip/opt/ukernel/cbe_accel/buffer_resource.hpp: Use
	  CML_INCREASE_TO_SIMD_SIZE, not CML_INCREASE_TO_SIMD_ALIGNMENT.
	* src/vsip/opt/ukernel/cbe_accel/resource_manager.hpp: Include
	  assert.h.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfft_f.hpp: Include
	  spu_intrinsics.h.
	* src/vsip/opt/ukernel/kernels/cbe_accel/vcopy_f.hpp: Include
	  stdint.h.

2008-10-03  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/operations.xml: Add brief descriptions of the reduction
	  functions that did not already have entries.
	* doc/manual/functions.xml: Add a new section for man pages for reduction functions.
	* doc/manual/alltrue.xml: New file.
	* doc/manual/anytrue.xml: New file.
	* doc/manual/maxmgsqval.xml: New file.
	* doc/manual/maxmgval.xml: New file.
	* doc/manual/maxval.xml: New file.
	* doc/manual/meansqval.xml: New file.
	* doc/manual/meanval.xml: New file.
	* doc/manual/minmgsqval.xml: New file.
	* doc/manual/minmgval.xml: New file.
	* doc/manual/minval.xml: New file.
	* doc/manual/sumsqval.xml: New file.
	* doc/manual/sumval.xml: New file.

2008-10-02  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/task_manager.hpp: Add split-complex vmmul task.
	* src/vsip/opt/cbe/ppu/bindings.hpp: Handle split-complex vmmul.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Likewise.
	* src/vsip/opt/cbe/vmmul_params.h: Likewise.

2008-10-01  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_fft_split_c.c: Include assert.h.
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconvm_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconvm_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Likewise.

2008-09-30  Brooks Moses  <brooks@codesourcery.com>

	* GNUmakefile.in: Define enable_csl_documentation variable, only
	  include CSL-specific documentation pieces if it is equal to 1.
	* configure.ac (--enable-csl-documentation): New.
	* doc/GNUmakefile_manuals.inc.in: New.
	* doc/GNUmakefile.inc.in: Remove CSL-specific documentation rules,
	  and place them in doc/GNUmakefile_manuals.inc.in.

2008-09-23  Jules Bergmann  <jules@codesourcery.com>

	* doc/tutorial/tutorial.xml: Update copyright.
	* doc/quickstart/quickstart.xml: Likewise.
	* doc/manual/manual.xml: Likewise.
	
2008-09-21  Stefan Seefeld  <stefan@codesourcery.com>

	* vsip/opt/fftw3/fft_impl.cpp: Add missing <cstring> header include.

2008-09-20  Mark Mitchell  <mark@codesourcery.com>

	* LICENSE.commercial: Remove.
	* LICENSE: Don't refer to it.

2008-09-20  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in (install-core): Add
	  missing semicolon.

2008-09-20  Jules Bergmann  <jules@codesourcery.com>

	* doc/manual/*.xml: Edit manual for release.

2008-09-20  Don McCoy  <don@codesourcery.com>

	* tests/ukernel/interp.cpp: Modified to skip test for split-complex.
	* tests/ukernel/madd.cpp: Likewise.

2008-09-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/fast_transpose.hpp (transpose): Add split-complex
	  overload.
	  (transpose_unit): Likewise.
	* src/vsip/opt/expr/serial_evaluator.hpp: Move matrix copy/transpose
	  evaluator to ...
	* src/vsip/opt/expr/eval_mcopy.hpp: New file, matrix copy/transpose
	  evaluator.  Add split-complex support.
	* src/vsip/opt/expr/serial_dispatch.hpp: Include eval_mcopy.hpp.

2008-09-20  Don McCoy  <don@codesourcery.com>

	* doc/manual/datatypes.xml: Add definitions for mat_op_type, 
	  product_side_type, return_mechanism_type and storage_type.
	* doc/manual/functions.xml: Include QR solver reference.
	* doc/manual/qr.xml: New file.  QR decomposition solver.

2008-09-19  Don McCoy  <don@codesourcery.com>

	* doc/quickstart/quickstart.xml: Update --enable-parallel option
	  to reflect current possible selections.  Included information
	  about OpenMPI.  Fixed several URLs to properly close <ulink>
	  tags and/or use <para> within <listitem> blocks.  Updated link
	  to Mercury's website.  Eliminated redundant content in <ulink> 
	  tags to force it to use the URL for the text of the link (for
	  PDFs, this removes the redundant footnotes).

2008-09-19  Jules Bergmann  <jules@codesourcery.com>

	* m4/cbe.m4: Fix typo.

2008-09-19  Jules Bergmann  <jules@codesourcery.com>

	Document matvec functions.
	* doc/manual/functions.xml: Include matvec functions.
	* doc/manual/dot.xml: New file.
	* doc/manual/prodt.xml: New file.
	* doc/manual/gemp.xml: New file.
	* doc/manual/herm.xml: New file.
	* doc/manual/gems.xml: New file.
	* doc/manual/outer.xml: New file.
	* doc/manual/cumsum.xml: New file.
	* doc/manual/kron.xml: New file.
	* doc/manual/modulate.xml: New file.
	* doc/manual/prod3.xml: New file.
	* doc/manual/trans.xml: New file.
	* doc/manual/prod4.xml: New file.
	* doc/manual/cvjdot.xml: New file.
	* doc/manual/prod.xml: New file.
	* doc/manual/prodh.xml: New file.
	* doc/manual/prodj.xml: New file.

2008-09-19  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Preserve symbolic reference to $builtin_libdir.
	* vsipl++.pc.in: Define more variables.
	* vsipl.pc.in: Likewise.
	* tests/context-installed.pre.in: Likewise.
	* tests/GNUmakefile.inc.in: Likewise.

2008-09-19  Brooks Moses  <brooks@codesourcery.com>

	* m4/cbe.m4 (--with-cml-libdir): New.
	  (--with-cml-include): New.
	  (--with-cbe-sdk-sysroot): Add --sysroot to compiler options.

	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in (install-core): Only
	  install cml_kernels.so when appropriate.

2008-09-19  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/expr/binary_block.hpp: Remove debugging code.
	* src/vsip/core/fft.hpp: Add missing <cstring> header include.
	* src/vsip/opt/profile.cpp: Likewise.
	* src/vsip_csl/matlab_bin_formatter.hpp: Likewise.

2008-09-18  Brooks Moses  <brooks@codesourcery.com>

	* m4/parallel.m4: Set PAR_SERVICE when --with-mpi-include is used.

2008-09-18  Brooks Moses  <brooks@codesourcery.com>

	* benchmarks/cell/bw.cpp: Removed.

2008-09-18  Brooks Moses  <brooks@codesourcery.com>

	* m4/parallel.m4 (with-mpi-cxxflags): New option.
	  (with-mpi-libs): New option.
	* doc/quickstart/quickstart.xml: Document them.

2008-09-18  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/manual/datatypes.xml: Add documentation for Index and Domain types.
	* doc/manual/iir.xml: New file.
	* doc/manual/selection.xml: New file.
	* doc/manual/generation.xml: New file.
	* doc/manual/functions.xml: Adjust.
	* doc/manual/fft..xml: Factor out FFTM docs into...
	* doc/manual/fftm.xml: ...this.

2008-09-18  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/manual.xml: Put the appendix before the index and insert the
	  new bibliography between them. 
	* doc/manual/operations.xml: Add brief descriptions of the random class.
	* doc/manual/functions.xml: Include the new file random.xml.
	* doc/manual/random.xml: New file.  This is a "man" page for the Rand class.
	* doc/manual/biblio.xml: New file.  Add a bibliography to the manual.

2008-09-16  Don McCoy  <don@codesourcery.com>

	* apps/ssar/kernel1.hpp: Added a switch to utilize the Cell/B.E. user-
	  defined kernel for the interpolation stage. 

2008-09-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Install cml_kernels.so.
	* src/vsip/GNUmakefile.inc.in (install): Add missing ukernel dir.
	* GNUmakefile.in (hdr): Add missing ukernels headers.

2008-09-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/bindings.hpp: Fix Wall warning.
	* src/vsip/opt/cbe/cml/transpose.hpp: Likewise.
	* benchmarks/cell/fastconv.cpp: Disamiguate impl::

2008-09-15  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in (other_libs): New variables for libraries that
	  should not be included in link command, such as svpp_kernels.so.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Use it.

2008-09-15  Don McCoy  <don@codesourcery.com>

	* apps/ssar/kernel1.hpp (DIGITAL_SPOTLIGHT_BY_ROW): Added a switch to
	  control the way the digitial spotlighting computation is performed.

2008-09-15  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Bump version number to 2.0.
	* doc/manual/manual.xml: Likewise.
	* doc/quickstart/quickstart.xml: Likewise.
	* m4/lapack.m4: Fix g2c / generic lapack checks,
	remove obsolete --with-g2c-copy option.

2008-09-14  Don McCoy  <don@codesourcery.com>

	* vsip/opt/ukernel.hpp: Added Ps_helper class for three-dimensional
	  views.  Documented the principal member function as well.
	* vsip/opt/ukernel/cbe_accel/alf_base.hpp: Fixed effective address
	  calculation for DMA's larger than 16KB.  Added support for three
	  dimensional views, provided the last two are dense (because they
	  are streamed together).
	* vsip/opt/ukernel/cbe_accel/debug.hpp: Moved an include file so
	  that it would build with NDEBUG defined.
	* vsip/opt/ukernel/kernels/cbe_accel/interp_f.cpp: New file, 
	  declaration of user-defined kernel for SSAR interpolation function.
	* vsip/opt/ukernel/kernels/cbe_accel/interp_f.hpp: New file, 
	  definition for above.
	* vsip/opt/ukernel/kernels/host/interp.hpp: New file, host-side
	  portion of user-defined interpolation kernel.
	* vsip/opt/ukernel/ukernel_params.hpp: Expanded struct to include
	  values for a third dimension.
	* vsip/GNUmakefile.inc.in: Create relevant ukernel header directories.
	* GNUmakefile.in: Install relevant ukernel headers.
	* tests/ukernel/interp.cpp: Interpolation unit test.

2008-09-14  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in(CINCLUDE): Fix typo

2008-09-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/subblock.hpp (Permuted_block): Support direct data
	  interface, so Ext_data doesn't have to copy!

2008-09-13  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/alf.cpp: Use cached_alf_task_desc_init to
	  initialize task_desc.

2008-09-13  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/bindings.hpp: Add tunable_threshold to
	  vmul evaluator.
	* src/vsip/opt/cbe/cml/transpose.hpp: Add tunable_threshold to
	  transpose/copy evaluator
	* src/vsip/core/config.hpp (VSIP_IMPL_TUNE_MODE): New define that
	  forces tunable_threshold functions to return 0 when collecting
	  tuning data.
	* src/vsip/opt/ukernel.hpp: Fix wall warning.

2008-09-12  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/histo.xml: New File - man page for Histogram.
	* doc/manual/functions.xml: Modify order slightly and add an include
	  for the new file.
	* doc/manual/operations.xml: Add a brief description of histogram.

2008-09-11  Brooks Moses  <brooks@codesourcery.com>

	* doc/GNUmakefile.inc.in (doc_manuals): Add dependency on
	  bsd.xml.
	* doc/quickstart/quickstart.xml: Prefix CodeSourcery-specific
	  entities with csl_ and csl_svpp_ as appropriate.  Note that
	  by GPL we mean GPL2.

2008-09-11  Brooks Moses  <brooks@codesourcery.com>

	* examples/GNUmakefile.in: Don't add "examples" to "all".

2008-09-10  Brooks Moses  <brooks@codesourcery.com>

	* benchmarks/GNUmakefile.in: Use benchmarks_exec_prefix for
	  install location for benchmark executables.
	* benchmarks/hpec_kernel/GNUmakefile.in: Likewise.

2008-09-10  Jules Bergmann  <jules@codesourcery.com>

	Document binary elementwise functions
	* doc/manual/bor.xml: New file.
	* doc/manual/min.xml: New file.
	* doc/manual/lxor.xml: New file.
	* doc/manual/max.xml: New file.
	* doc/manual/ge.xml: New file.
	* doc/manual/lor.xml: New file.
	* doc/manual/pow.xml: New file.
	* doc/manual/gt.xml: New file.
	* doc/manual/le.xml: New file.
	* doc/manual/band.xml: New file.
	* doc/manual/atan2.xml: New file.
	* doc/manual/jmul.xml: New file.
	* doc/manual/bxor.xml: New file.
	* doc/manual/minmgsq.xml: New file.
	* doc/manual/maxmgsq.xml: New file.
	* doc/manual/lt.xml: New file.
	* doc/manual/hypot.xml: New file.
	* doc/manual/eq.xml: New file.
	* doc/manual/fmod.xml: New file.
	* doc/manual/ne.xml: New file.
	* doc/manual/minmg.xml: New file.
	* doc/manual/maxmg.xml: New file.
	* doc/manual/land.xml: New file.
	
	Document ternary elementwise functions
	* doc/manual/sbm.xml: New file.
	* doc/manual/expoavg.xml: New file.
	* doc/manual/msb.xml: New file.
	* doc/manual/ma.xml: New file.
	* doc/manual/am.xml: New file.
	* doc/manual/ite.xml: New file.
	
	* doc/manual/functions.xml: Include new files.
	* doc/manual/operations.xml: List binary and ternary functions.

2008-09-10  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/fir.xml: Remove " = VSIP_DEFAULT_VALUE_TYPE" from class synopsis;
	  add missing ()'s to <indexterm> for call operator; change enumeration items
	  from <literal> or <code> to <constant>.
	* doc/manual/conv.xml: Likewise.
	* doc/manual/corr.xml: Likewise.
	* doc/manual/fft.xml: Change enumeration items from <literal> or <code> to
	  <constant>.

2008-09-09  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/conv1d.xml: Remove this file to prepare to add new conv.xml.
	* doc/manual/conv2d.xml: Likewise.
	* doc/manual/corr1d.xml: Remove this file to prepare to add new corr.xml.
	* doc/manual/corr2d.xml: Likewise.
	* doc/manual/conv.xml: Combine 1D and 2D into one "structured" page for the
	  Correlation class.
	* doc/manual/corr.xml: Combine 1D and 2D into one "structured" page for the
	  Convolution class.
	* doc/manual/fir.xml: Rework this page into "structured" form and add missing
	  member functions.
	* doc/manual/functions.xml: Modify the includes to reflect the above
	  changes.  Reorganize the signal items into two sections: functions and
	  objects.
	* doc/manual/datatypes.xml: Insert missing 'anchor' for references to alg_hint_type.
	* doc/manual/fft.xml: Change the "id" for alg_hint_type to match the
	  anchor for the type, changed above to match the format of other anchors.

2008-09-09  Jules Bergmann  <jules@codesourcery.com>

	* doc/manual/log.xml: Remove newline after <title>.
	* doc/manual/log10.xml: Likewise.
	* doc/manual/div.xml: Likewise.
	* doc/manual/tan.xml: Likewise.
	* doc/manual/cos.xml: Likewise.
	* doc/manual/add.xml: Likewise.
	* doc/manual/sin.xml: Likewise.
	* doc/manual/sub.xml: Likewise.
	* doc/manual/sqrt.xml: Likewise.
	* doc/manual/mul.xml: Likewise.
	* doc/manual/sq.xml: Likewise.
	* doc/manual/mag.xml: Likewise.
	* doc/manual/magsq.xml: Likewise.
	* doc/manual/exp.xml: Likewise.
	* doc/manual/exp10.xml: Likewise.
	
	* doc/manual/atan.xml: New file, document arc tangent elementwise
	  function.
	* doc/manual/acos.xml: New file, document arc cosine elementwise
	  function.
	* doc/manual/tanh.xml: New file, document hypberbolic tangent
	  elementwise function.
	* doc/manual/asin.xml: New file, document arc sine elementwise
	  function.
	* doc/manual/cosh.xml: New file, document hyperbolic cosine
	  elementwise function.
	* doc/manual/arg.xml: New file, document complex arg elementwise
	  function.
	* doc/manual/floor.xml: New file, document floating-point floor
	  elementwise function.
	* doc/manual/real.xml: New file, document complex real elementwise
	  function.
	* doc/manual/is_normal.xml: New file, document floating-point
	  is_normal elementwise function.
	* doc/manual/conj.xml: New file, document complex conjugate
	  elementwise function.
	* doc/manual/sinh.xml: New file, document hyperbolic sine
	  elementwise function.
	* doc/manual/recip.xml: New file, document recipricol elementwise
	  function.
	* doc/manual/bnot.xml: New file, document bitwise not elementwise
	  function.
	* doc/manual/is_nan.xml: New file, document floating-point is_nan
	  elementwise function.
	* doc/manual/is_finite.xml: New file, document floating-point
	  is_finite elementwise function.
	* doc/manual/neg.xml: New file, document arithmetic negate
	  elementwise function.
	* doc/manual/rsqrt.xml: New file, document recipricol elementwise
	  function.
	* doc/manual/ceil.xml: New file, document floating-point ceiling
	  elementwise function.
	* doc/manual/lnot.xml: New file, document logical not elementwise
	  function.
	* doc/manual/euler.xml: New file, document euler elementwise
	  function.
	* doc/manual/imag.xml: New file, document complex imaginary part
	  elementwise function.
	
	* doc/manual/functions.xml: Include new elementwise functions.
	* doc/manual/operations.xml: Add xrefs to new elementwise functions.
	
2008-09-05  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Define STRIP variable.
	* GNUmakefile.in: Use it.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Likewise.
	* doc/GNUmakefile.inc.in: Create numbered sections.
	
2008-09-04  Don McCoy  <don@codesourcery.com>

	* apps/ssar/GNUmakefile: Changed loop count when profiling back to 10.
	* apps/ssar/kernel1.hpp: Added member data to store calculated 
	  operation counts.  Used those in place of hard-coded operation counts
	  in profiling statements.  Rolled the subtraction of the number of 
	  interpolation sidelobes into the matrix of indices for the output 
	  matrix.

2008-09-03  Brooks Moses  <brooks@codesourcery.com>

	* GNUmakefile.in: Export XML_CATALOG_FILES.

2008-09-02  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/ukernel/cbe_accel/alf_base.hpp: Modified the way offsets
	  are calculated to account for the possibility of different data types 
	  for each of views being streamed to a kernel.  Added utility function
	  for calculating the byte offset of an input segment.
	* src/vsip/opt/ukernel/kernels/cbe_accel/scmadd_f.cpp: New file, 
	  extends multiply-add function to allow for a scalar-complex multiply.
	* src/vsip/opt/ukernel/kernels/cbe_accel/scmadd_f.hpp: new file, 
	  scalar-complex multiply-add kernel.
	* src/vsip/opt/ukernel/kernels/host/madd.hpp: Declare scmadd kernel.
	* tests/ukernel/madd.cpp: Adjusted tests for above.

2008-09-02  Brooks Moses  <brooks@codesourcery.com>

	* configure.ac (with-xml-catalog-files): New option.
	* GNUmakefile.in: Pull XML_CATALOG_FILES from configure.

2008-09-01  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmul_f.cpp: New file, zvmul 
	  kernel declaration.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmul_f.hpp: Updated include 
	  file location.
	* src/vsip/opt/ukernel/kernels/host/vmul.hpp: Added split-complex 
	  kernel map declaration.

2008-09-01  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/ukernel.hpp: Added debug printfs to Ps_helper dump()
	  routine and corrected calls to it in apply() function.  Added
	  new apply() and operator() functions for three inputs/one output.
	* src/vsip/opt/ukernel/cbe_accel/alf_base.hpp: Added a Kernel_helper
	  routine for three inputs and one output.
	* src/vsip/opt/ukernel/cbe_accel/resource_manager.hpp: Corrected typo.
	* src/vsip/opt/ukernel/cbe_accel/ukernel.hpp: Corrected @file path
	  and inclusion macros.  Partially documented Pinfo data members.
	* src/vsip/opt/ukernel/cbe_accel/debug.hpp: New file. Debug dump
	  routine for Pinfo structure.
	* src/vsip/opt/ukernel/kernels/cbe_accel/madd_f.cpp: New file.  
	  Kernel declaration for elementwise scalar multiply-add.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cmadd_f.cpp: New file.
	  Kernel declaration for elementwise complex interleaved multiply-add.
	* src/vsip/opt/ukernel/kernels/cbe_accel/madd_f.hpp: New file.  
	  Elementwise multiply-add kernel for scalar floats.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cmadd_f.hpp: New file.  
	  Elementwise multiply-add kernel for complex interleaved.
	* src/vsip/opt/ukernel/kernels/cbe_accel/id1_f.hpp: Fixed @file path.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmul_f.hpp: Fixed @file path.
	* src/vsip/opt/ukernel/kernels/cbe_accel/id2_f.hpp: Fixed @file path.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfft_f.hpp: Fixed @file path.
	* src/vsip/opt/ukernel/kernels/cbe_accel/vmul_f.hpp: Fixed @file path.
	* src/vsip/opt/ukernel/kernels/host/madd.hpp: New file.  Host-side
	  definitions for elementwise multiply-add user-defined kernel.
	* tests/GNUmakefile.inc.in: Added ukernel sub-directory to sources.
	* tests/ukernel/vmul.cpp: Uncommented test cases.
	* tests/ukernel/madd.cpp: New file.  Tests for mul-add kernel.

2008-08-29  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/quickstart/quickstart.xml: Add section about
	building C-VSIPL apps.
	* vsipl.pc.in: Add missing variables.
	* src/vsip/core/block_fill.hpp: Add missing specializations.
	* src/vsip/core/config.hpp: Remove global macros after use.
	* src/vsip/opt/fftw3/fft.cpp: Clarify obscure code.
	* src/vsip_csl/output.hpp: Add operator<< for tensors.
	* src/vsip/core/dense_fwd.hpp: Add documentation.
	* src/vsip/dense.hpp: Likewise.
	* src/vsip/core/fft.hpp: Likewise.
	* src/vsip/opt/dispatch.hpp: Likewise.

2008-08-28  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/manual/fft.xml: New Fft(m) documentation bits.
	* doc/manual/functions.xml: Integrate it.
	* doc/manual/datatypes.xml: Add missing anchor.
	
2008-08-27  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/impl_tags.hpp: Add Opt_tag.

2008-08-27  Jules Bergmann  <jules@codesourcery.com>

	* tests/convolution.cpp: Split test into ...
	* tests/convolution/convolution.hpp: New file, ... common bits.
	* tests/convolution/regr.cpp: New file, ... regressions.
	* tests/convolution/complex_double.cpp: New file, ... complex double.
	* tests/convolution/dist.cpp: New file, ... distributed.
	* tests/convolution/float.cpp: New file, ... float.
	* tests/convolution/double.cpp: New file, ... double.
	* tests/convolution/int.cpp: New file, ... int.
	* tests/convolution/complex_float.cpp: New file, ... complex float.

2008-08-27  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fastconv.cpp: Fix number of DTL entires
	  reserved, conservatively at 8.  Fixes fastconv.cpp test failure.
	* src/vsip/opt/ukernel.hpp: Avoid excess pre_chunks.
	* src/vsip/opt/diag/eval.hpp: Add Opt_tag to dispatch_name.
	* tests/coverage_binary_mul_m.cpp: Fix typo in comment.
	* tests/ukernel/vmmul.cpp: Fix typo in header
	* benchmarks/vmmul.cpp: Add usage, improve checking.

2008-08-26  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/GNUmakefile.inc.in: Add <benchmark>.prof rule to create
	  benchmark binaries with profiling enabled.

2008-08-26  Jules Bergmann  <jules@codesourcery.com>

	* README.cbe: Update for binary CML package.
	* examples/cell/setup.sh: New file, example CBE configury options.

2008-08-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/ukernel.hpp: Make 64-bit clean.

2008-08-26  Jules Bergmann  <jules@codesourcery.com>

	* tests/coverage_binary_mul.cpp: Remove file, split into ...
	* tests/coverage_binary_mul_vi.cpp: New file, ... vector/int cases.
	* tests/coverage_binary_mul_vf.cpp: New file, ... vector/float cases.
	* tests/coverage_binary_mul_vd.cpp: New file, ... vector/double cases.
	* tests/coverage_binary_mul_m.cpp: New file, ... matrix cases.
	
	* tests/extdata-subviews.cpp: Remove file, split into ...
	* tests/extdata-subviews.hpp: New file, ... common routines.
	* tests/extdata_subviews_v.hpp: New file, ... vector cases.
	* tests/extdata_subviews_m.hpp: New file, ... matrix cases.
	* tests/extdata_subviews_t.hpp: New file, ... tensor cases.
	
2008-08-26  Jules Bergmann  <jules@codesourcery.com>

	* m4/cbe.m4: Detect CML libdir (lib or lib64).
	* m4/fft.m4: Remove debug echo.
	* configure.ac: Modify help for --enable-cvsip.

	* doc/manual/operations.xml: Expand list of unary elementwise
	  fuctions.  Link to added man pages.
	* doc/manual/functions.xml: Include new manage pages.
	* doc/manual/log.xml: New file, log man page.
	* doc/manual/log10.xml: New file, log man page.
	* doc/manual/tan.xml: New file, log man page.
	* doc/manual/sq.xml: New file, log man page.
	* doc/manual/cos.xml: New file, log man page.
	* doc/manual/sin.xml: New file, log man page.
	* doc/manual/sqrt.xml: New file, log man page.
	* doc/manual/exp.xml: New file, log man page.
	* doc/manual/exp10.xml: New file, log man page.
	* doc/manual/mag.xml: New file, log man page.
	* doc/manual/magsq.xml: New file, log man page.

2008-08-25  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_fft_split_c.c: Check in missing file,
	  split FFT.

2008-08-25  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/cvsip/ctensor.c: Fix blockbind call.
	* cvsip/vsip.h: Add missing bits.
	* cvsip/scalar_api.h: Likewise.
	
2008-08-22  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/view.hpp: Fix function signature.
	* src/vsip/core/allocation.hpp: Fix undefined behavior, part II.
	* src/vsip/core/signal/fir.hpp: Likewise.
	* cvsip/cfir_api.hpp: Adjust.

2008-08-22  Jules Bergmann  <jules@codesourcery.com>

	* cvsip/fft2d_api.hpp: Fix Wall warnings.
	* cvsip/fir_api.hpp: Likewise.
	* cvsip/cfir_api.hpp: Likewise.
	* cvsip/fftm_api.hpp: Likewise.
	* cvsip/fft3d_api.hpp: Likewise.
	* cvsip/fft_api.hpp: Likewise.
	* cvsip/qr_api.hpp: Likewise.
	* cvsip/conv1d_api.hpp: Likewise.
	* cvsip/corr1d_api.hpp: Likewise.
	* cvsip/iir_api.hpp: Likewise.
	* cvsip/cqr_api.hpp: Likewise.
	* cvsip/ciir_api.hpp: Likewise.
	* cvsip/conv2d_api.hpp: Likewise.
	* cvsip/corr2d_api.hpp: Likewise.
	* cvsip/block.hpp: Likewise.
	* tests/cvsip/vector.c: Likewise.
	* tests/cvsip/output.h: Likewise.
	* tests/cvsip/fft.c: Likewise.

2008-08-22  Don McCoy  <don@codesourcery.com>

	* apps/ssar/diffview.cpp: Allow little-endian data files to be 
	  read properly on big-endian systems.
	* apps/ssar/GNUmakefile: Changed to let profile formatting script 
	  be found even if 'prefix' is not set.  Added 'show' target.
	  Added -f flag to 'clean' target commands.  Renamed 'profile'
	  target to include the scale factor (1 or 3 now).
	* apps/ssar/kernel1.hpp (scale_): Made scale parameter floating 
	  point instead of an integer.
	  (swap_bytes_): Made new parameter to control byte-swapping.
	* apps/ssar/make_set1_images.sh: Generalized to 'make_images.sh'.
	* apps/ssar/viewtoraw.cpp: Corrected location of 'view_cast.hpp'
	  header file.  Made compatible with big-endian systems.
	* apps/ssar/ssar.cpp: Made compatible with big-endian systems.
	* apps/ssar/data1: New directory with binary views for SCALE
	  factor of 1.
	* apps/ssar/data1/dims.txt: New file, dimensions for SCALE == 1.
	* apps/ssar/make_images.sh: Converts saved views first to raw
	  format, then to pgm format.  Size parameters are passed in on
	  the command-line.
	* apps/ssar/set1: Renamed directory 'data3' to show scale factor.
	* apps/ssar/set1/dims.txt: Moved to data3 directory (SCALE == 3).
	* apps/ssar/README: Modified to explain new make targets.

2008-08-22  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/vmmul.hpp: Use vector/matrix value types when
	  re-dispatching vmmul in terms of vmul.
	* tests/vmmul.cpp: Add coverage for float/complex vmmul.

2008-08-22  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/fft.m4: Bail out if fftw backend is enabled but no fftw header
	is found.
	* cvsip/vsip.h: Add missing prototypes.
	* tests/cvsip/matrix.c: Fix return value.
	* tests/cvsip/elementwise.c: Likewise.
	* tests/cvsip/cvector.c: Fix view deallocation.
	* tests/cvsip/fft.c: Fix RNG creation parameters.
	
2008-08-22  Jules Bergmann  <jules@codesourcery.com>

	* m4/fft.m4: Fix fftw_has_{float,double,long_double} logic when
	  using builtin FFTW.

2008-08-21  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in: Always include csldocbookdir/GNUmakefile.inc

2008-08-21  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/ukernel.hpp: Guard iostream include, generalize
	  align_shift computation for split.
	* src/vsip/opt/ukernel/cbe_accel/buffer_resource.hpp: Minor
	  debug changes.
	* src/vsip/opt/ukernel/cbe_accel/fft_resource.hpp: Undef DEBUG when
	  done.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmmul_f.cpp: New file,
	  split-complex vmmul.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmmul_f.hpp: New file,
	  split-complex vmmul.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfconv_f.cpp: New file,
	  split-complex fast convolution.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfft_f.hpp: Use Fft/Buffer
	  resources.
	* src/vsip/opt/ukernel/kernels/host/fconv.hpp: Add split kernel
	  lookup.
	* tests/ukernel/fft.cpp: Avoid large FFT when split.  CML needs
	  to implement split out-of-place, modify input FFT.
	* tests/ukernel/fconv.cpp: Minor debug changes.

2008-08-21  Jules Bergmann  <jules@codesourcery.com>

	* tests/fft_be.cpp: Add XFails for cbe double FFTMs.

2008-08-20  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/datatypes.xml: Insert a section about enumeration
	  types for signal processing functions.

2008-08-20  Jules Bergmann  <jules@codesourcery.com>

	Support user-defined kernels (ukernels):
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Make ALF handle
	  avail for ukernel driver.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Build CBE ukernels.
	* src/vsip/opt/ukernel.hpp: New file, 
	* src/vsip/opt/ukernel/cbe_accel/alf_base.hpp: New file, ALF base
	  for CBE ukernels.
	* src/vsip/opt/ukernel/cbe_accel/buffer_resource.hpp: New file, 
	  allow sharing of buffer resources.
	* src/vsip/opt/ukernel/cbe_accel/resource_manager.hpp: New file, 
	  allow sharing resourcess.
	* src/vsip/opt/ukernel/cbe_accel/ukernel.hpp: New file, 
	  common CBE ukernel bits.
	* src/vsip/opt/ukernel/cbe_accel/fft_resource.hpp: New file, 
	  allow sharing of FFT resources.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cvmul_f.hpp: New file, 
	  example cvmul ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cvmul_f.cpp: New file, 
	  example interleaved cvmul ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cvmmul_f.hpp: New file, 
	  example interleaved vmmul ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cvmmul_f.cpp: New file, 
	  example interleaved vmmul ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/vcopy_f.hpp: New file, 
	  example vector copy ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/vcopy_f.cpp: New file, 
	  example vector copy ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/fused_kernel.hpp: New file, 
	  example fused ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfft_f.hpp: New file, 
	  example split FFT ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zfft_f.cpp: New file, 
	  example split FFT ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/box1_f.hpp: New file, 
	  example 1D box ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/box1_f.cpp: New file, 
	  example 1D box ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/box2_f.hpp: New file, 
	  example 2D box ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/box2_f.cpp: New file, 
	  example 2D box ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/id1_f.hpp: New file, 
	  example ID1 ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/id1_f.cpp: New file, 
	  example ID1 ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/id2_f.hpp: New file, 
	  example ID2 ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/id2_f.cpp: New file, 
	  example ID2 ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfconv_f.cpp: New file, 
	  example interleaved fast convolution ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfft_f.hpp: New file, 
	  example interleaved FFT ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/cfft_f.cpp: New file, 
	  example interleaved FFT ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/zvmul_f.hpp: New file, 
	  example split zvmul ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/vmul_f.hpp: New file, 
	  example vmul ukernel.
	* src/vsip/opt/ukernel/kernels/cbe_accel/vmul_f.cpp: New file, 
	  example vmul ukernel.
	* src/vsip/opt/ukernel/kernels/params/box1_param.hpp: New file, 
	  parameters for box1 ukernel.
	* src/vsip/opt/ukernel/kernels/params/box2_param.hpp: New file, 
	  parameters for box2 ukernel.
	* src/vsip/opt/ukernel/kernels/params/id2_param.hpp: New file, 
	  parameters for ID2 ukernel.
	* src/vsip/opt/ukernel/kernels/params/fft_param.hpp: New file, 
	  parameters for FFT ukernel.
	* src/vsip/opt/ukernel/kernels/params/vmmul_param.hpp: New file, 
	  parameters for vmmul ukernel.
	* src/vsip/opt/ukernel/kernels/params/fused_param.hpp: New file, 
	  parameters for fused ukernel.
	* src/vsip/opt/ukernel/kernels/host/box1.hpp: New file, host code
	  for box1 ukernel.
	* src/vsip/opt/ukernel/kernels/host/box2.hpp: New file, host code
	  for box2 ukernel.
	* src/vsip/opt/ukernel/kernels/host/fconv.hpp: New file, host code
	  for fast convolution ukernel.
	* src/vsip/opt/ukernel/kernels/host/id1.hpp: New file, host code
	   for id1 ukernel.
	* src/vsip/opt/ukernel/kernels/host/id2.hpp: New file, host code
	   for id2 ukernel.
	* src/vsip/opt/ukernel/kernels/host/fft.hpp: New file, host code
	  for fft ukernel.
	* src/vsip/opt/ukernel/kernels/host/vcopy.hpp: New file, host code
	  for vcopy ukernel.
	* src/vsip/opt/ukernel/kernels/host/vmmul.hpp: New file, host code
	  for vmmul ukernel.
	* src/vsip/opt/ukernel/kernels/host/vmul.hpp: New file, host code for
	  vmul ukernel.
	* src/vsip/opt/ukernel/ukernel_params.hpp: New file, parameters
	  for ukernels.
	* src/vsip_csl/ukernel.hpp: New file, user access to ukernels.
	* configure.ac: Make ukernel source directoreis.
	* tests/ukernel/id1.cpp: New file, unit test for ID1 example ukernel.
	* tests/ukernel/id2.cpp: New file, unit test for ID2 example ukernel.
	* tests/ukernel/fft.cpp: New file, unit test for FFT example ukernel.
	* tests/ukernel/vcopy.cpp: New file, unit test for copy example
	  ukernel.
	* tests/ukernel/vmmul.cpp: New file, unit test for vmmul example
	  ukernel.
	* tests/ukernel/vmul.cpp: New file, unit test for vmul example ukernel.
	* tests/ukernel/box1.cpp: New file, unit test for 1D box filter
	  example ukernel.
	* tests/ukernel/box2.cpp: New file, unit test for 2D box filter
	  example ukernel.
	* tests/ukernel/fconv.cpp: New file, unit test for fast-conv example
	  ukernel.
	
2008-08-19  Jules Bergmann  <jules@codesourcery.com>

	* tests/correlation.cpp: Adjust threshold on Cell.

2008-08-19  Jules Bergmann  <jules@codesourcery.com>

	Ported from branches/afrl-ncet:
	* src/vsip/opt/cbe/pwarp_params.h (VSIP_IMPL_CBE_PWARP_BUFFER_SIZE): 
	  Move SPU kernel input image buffer size here.
	* src/vsip/opt/cbe/ppu/pwarp.cpp: Check if workblocks will exceed
	  input image buffer size.  Add schemes to try smaller worblock
	  sizes until one fits.
	* src/vsip/opt/cbe/spu/alf_pwarp_ub.cpp: Use CBE_PWARP_BUFFER_SIZE.

2008-08-19  Jules Bergmann  <jules@codesourcery.com>

	* tests/vsip_csl/matlab_bin_file/matlab_bin_file.cpp: Add missing
	  library initialization.
	* tests/vsip_csl/matlab_iterator.cpp: Likewise.

2008-08-19  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/operations.xml: Insert a brief paragraph about FIR.
	* doc/manual/fir.xml: New file containing a "man" page for FIR.
	* doc/manual/functions.xml: Include the new file in the "man" chapter.

2008-08-19  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/operations.xml: Insert brief paragraphs for vector and
	  matrix correlation.
	* doc/manual/corr1d.xml: New file.  Chapter section for 1-D
	  correlation.
	* doc/manual/corr2d.xml: New file.  Chapter section for 2-D
	  correlation.
	* doc/manual/functions.xml: Include the new files.

2008-08-19  Jules Bergmann  <jules@codesourcery.com>
	
	* src/vsip/core/solver/llsqsol.hpp: Use Qrd_traits to determine
	  whether skinny or full QR is appropriate.
	* src/vsip/core/solver/qr.hpp: Define Qrd_traits.
	* src/vsip/core/cvsip/qr.hpp: Support Qrd_traits.
	* src/vsip/opt/sal/qr.hpp: Support Qrd_traits.
	* src/vsip/opt/cbe/cml/qr.hpp: Support Qrd_traits.
	* src/vsip/opt/lapack/qr.hpp: Support Qrd_traits.
	
2008-08-18  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/operations.xml: Add a short paragraph about 2-D convolution.
	* doc/manual/conv1d.xml: Insert "1-D" in the title; change an instance
	  of "const_Vector" to "Vector".
	* doc/manual/conv2d.xml: New file.  Starting from the 1-D file, adapt it
	  to 2-D.
	* doc/manual/functions.xml: Include the new file.

2008-08-18  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/hanning.xml: Remove parameters from section title; use <function>
	  and <code> instead of <literal>; use <programlisting> instead of <screen>.
	* doc/manual/blackman.xml: Likewise.
	* doc/manual/cheby.xml: Likewise.
	* doc/manual/kaiser.xml: Likewise.
	* doc/manual/operations.xml: Insert a brief section about vector convolution.
	* doc/manual/conv1d.xml: New file containing a "man" page for vector convolution.
	* doc/manual/functions.xml: Include the new file in the proper section.

2008-08-13  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/cfir_api.hpp: Unpack symmetric kernels prior to handing 
	them down to SV++.
	* src/vsip/core/signal/fir.hpp: Add new constructor to support
	the above.
	* src/vsip/core/allocation.hpp: Fix undefined behavior.

2008-08-06  Jules Bergmann  <jules@codesourcery.com>

	* doc/manual/div.xml: New man page for div functions.
	* doc/manual/sub.xml: New man page for sub functions.
	* doc/manual/mul.xml: New man page for mul functions.
	* doc/manual/operations.xml: Link to new man pages.
	* doc/manual/add.xml: Add note on operator syntax.
	* doc/manual/functions.xml: Include new man pages, organize
	  by category.

2008-07-29  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/cml/conv.hpp: Swapped order of kernel size and 
	  output size parameters.  Added scope resolution to a call to 
	  conv_same to eliminate a compiliation error.	

2008-07-29  Mike LeBlanc  <mike@codesourcery.com>

	* doc/manual/operations.xml: Add brief descriptions of the window functions.
	* doc/manual/functions.xml: Include the new man page files.
	* doc/manual/hanning.xml: New file.
	* doc/manual/blackman.xml: New file.
	* doc/manual/cheby.xml: New file.
	* doc/manual/kaiser.xml: New file.

2008-07-28  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/block.hpp: Add missing Block<3...>::put() functions.
	* cvsip/fft3d_api.hpp: New file.
	* cvsip/fft3d.cpp: New file.
	* tests/cvsip/fft3d.c: New file.
	* src/vsip/random.hpp: Add support for tensor randomization.
	* cvsip/random_api.hpp: Likewise.
	* tests/cvsip/output.h: Add support for tensors.
	* tests/cvsip/test.h: Likewise.

2008-07-28  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/cml/transpose.hpp: Fix buglet caught by
	  regressions/transpose-nonunit.cpp.

2008-07-22  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/cml/fir.hpp: Use CML FIR state copy.

2008-07-22  Jules Bergmann  <jules@codesourcery.com>

	* tests/regressions/fir_copy_cons.cpp: New regression test,
	  illustrates FIR copy cons failure w/ CML FIR BE.

2008-07-22  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/opt/cbe/cml/fir.hpp: Arrange for the dispatcher's rtvalid
	  to return true when the input size is a multiple of the decimation.
	  Also remove the work-around throw in the copy constructor.

2008-07-18  Don McCoy  <don@codesourcery.com>

	* src/vsip_csl/matlab.hpp: Added another template parameter to allow
	  the addition of two specializations for correctly handling the
	  swapping of complex values.
	* src/vsip_csl/save_view.hpp: Fixed problem in save: view is now 
	  cloned before bytes are swapped to avoid altering source view.
	* tests/vsip_csl/load_view_cplx.cpp: Complex tests from load_view.cpp.
	  Added regression tests for save_view (source view swapped in place)
	  and for complex value swapping issue.
	* tests/vsip_csl/load_save.hpp: Common code from load_view.cpp.
	* tests/vsip_csl/load_view.cpp: Split off into second source file
	  (load_view_cplx.cpp) to speed compilation.  Scalar types are tested
	  in this file.
	
2008-07-11  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/opt/cbe/cml/conv.hpp: Create a CML back-end for "same"
	  support 2-D convolution.

2008-07-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_pwarp_ub.cpp: Put ALF decls in extern "C"
	  block.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Turn off unnecessary
	  C++ features for C++ ALF kernels.
	* src/vsip/opt/cbe/spu/alf_fconvm_c.c: Add missing ALF EXPORT API.
	* src/vsip/opt/cbe/cml/transpose.hpp: Disable transpose for
	  non-unit-stride.  Fix unit-stride+dense check.  Fix Wall warnings.
	* src/vsip/opt/cbe/cml/matvec.hpp: Fix Wall warnings.
	* src/vsip/opt/cbe/cml/fir.hpp: Throw on copy constructor.
	  Disable BE if decimation != 1.
	* src/vsip/opt/cbe/cml/conv.hpp: Fix Wall warnings.
	* src/vsip/opt/cbe/cml/corr.hpp: Fix Wall warnings.
	* src/vsip_csl/stencil/boundary_factory.hpp: Fix Wall warnings.
	* tests/fft_be.cpp: XFail CML for double precision FFT.
	* tests/test-prod.hpp: Add adjustable threshold.
	* tests/ref-impl/signal-fir.cpp: Use equal.
	* tests/regressions/par_transpose.cpp: Fix conversion.
	* tests/matvec-prod.cpp: Adjust threshold on CBE.
	* GNUmakefile.in (INSTALL_PROGRAM): Define it.

2008-07-10  Brooks Moses  <brooks@codesourcery.com>

	* README.cbe: New file.

2008-07-10  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip/opt/cbe/cml/qr.hpp: Update calls to cml_trisolve_lower_f.

2008-07-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Install svpp_kernels.so.

2008-07-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip_csl/save_view.hpp: Add missing include.

2008-07-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/task_manager.hpp: Remove V++ level caching.
	* src/vsip/opt/cbe/ppu/task_manager.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/alf.cpp: Use CML alf_chache routines.
	* src/vsip/opt/cbe/ppu/alf.hpp: Destroy task on destruction.
	* src/vsip/opt/cbe/cml/matvec.hpp: Fix Wall warnings.
	* tests/regressions/alf_caching.cpp: New file, test alternate
	  CML and VSIPL++ usage of ALF kernels.

2008-07-09  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip/core/solver/lu.hpp: Add inclusion of cml/lu.hpp
	  file if appropriate, add Cml_tag to implementation list,
	  fix comment typo.
	* src/vsip/opt/cbe/cml/lu.hpp: New file.

2008-07-09  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip/core/solver/qr.hpp: Add inclusion of cml/qr.hpp
	  file if appropriate, add Cml_tag to implementation list,
	  fix comment typo.
	* src/vsip/opt/cbe/cml/qr.hpp: New file.
	* src/vsip/opt/sal/qr.hpp: Fix comment typos.
	* tests/solver-qr.cpp: Add exclusions for tests that require
	  qrd_saveq1 storage when using CML.

2008-07-09  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/fftm_api.hpp: New file.
	* cvsip/fftm.cpp: New file.
	* tests/cvsip/fftm.c: New file.
	* cvsip/reductions_api.hpp: New file.
	* cvsip/reductions.cpp: New file.
	* cvsip/scalar_api.hpp: New file.
	* cvsip/scalar.cpp: New file.
	* cvsip/fft2d_api.hpp: New file.
	* cvsip/fft2d.cpp: New file.
	* tests/cvsip/fft2d.cpp: New file.
	
2008-07-04  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/cfir_api.hpp: New file.
	* cvsip/cfir.cpp: New file.
	* cvsip/ciir_api.hpp: New file.
	* cvsip/ciir.cpp: New file.
	* cvsip/fir_api.hpp: New file.
	* cvsip/fir.cpp: New file.
	* src/vsip/domain.hpp: Remove conversion operator.
	* cvsip/selection.cpp: Use adapter predicate to avoid implicit conversion.
	* cvsip/matvec_api.hpp: Use temporary for herm() as in-place is not (yet) supported.
	* cvsip/random_api.hpp: Add missing mrand functions.
	* cvsip/vsip.h: Add missing functions.
	
2008-06-30  Jules Bergmann  <jules@codesourcery.com>

	* m4/fft.m4: Fix definition of VSIP_IMPL_FFTW3_HAVE_{TYPE} when
	  neutral_acconfig != y.

2008-06-30  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/profile.hpp: Add macros for profile masks.
	* src/vsip/core/matvec.hpp: Use macros to disable profiling Scopes.

2008-06-27  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/core/signal/conv_common.hpp: Insert template functions to
	support 2-D convolutions for the various support regions.
	* src/vsip/opt/cbe/cml/conv.hpp: Add a CML back-end for 2-D
	convolutions.  Remove some superfluous reinterpret_cast-s.
	* src/vsip/core/signal/corr_common.hpp: Add missing 2-D comment.
	* src/vsip/opt/cbe/cml/corr.hpp: Likewise.

2008-06-26  Don McCoy  <don@codesourcery.com>

	* src/vsip_csl/load_view.hpp: Add capability to swap bytes.  Default 
	  behavior remains to not swap.
	* src/vsip_csl/save_view.hpp: Likewise.
	* tests/vsip_csl/load_view.cpp: Extend test to cover cases where 
	  bytes are swapped (equivalent to writing in big-endian format).

2008-06-25  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/iir_api.hpp: New file.
	* cvsip/iir.c: New file.
	* tests/cvsip/iir.c: New file.

	* src/vsip/complex.hpp (recttopolar): Allow arguments to alias.
	* src/vsip/opt/signal/corr_ext.hpp: Add missing header(s).
	* src/vsip/opt/signal/corr_opt.hpp: Likewise.
	* src/vsip/core/view_cast.hpp: Likewise.
	* src/vsip/matrix.hpp: Add a missing 'const' qualifier.
	* src/vsip/tensor.hpp: Fix using declaration to refer to the correct parent class.
	* src/vsip/opt/lapack/bindings.hpp: adjust data pointer to always point 
	to the start of the array, also for negative strides. 

	* src/vsip/domain.hpp: Add implicit conversion from Index<1> to index_type.
	* cvsip/selection_api.hpp: Various additions.
	* cvsip/selection.cpp: Add support for {p}first_{d}

	* tests/cvsip/correlation.c
	* tests/cvsip/correlation2d.c
	* tests/cvsip/convolution.c
	* tests/cvsip/convolution2d.c

	* doc/GNUmakefile.inc.in: Hide external dependencies if not building in
	maintainer-mode.
	
2008-06-25  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Add missing ALF_ACCEL_DTL_END.

2008-06-24  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac Add quoting to '$maintainer_mode'.
	* cvsip/lu_api.hpp: New file.
	* cvsip/lu.cpp: New file.
	* cvsip/clu_api.hpp: New file.
	* cvsip/clu.cpp: New file.
	* cvsip/cholesky_api.hpp: New file.
	* cvsip/cholesky.cpp: New file.
	* cvsip/qr_api.hpp: New file.
	* cvsip/qr.cpp: New file.
	* cvsip/cqr_api.hpp: New file.
	* cvsip/cqr.cpp: New file.
	* cvsip/ccholesky_api.hpp: New file.
	* cvsip/ccholesky.cpp: New file.
	* cvsip/svd_api.hpp: New file.
	* cvsip/svd.cpp: New file.
	* cvsip/csvd_api.hpp: New file.
	* cvsip/csvd.cpp: New file.
	* tests/regressions/dot_negative-strides.cpp: New regression test.
	* cvsip/block.hpp: Cleanup.
	* cvsip/view.hpp: Likewise.
	* cvsip/vsip.h: Remove unsupported operations.
	
2008-06-19  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add new --with-csl-docbook option.
	* GNUmakefile.in: Use it.
	* doc/GNUmakefile.inc.in: Use it.
	* doc/quickstart/quickstart.xml: Adjust.
	* doc/tutorial/tutorial.xml: Adjust.
	* doc/manual/manual.xml: Adjust.
	
2008-06-18  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/quickstart/quickstart.xml: Reflect recent changes to
	--with-lapack option.
	* src/vsip/core/signal/histo.hpp: Add new constructor.
	* cvsip/signal/signal_api.hpp: New file.
	* cvsip/signal.cpp: New file.

	* configure.ac: Adjust to new vendor/clapack layout.
	* vendor/GNUmakefile.inc.in: Likewise.

	* cvsip/unary_api.hpp: New file.
	* cvsip/unary.cpp: New file.
	* cvsip/binary_api.hpp: New file.
	* cvsip/binary.cpp: New file.
	* cvsip/ternary_api.hpp: New file.
	* cvsip/ternary.cpp: New file.
	* cvsip/logical_api.hpp: New file.
	* cvsip/logical.cpp: New file.
	* cvsip/bitwise_api.hpp: New file.
	* cvsip/bitwise.cpp: New file.
	

2008-06-18  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/lapack.m4: Remove support for builtin atlas / lapack.
	* vendor/GNUmakefile.inc.in: Likewise.

2008-06-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/metaprogramming.hpp (is_same_ptr): New function (and
	  helper class) to compare pointers for equality.
	* src/vsip/opt/expr/serial_evaluator.hpp: Use is_same_ptr.
	* tests/ip_transpose.cpp: New file, unit test for in-place transpose.

2008-06-16  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/vsip.h: Complete API.
	* cvsip/type_conversion.hpp: Define mapping between C-VSIP
	and VSIPL++ view types.
	* cvsip/block.hpp: Various fixes.
	* cvsip/view.hpp: Likewise.
	* cvsip/view_decl.hpp: Likewise.
	* cvsip/cview_decl.hpp: Likewise.
	* cvsip/view_api.hpp: Likewise.
	* cvsip/cview_api.hpp: Likewise.
	* cvsip/support.cpp: Likewise.
	* cvsip/cblock_wrapper.hpp: Removed.
	* cvsip/block_wrapper.hpp: Likewise.
	* src/vsip/core/cvsip/fir.hpp: Fix for negative strides.
	* src/vsip/opt/signal/fir_opt.hpp: Likewise.

2008-06-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/ipp/fir.hpp (apply): Fix strides to 'stride_type'.

2008-06-12  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/window_api.hpp: Implement window functions.
	* cvsip/window.cpp: Likewise.
	* src/vsip/opt/expr/serial_evaluator.hpp: Provide in-place versions
	for transpose evaluator.

2008-06-12  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/core/signal/corr_common.hpp: Add generic functions to
	  support 2-D split complex "min" correlations.
	* src/vsip/opt/cbe/cml/corr.hpp: Add CML "back end" for 2-D
	  correlation.  Correct the dispatchers so that only "min"
	  support is recognized.

2008-06-11  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/signal/fir.hpp: Add new tag for CML to type list. 
	* src/vsip/core/signal/fir_backend.hpp: Fix strides to use 'stride_type'.
	* src/vsip/core/cvsip/fir.hpp: Likewise.
	* src/vsip/opt/cbe/cml/fir.hpp: New file.  Implements FIR filters
	  using CML backend.
	* src/vsip/opt/signal/fir_opt.hpp: Fix stride types.

2008-06-11  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/cvsip/fir.hpp: Changed dispatch to avoid incrementing
	  the reference count twice when creating the backend (once on creation
	  and once when passing into the Ref_counted_ptr holder).
	* src/vsip/opt/ipp/fir.hpp: Likewise.
	* src/vsip/opt/signal/fir_opt.hpp: Likewise.

2008-06-11  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/fftw3/fft.cpp: Check VSIP_IMPL_FFTW3_HAVE_{*} with
	  ifdef.
	* src/vsip/opt/fftw3/fft.hpp: Likewise.
	* src/vsip/opt/fftw3/fftw_support.hpp: Likewise.
	
2008-06-11  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/sal/bridge_util.hpp: Added missing header file.
	* src/vsip/opt/sal/eval_misc.hpp: Corrected spelling error.
	  (VSIP_IMPL_SAL_USE_MAT_MUL): Added guard against multiple definitions.
	  Corrected bug in outer product evaluator where it was checking the
	  dimension order of the wrong block.

2008-06-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/block_traits.hpp (is_same_block): New function to
	  compare block pointers.
	* src/vsip/core/signal/freqswap.hpp: Use is_same_block to compare
	  block pointers.
	* tests/freqswap.cpp: Add coverage for mixed-type freqswap
	  assignments.

2008-06-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/signal/window.cpp: Use out-of-place freqswap to
	  reduce number of copies.
	* src/vsip/core/signal/freqswap.hpp: Store referee block type using
	  View_block_storage.  Fix handling of in-place for odd-size vectors
	  and matrices.
	* tests/window.cpp: Remove unnecessary header.
	* tests/freqswap.cpp: Extend coverage to in-place and nested
	  expressions.

2008-06-10  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/fft.m4: Robustify probing for -lfftw3f, -lfftw3, and -lfftw3l
	* configure.ac: Adjust.
	* src/vsip/opt/fftw3/fft.hpp: Conditionalize BEs on config checks.
	* src/vsip/opt/fftw3/fft.cpp: Likewise.
	* src/vsip/opt/fftw3/fftw_support.hpp: Likewise.
	
2008-06-09  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/matvec_api.hpp: Implement matvec functions.
	* cvsip/matvec.cpp: Likewise.
	* cvsip/conv1d_api.hpp: Implement 1D Convolution.
	* cvsip/conv1d.cpp: Likewise.
	* cvsip/conv2d_api.hpp: Implement 2D Convolution.
	* cvsip/conv2d.cpp: Likewise.
	* cvsip/corr1d_api.hpp: Implement 1D Correlation.
	* cvsip/corr1d.cpp: Likewise.
	* cvsip/corr2d_api.hpp: Implement 2D Correlation.
	* cvsip/corr2d.cpp: Likewise.
	* cvsip/random.hpp: Implement C-VSIPL Random API.
	* cvsip/random_api.hpp: Likewise.
	* cvsip/random.cpp: Likewise.
	* src/vsip/random.hpp: Use Generator-block.
	* src/vsip/core/matvec.hpp (impl_kron): Fix vector version.
	* tests/matvec.cpp: Add test for the above.

2008-06-09  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/diag/eval.hpp (See_summary): Qualify specialization
	  for Cml_tag if CML is configured.

2008-06-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/subblock.hpp: Support distributed Transposed_blocks
	  and Component_blocks.
	* src/vsip/core/setup_assign.hpp: Fix bug finding map_type.
	* src/vsip/core/parallel/transpose_map_decl.hpp: New file,
	  Transpose_map class defn.
	* src/vsip/core/parallel/transpose_map.hpp: New file, Transpose_map
	  function definition requiring view headers.
	* src/vsip/core/parallel/subset_map_decl.hpp: Comment Map_subdomain.
	* src/vsip/core/map_fwd.hpp: Foward decl for Whole_dist.
	* tests/regressions/par_transpose.cpp: New file, regression test
	  for distributed transpose cases.
	* tests/util-par.hpp (dump_view): Synchronize between processors
	  so output is not intermixed.

2008-06-05  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/vmmul.hpp: Corrected spelling error.
	* src/vsip/core/type_list.hpp: Added room for an additional type.
	* src/vsip/opt/cbe/cml/transpose.hpp: New file.  Bindings and
	  serial evaluator for transpose operations using CML.
	* src/vsip/opt/diag/eval.hpp: Added diagnostics for Cml_tag.
	* src/vsip/opt/expr/serial_dispatch.hpp: Include CML transpose header.
	* src/vsip/opt/expr/serial_dispatch_fwd.hpp: Add new tag for CML.
	
2008-06-05  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/signal/freqswap.hpp: Reimplement, using return-block
	  optimization.

2008-06-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/lapack/matvec.hpp: Fix stride bug in MV and VM
	  prod evaluators.

2008-06-03  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/opt/cbe/cml/conv.hpp: Use aligned_array<> and array_cast().
	* src/vsip/opt/cbe/cml/corr.hpp: Likewise.

2008-06-03  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/allocation.hpp: Generalize array_cast<> to non-complex value-types.

2008-06-03  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/core/signal/corr.hpp: Include the new header for the CML
	  backend for 1D correlation; insert Cml_tag in the type list for
	  dispatch.
	* src/vsip/core/signal/corr_common.hpp: Add template functions for
	  corr_full, corr_same and corr_min for the generic backend.
	* src/vsip/opt/cbe/cml/corr.hpp: New file.  Implement the CML backend
	  for 1D correlation.

2008-06-02  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/matvec.hpp: Added include for cml matvec functions.
	* src/vsip/opt/cbe/cml/matvec.hpp: New evaluators for dot and outer
	  products.
	* src/vsip/opt/cbe/cml/prod.hpp: New bindings for dot and outer
	  product calls into CML.

2008-05-30  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/cml/matvec.hpp: Added evaluators for matrix-vector
	  and vector-matrix product dispatch to CML.
	* src/vsip/opt/cbe/cml/prod.hpp: Bindings for mv- and vm-products.
	* tests/matvec-prodmv.cpp: Added tests using subviews to cover cases
	  where vector strides are not one and matrix rows are not dense
	  (although rows must be unit stride).
	
2008-05-29  Jules Bergmann  <jules@codesourcery.com>

	* m4/cbe.m4 (CPP_SPU_FLAGS, LD_SPU_FLAGS): Pass CML paths.
	* src/vsip/core/signal/conv_common.hpp: Implement correct min
	  support size case for 2D conv_min.
	* src/vsip/core/fft.hpp: Remove LLC.
	* src/vsip/opt/cbe/ppu/fft.cpp: Add split FFT support.  Remove
	  twiddle factor computation (now taken care of by kernels).
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Fix bug in argument
	  processing.  Add split FFT tag.
	* src/vsip/opt/cbe/ppu/fastconv.cpp: Remove twiddle factor computation.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Likewise.
	* src/vsip/opt/cbe/fconv_params.h: Likewise.  Also remove padding.
	* src/vsip/opt/cbe/ppu/alf.hpp: Make exceptions more informative.
	* src/vsip/opt/cbe/spu/alf_pwarp_ub.cpp: Remove unnecessary foward
	  decls.  Add missing argument to kernel.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Refactor to use CML.
	* src/vsip/opt/cbe/spu/alf_fft_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconvm_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Use LD_SPU_FLAGS from
	  configure.  (LIBS_SPU): Add -lcml_spu.
	* src/vsip/opt/cbe/spu/alf_vmmul_c.c: Update to use ALF 3.0.
	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconvm_split_c.c: Update to use CML.
	* src/vsip/opt/cbe/fft_params.h: Remove twiddle factor addresses,
	  add parameters for split FFT.
	* src/vsip/opt/diag/fft.hpp: Fix Wall warning.
	* benchmarks/copy.cpp: Add more error detail.
	* benchmarks/fastconv.cpp: Update parameter passing, make check
	  optional.
	* benchmarks/vmul.hpp: Add diagnostics.
	* benchmarks/fftm.cpp: Fix Wall warnings.
	* src/vsip/opt/cbe/spu/vmul_split.h: Remove file, unused.
	* src/vsip/opt/cbe/spu/fft_1d.h: Remove file, unused.
	* src/vsip/opt/cbe/spu/fft_1d_r2.h: Remove file, unused.
	* src/vsip/opt/cbe/spu/fft_1d_r2_split.h: Remove file, unused.
	* src/vsip/opt/cbe/spu/spe_assert.h: Remove file, unused.

2008-05-28  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/GNUmakefile.inc.in: Adjust for new test database.
	* cvsip/view_wrapper.hpp: Refactored to...
	* cvsip/view_decl.hpp: ...this...
	* cvsip/view_api.hpp: ...and this.
	* cvsip/cview_wrapper.hpp: Refactored to...
	* cvsip/cview_decl.hpp: ...this...
	* cvsip/cview_api.hpp: ...and this.
	* cvsip/view.hpp: Various additions.
	* cvsip/block.hpp: Various additions.
	* cvsip/wrapper.cpp: Renamed to...
	* cvsip/support.cpp: ...this.
	* cvsip/library.cpp: various additions.
	
2008-05-23  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/general_evaluator.hpp: New operator tag for conjugate
	  matrix-matrix products.
	* src/vsip/core/matvec_prod.hpp: New generic evaluator for conjugate
	  products to allow dispatch to backends that support it.  Functions
	  prodj and prodh now use it.
	  (prodh): Fixed bug in return matrix size.
	* src/vsip/opt/cbe/cml/matvec.hpp: New evaluator for conjugate and
	  conjugate transpose (hermitian) matrix products, dispatching to CML.
	* src/vsip/opt/cbe/cml/prod.hpp: Added bindings for conj and herm.
	* tests/matvec-prodjh.cpp: Fixed tests for conj and herm to use
	  prodj and prodh instead of conj and herm operators.

2008-05-23  Don McCoy  <don@codesourcery.com>

	* tests/test-prod.hpp: Reference definitions from matvec-prod.cpp.
	* tests/matvec-prodmv.cpp: Tests split out from main matvec-prod.cpp.
	* tests/matvec-prodjh.cpp: Likewise.
	* tests/matvec-prod-special.cpp: Likewise.
	* tests/matvec-prodt.cpp: Likewise.
	* tests/matvec-prod34.cpp: Likewise.
	* tests/matvec-prod.cpp: Likewise.

2008-05-21  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/QMTest/database.py: New test database.
	* tests/QMTest/classes.qmc: Register it.
	* tests/QMTest/configuration.in: Use it.
	* tests/context.in: Configure it.
	* tests/context-istalled.pre.in: Configure it.

2008-05-21  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/matvec_prod.hpp: Fixed bug in size passed for transpose
	  product case.
	* src/vsip/opt/cbe/ppu/alf.hpp: Removed conditionals around ALF
	  initialization -- now uses cml_init/fini exclusively.
	* src/vsip/opt/cbe/cml/matvec.hpp: Modified evaluator to handle 
	  transpose cases.
	* src/vsip/opt/cbe/cml/prod.hpp: Added bindings for transpose cases.
	* tests/matvec-prod.cpp: Modified transpose product tests to run
	  them with different orderings, as is done with normal products.
	  Only added orderings relevant to CML so as not to expand the
	  test coverage unnecessarily.  Also fixed the test to make it call
	  prodt() directly instead of prod(a, trans(b)).

2008-05-20  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/layout.hpp: Factor out some declarations into...
	* src/vsip/core/storage.hpp: ...this file.
	* src/vsip/core/block_copy.hpp: Adjust.
	* src/vsip/core/subblock.hpp: Adjust.
	* src/vsip/core/extdata.hpp: Adjust.
	* src/vsip/core/allocation.hpp: Add array_cast<> function.

2008-05-19  Stefan Seefeld  <stefan@codesourcery.com>

	* cvsip/*: Start of C-VSIPL bindings.
	* tests/cvsip/*: Initial set of unit tests.

2008-05-15  Mike LeBlanc  <mike@codesourcery.com>

	* src/vsip/core/signal/conv.hpp: Add Cml_tag to the type list and include the
	    new header src/vsip/opt/cbe/cml/conv.hpp.
	* src/vsip/core/signal/conv_common.hpp: Define
	    VSIP_IMPL_CONV_CORRECT_MIN_SUPPORT_SIZE as 1 to use the correct formula.
	* src/vsip/opt/cbe/cml/conv.hpp: New file.  Create a CML backend for 
	    1D convolutions.

2008-05-14  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/matvec_prod.hpp: Fixes a typo affecting the headers
	  included when building the reference implementation.  Adds include
	  for new CML backend for matrix products.
	* src/vsip/core/impl_tags.hpp: New tag for CML backend.
	* src/vsip/opt/general_dispatch.hpp: Adds CML tag to typelist.
	* src/vsip/opt/cbe/cml/matvec.hpp: New file.  Handles matrix product
	  dispatch to CML backend.
	* src/vsip/opt/cbe/cml/prod.hpp: Wrappers (bindings) for matrix
	  produt functions in CML.
	* src/vsip/opt/cbe/cml/traits.hpp: Helper traits classes that pertain
	  strictly to CML.
	* src/vsip/GNUmakefile.inc.in: Adds new install directory.
	* GNUmakefile.in: Adds new header include directory.
	* examples/mprod.cpp: New file.  Demonstrates matrix product API.
	* examples/GNUmakefile.inc.in: Exclude mprod example for reference 
	  build (due to include from vsip_csl/).

2008-05-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/alf.hpp: Queury ALF handle from CML.  Allow
	  num SPUs to be set only once.  Check return status of ALF functions.
	* src/vsip/opt/cbe/vmul_params.h: Pass pointers as unsigned long long.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c: Pass pointers as unsigned long
	  long.  Add missing header.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in (libs): Add spe_kernels.
	* src/vsip/GNUmakefile.inc.in: Avoid building huge_page_pool if
	  HAVE_HUGE_PAGE_POOL not defined.
	* src/vsip_csl/img/perspective_warp.hpp: Remove dead code.
	* tests/fir.cpp: Remove unused variable.
	* tests/extdata-runtime.cpp: Add missing library initialization.
	* benchmarks/vmul.cpp: Correct usage.

2008-05-13  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/alf.hpp: Initialize ALF through CML if
	  available (according to VSIP_IMPL_HAVE_CML).

2008-05-05  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/cbe.m4: Fix handling of with_cbe_sdk_sysroot.
	* m4/lapack.m4: Remove bogus include path.
	* configure.ac: Allow 64-bit compilation even with --enable-cbe-sdk,
	add --enable-cvsip-bindings.
	* GNUmakefile.in: Add support for C-VSIPL bindings.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Fix spu-kernel linking command.
	* src/vsip_csl/GNUmakefile.inc.in: Use VSIP_CSL_HAVE_PNG instead of HAVE_PNG_H.
	
2008-05-01  Don McCoy  <don@codesourcery.com>

	* m4/lapack.m4: Adjust CLAPACK_NOOPT to include -m32 or -m64
	  when appropriate.

2008-04-23  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Refactor into...
	* m4/cbe.m4: ...this and...
	* m4/scripting.m4: ...this.
	* src/vsip/GNUmakefile.inc.in: Adjust to build with SDK 3.0
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Likewise.
	* src/vsip/opt/cbe/ppu/fft.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Likewise.
	* src/vsip/opt/cbe/ppu/alf.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/fastconv.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/alf.hpp: Likewise.
	* src/vsip/opt/cbe/ppu/pwarp.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/task_manager.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_pwarp_ub.cpp: Likewise.
	* src/vsip/opt/cbe/spu/alf_fft_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c: Likewise.
	* src/vsip/opt/cbe/alf/*: Removed as obsolete.

2008-04-23  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/initfin.cpp: Initialize default pool.
	* src/vsip/dense.hpp: Use pools for allocation.
	* src/vsip/core/memory_pool.hpp: New file, Memory_pool virtual base
	  class header.
	* src/vsip/core/memory_pool.cpp: New file, Memory_pool virtual base
	  class impl.
	* src/vsip/core/huge_page_pool.hpp: New file, pool implementation
          using huge page memory header.
	* src/vsip/core/huge_page_pool.cpp:  New file, pool implementation
          using huge page memory impl.
	* src/vsip/core/aligned_pool.hpp: New file, pool implementation 
          using alloc_align header.
	* src/vsip/core/aligned_pool.cpp: New file, pool implementation 
          using alloc_align impl.
	* src/vsip/core/parallel/local_map.hpp: Hold pool.
	* src/vsip/GNUmakefile.inc.in (cxx_sources): Optionally filter out
	  huge_page_pool.
	* GNUmakefile.in (VSIP_IMPL_HAVE_HUGE_PAGE_POOL): New variable.
	* benchmarks/loop.hpp: Allow alternate pool to be used.
	* benchmarks/main.cpp: Likewise.

	* tests/fns_userelt.cpp: Add missing vsipl init.
	* tests/selgen.cpp: Likewise.
	* tests/matrix.cpp: Likewise.
	* tests/lvalue-proxy.cpp: Likewise.
	* tests/tensor.cpp: Likewise.
	* tests/tensor_subview.cpp: Likewise.
	* tests/appmap.cpp: Likewise.
	* tests/user_storage.cpp: Likewise.
	* tests/subblock.cpp: Likewise.
	* tests/regressions/view_index.cpp: Likewise.
	* tests/regressions/conv_to_subview.cpp: Likewise.
	* tests/regressions/complex_proxy.cpp: Likewise.
	* tests/view_operators.cpp: Likewise.
	* tests/extdata.cpp: Likewise.
	* tests/extdata-matadd.cpp: Likewise.
	* tests/expression.cpp: Likewise.
	* tests/vector.cpp: Likewise.
	* tests/view.cpp: Likewise.
	* tests/coverage_unary.cpp: Likewise.

2008-04-15  Jules Bergmann  <jules@codesourcery.com>

	* scripts/char.pl (-extra): Extra args for all benchmarks.
	* scripts/datasheet.pl: Add section headers, prettier printing
	  of time/call and time/point.

2008-03-28  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/sal/svd.hpp: Remove extaneous scalar_type defn.

2008-03-27  Jules Bergmann  <jules@codesourcery.com>

	* scripts/datasheet.pl: Add support for w_mb_s metric.  Allow lists
	  to be space separated.

2008-03-26  Jules Bergmann  <jules@codesourcery.com>

	* scripts/datasheet.pl: Move configuration into external file.
	  Add support for csv output.

2008-03-18  Jules Bergmann  <jules@codesourcery.com>

	Merge 1.4 MCOE updates.
	* configure.ac (CXXDEP): Update for ccmc++.
	* m4/fft.m4 (--with-fftw3-cfg-opts): New option, passes options
	  directly to FFTW3 configure.
	* src/vsip/core/fns_scalar.hpp: Handle missing hypot decl.
	* src/vsip/opt/sal/conv.hpp: Loosen threshold on SAL td convolution.
	* vendor/GNUmakefile.inc.in: Use LIBEXT for FFTW3.
	* tests/matvec.cpp: Fill in macros missing from MCOE GCC's cmath.
	* examples/mercury/mcoe-setup.sh: Update.
	
	Merge 1.4 SIMD unaligned loop fusion changes.
	* src/vsip/opt/simd/expr_evaluator.hpp: Move Proxy_factory ...
	* src/vsip/opt/simd/proxy_factory.hpp: New file, ... to here.
	* src/vsip/opt/simd/eval_unaligned.hpp: New file, unaligned SIMD
	  loop-fusion evaluator from expr_evaluator.hpp.
	* src/vsip/opt/simd/expr_iterator.hpp (Simd_unaligned_loader): Move
	  loads around to avoid second load past end of vector
	  (first load inevitable).
	* src/vsip/opt/expr/serial_dispatch.hpp: Include eval_unaligned.hpp.
	* configure.ac (--enable-simd-unaligned-loop-fusion): Allow SIMD
	  unaligned loop fusion to be controlled independently of aligned
	  loop fusion.
	* doc/quickstart/quickstart.xml: Document --enable-simd-loop-fusion
	  and --enable-simd-unaligned-loop-fusion.

	Merge 1.4 bugfix for builtin SIMD routine unaligned handling.
	* src/vsip/opt/simd/rscvmul.hpp: Fix bug in handling unalignment.
	* src/vsip/opt/simd/threshold.hpp: Likewise.
	* src/vsip/opt/simd/vgt.hpp: Likewise.
	* src/vsip/opt/simd/vma_ip_csc.hpp: Likewise.
	* src/vsip/opt/simd/vaxpy.hpp: Likewise.
	* src/vsip/opt/simd/vadd.hpp: Likewise.
	* src/vsip/opt/simd/vlogic.hpp: Likewise.
	* src/vsip/opt/simd/vmul.hpp: Likewise.
	* tests/regressions/view_offset.cpp: New test, regression coverage
	  for unalignment handling bug.

	Merge 1.4 pwarp and misc changes.
	* src/vsip_csl/img/impl/pwarp_simd.hpp: Clear u/v if out of bounds,
	  add error checking.
	* tests/vsip_csl/pwarp.cpp: Merge from afrl branch.
	* tests/regressions/transpose_assign.cpp: Add runtime verbosity.
	* tests/threshold.cpp: Add debug output.

2008-02-29    <stefan@codesourcery.com>

	* examples/vcproj/fft/fft.vcproj.pre: Use /MD and /MDd instead of /MT.
	* examples/vcproj/fft/fft.icproj.pre: Likewise.
	* examples/vcproj/vmul/vmul.vcproj.pre: Likewise.
	* examples/vcproj/vmul/vmul.icproj.pre: Likewise.

2008-02-06  Brooks Moses  <brooks@codesourcery.com>

	* examples/fconv.cpp (fconv_example): Qualify impl namespace
	  reference.
	  
	* src/vsip_csl/error_db.hpp: Fix comment typo.

2008-02-04  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (EMBED_SPU): Include -m32/-m64 option.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Use -m32/-m64 from
	  EMBED_SPU.

2008-02-01  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/simd/simd.hpp (SSE2 double): Fix bug in mag mask width.
	  Add extract function.

2008-01-31  Brooks Moses  <brooks@codesourcery.com>

	* doc/manual/add.xml: New file.
	* doc/manual/functions.xml: New file.
	* doc/manual/datatypes.xml: New file.
	* doc/manual/namespaces.xml
	* doc/manual/overview.xml: Moved to ...
	* doc/manual/operations.xml: ... here, and edited.
	* doc/manual/manual.xml: Added links to new files.

2008-01-31  Jules Bergmann  <jules@codesourcery.com>

	* scripts/config: Add missing SIMD configure flags in Mondo package.

2008-01-30  Jules Bergmann  <jules@codesourcery.com>

	* m4/lapack.m4: Detect ATLAS with v3 lapack/blas, as found on
	  Ubuntu 7.04.

2008-01-30  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--enable-shared-acconfig): Make unshared
	  acconfig.hpp the default.

	* src/vsip/core/check_config_body.hpp: New file, body of
	  {app,library}_config function.
	* src/vsip/core/check_config.cpp: Use check_config_body.hpp.
	* src/vsip/core/check_config.hpp (app_config): New function to
	  check configuration at application build time.
	* tests/check_config.cpp: Test app_config.
	
	* scripts/package.py (prefix-not-in-tarball): New option to allow
	  part of installation prefix to be excluded from the tarball path.
	* scripts/release.sh: Adjust prefix to /opt/sourceryvsipl++-VERSION.
	* scripts/config: Adjust configure parameters that have been
	  renamed.  Adjust host names.  Add Power (powerpc-linux-gnu)
	  binary package. 

2008-01-29  Stefan Seefeld  <stefan@codesourcery.com>

	* synopsis.py.in: Cleanup.

2008-01-29  Jules Bergmann  <jules@codesourcery.com>
	
	* doc/quickstart/quickstart.xml: Fix bogus PKG_CONFIG_PATH.

2008-01-29  Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Update to reflect
	  /opt/sourceryvsipl++-version install directory.

2008-01-29  Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Apply Brooks' patch describing
	  Cell/B.E. cross compilation.  Bump version and copyright.
	* doc/tutorial/tutorial.xml: Bump version and copyright.

2008-01-29  Jules Bergmann  <jules@codesourcery.com>

	* doc/tutorial/performance.xml: Replace incorrect references to
	  'Scope_event' with 'Scope'.
	* doc/tutorial/profiling.xml: Likewise.  Move read_file example ...
	* doc/tutorial/src/par/read_file.hpp: ... here, new file.
	* doc/tutorial/src/par/write_file.hpp: New write file example.
	* tests/tutorial/profile_example.cpp: New test for profile_example
	  fragment.
	* tests/tutorial/par_read_file.cpp: New test for {read,write}_file
	  fragments.

2008-01-28  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/fft.hpp (fftm_facade): Make friends with Diagnose_fftm.
	* src/vsip/opt/diag/fft.hpp: Diagnosis routines for Fftm.
	* vendor/GNUmakefile.inc.in (clean): Clean vendor libraries from lib/
	* benchmarks/fftm.cpp: Use new diagnosis routines.  Pass fixed row
	  column dimension to diag.  Guard available cases on FFT provisioning.
	* benchmarks/fft.cpp: Guard available cases on FFT provisioning.

2008-01-23  Don McCoy  <don@codesourcery.com>

	* m4/cvsip.m4: Changed --enable-cvsip to --with-cvsip.
	* m4/ipp.m4: Changed --enable-ipp to --with-ipp.
	* m4/lapack.m4: Added error message for --enable-lapack.
	  Changed --disable-cblas to --without-cblas.  Also removed the
	  option 'builtin' from the list of libraries it will search for
	  automatically (if left unspecified).
	* m4/fft.m4: Changed --enable-ref-impl to --enable-only-ref-impl.
	* m4/sal.m4: Changed --enable-sal --with-sal.
	* configure.ac: Changed --enable-cbe-sdk to --with-cbe-sdk and
	  --enable-numa to --with-numa.  Added error messages for
	  the deprecated options.
	* doc/quickstart/quickstart.xml: Updated modified options.

2008-01-17  Brooks Moses  <brooks@codesourcery.com>

	* doc/quickstart/quickstart.xml: Document requirement to specify 
	  sysroot for Cell/B.E. cross-compiling.

2008-01-11  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/stencil/boundary_factory.hpp: Fully qualify name to disambiguate.
	* src/vsip_csl/stencil.hpp: Likewise.
	* examples/vmul.cpp: Add missing example file.

2008-01-10  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/img/impl/pwarp_gen.hpp: Fix indexing error.

2008-01-09  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/diag/eval.hpp: Include necessary headers.
	* src/vsip/opt/expr/serial_dispatch_fwd.hpp: Likewise.
	* src/vsip_csl/img/impl/sfilt_gen.hpp: Use persistent_ext_data to
	  avoid relying on undefined ext_data behavior.
	* src/vsip_csl/img/separable_filter.hpp (impl_tag): New typedef with
	  implementation tag.
	* tests/vsip_csl/sfilt.cpp: Print sfilt BE in VERBOSE output.

2008-01-09  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/block_copy.hpp: Fix typo.
	* src/vsip/vector.hpp: Add missing header.
	* src/vsip/opt/expr/lf_initfini.hpp: Add 'opt-only' header guard.
	* src/vsip/opt/expr/return_block.hpp: Likewise.
	* src/vsip/core/fft.hpp: Conditionalize inclusion of the above. 

2008-01-08  Stefan Seefeld  <stefan@codesourcery.com>

	* m4/parallel.m4: Check for MPI boot / halt applets.
	* vsipl++.pc.in: Remember them.
	* tests/context.in: Likewise.
	* tests/context-installed.pre.in: Likewise.
	* tests/GNUmakefile.inc.in: Likewise.
	* tests/QMTest/vpp_database.py: Use them.
	* src/vsip/core/block_copy.hpp: Conditionalize use of opt code around
	VSIP_IMPL_REF_IMPL.
	
2008-01-08  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/profile.hpp (tick_type): New type added.  Changed 
	  signature of TP::ticks to use it.

2008-01-08  Jules Bergmann  <jules@codesourcery.com>

	* m4/parallel.m4: Add back check to avoid using posix memalign with
	  LAM.
	* src/vsip/core/check_config.cpp: Add coverage for memalign macros.
	* src/vsip/opt/cbe/spu/alf_pwarp_ub.cpp: Fix bug to handle non-zero
	  column offset.
	* benchmarks/sal/vthresh.cpp: Handle missing SAL vthrx.

2008-01-08  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Add dummy default install-benchmarks target.
	* tests/matlab*: Move to...
	* tests/vsip_csl/matlab*: ...here.

2008-01-05  Stefan Seefeld  <stefan@codesourcery.com>

	* autogen.sh: Run aclocal before autoheader.

2008-01-04  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/dispatch.hpp: Refine.
	* tests/dispatch.cpp: Add more examples / tests.
	* src/vsip/core/signal/corr_common.hpp: Make Correlation use dispatcher.
	* src/vsip/core/signal/corr.hpp: Likewise.
	* src/vsip/core/cvsip/corr.hpp: Likewise.
	* src/vsip/opt/signal/corr_ext.hpp: Likewise.
	* src/vsip/opt/signal/corr_opt.hpp: Likewise.
	* tests/correlation.cpp: Adjust.
	* benchmarks/corr.cpp: Adjust
	* src/vsip/core/signal/conv_common.hpp: Make Convolution use dispatcher.
	* src/vsip/core/signal/conv.hpp: Likewise.
	* src/vsip/core/cvsip/conv.hpp: Likewise.
	* src/vsip/opt/sal/conv.hpp: Likewise.
	* src/vsip/opt/ipp/conv.hpp: Likewise.
	* src/vsip/opt/signal/conv_ext.hpp: Likewise.
	* tests/convolution.cpp: Adjust.
	* benchmarks/conv.cpp: Adjust.
	* benchmarks/conv2d.cpp: Adjust.
	
2008-01-04  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Refactored into...
	* m4/parallel.m4: ...this.
	* m4/fft.m4: ...and this.
	* m4/lapack.m4: ...and this.
	* m4/sal.m4: ...and this.
	* m4/ipp.m4: ...and this.
	* m4/profile.m4: ...and this.
	* m4/cvsip.m4: ...and this.
	* autogen.sh: Adjust.
	* doc/quickstart/quickstart.xml: Adjust.
	* src/vsip/opt/lapack/bindings.hpp: Adjust for gfortran.
	
2008-01-02  Stefan Seefeld  <stefan@codesourcery.com>

	* examples/GNUmakefile.inc.in: Do not compile extdata.cpp when
	--enable-ref-impl is given.

2007-12-23  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Correct link_app and link_csl_app definitions.
	* benchmarks/GNUmakefile.inc.in: Use them.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: Likewise.
	* benchmarks/memwrite_simd.cpp: Fix test() signature.
	* benchmarks/sumval_simd.cpp: Fix test() signature.
	* benchmarks/hpec_kernel/firbank.cpp: Correct syntax.
	
2007-12-21  Brooks Moses  <brooks@codesourcery.com>

	Ported from branches/afrl-ncet:
	2007-12-17  Jules Bergmann  <jules@codesourcery.com>
	* src/vsip_csl/img/impl/pwarp_simd.hpp: Add missing cast in PPU
	  version.

2007-12-17  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Remove INT_CPPFLAGS and INT_LDFLAGS variables.
	* vendor/atlas/configure.ac: Detect Pentium M processor.
	* vendor/GNUmakefile.inc.in: Compile vendor libs into lib/
	* GNUmakefile.in: Remove INT_CPPFLAGS and INT_LDFLAGS variables.
	* tests/context.in: Likewise.

2007-12-17  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/pwarp.cpp: Fix off by 1 bug when max u/v are
	  integral.
	* src/vsip/opt/simd/simd.hpp: Add extract, mag methods for signed
	  short and signed int.
	* src/vsip_csl/img/impl/pwarp_simd.hpp: Handle case when u/v are
	  both exactly 1 or 0.
	* src/vsip_csl/ref_pwarp.hpp: Extend pwarp to pull from edge of
	  input image.
	* src/vsip_csl/img/impl/pwarp_simd.hpp: Likewise.
	* src/vsip_csl/img/perspective_warp.hpp (Perspective_warp): Fix typo,
	  ignoring ChooserT.
	* tests/vsip_csl/pwarp.cpp: Add coverage for image shift.
	
2007-12-17  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/fftw3/fft_impl.cpp: Fix alignment issues.
	* src/vsip/core/layout.hpp: Only assert proper alignment for
	pack==stride_unit_align

2007-12-14  Stefan Seefeld  <stefan@codesourcery.com>

	* examples/GNUmakefile.inc.in: Simplify generate_vcproj command.
	* examples/fconv.cpp: Fix impl namespace ambiguity.
	* examples/fft.cpp: Likewise.
	* tests/*: Likewise.

2007-12-14  Brooks Moses  <brooks@codesourcery.com>

	* configure.ac (CXX_SPU): Define.

2007-12-13  Don McCoy  <don@codesourcery.com>

	* examples/extdata.cpp: New file.  Example demonstrating the
	  use of the Ext_data interface to access a view's underlying
	  data via a pointer.

2007-12-13  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/simd/simd_spu.hpp: Fix all sorts of typos!
	
2007-12-13  Jules Bergmann  <jules@codesourcery.com>

	Fix error_db to work with unsigned and low-precision types.
	* src/vsip/core/lvalue_proxy.hpp (Is_lvalue_proxy_type): New trait to
	  identify an lvalue proxy type.
	* src/vsip/core/fns_elementwise.hpp: Handle scalar lvalue proxy types.
	* src/vsip/core/view_cast.hpp: Fix typo in expr block type.
	* src/vsip/core/fns_scalar.hpp (magsq): avoid using abs (inefficient
	  for complex, overload ambiguous for integers).
	* tests/vsip_csl/error_db.cpp: New file, unit test for error_db.
	
	* src/vsip/opt/cbe/pwarp_params.h: New file, pwarp ALF kernel
	  parameter block.
	* src/vsip/opt/cbe/ppu/pwarp.hpp: New file, pwarp ALF kernel bridge.
	* src/vsip/opt/cbe/ppu/pwarp.cpp: New file, pwarp ALF kernel bridge.
	* src/vsip/opt/cbe/spu/alf_pwarp_ub.cpp: New file, pwarp ALF kernel.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Add tag for uchar pwarp
	  ALF task.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Add rules for C++ ALF
	  kernels.
	* configure.ac (CXX_SPU): Define it.
	* src/vsip/opt/simd/simd.hpp: Add AltiVec unsigned short and
	  unsigned int support.  Split common traits into ...
	* src/vsip/opt/simd/simd_common.hpp: ... here, new file.
	* src/vsip/opt/simd/simd_spu.hpp: New file, SPU SIMD traits.
	* src/vsip/GNUmakefile.inc.in (src_vsip_cxx_sources): Add pwarp.cpp
	* src/vsip_csl/error_db.hpp: Cast difference to double, allows
	  error_db to be used for unsigned types.
	* src/vsip_csl/img/impl/pwarp_common.hpp: New file, common bits
	  for perspective warp.
	* src/vsip_csl/img/impl/pwarp_cbe.hpp: New file, CBE pwarp BE.
	* src/vsip_csl/img/impl/pwarp_gen.hpp: New file, generic pwarp BE.
	* src/vsip_csl/img/impl/pwarp_simd.hpp: New file, SIMD pwarp BE.
	* src/vsip_csl/img/perspective_warp.hpp: New file, API and functional
	  pwarp impl.
	* src/vsip_csl/ref_pwarp.hp: New file, reference version of pwarp
	  algorithm.
	* tests/vsip_csl/pwarp.cpp: New file, unit test for pwarp.
	* benchmarks/pwarp.cpp: New file, benchmark for pwarp.
	* src/vsip_csl/GNUmakefile.inc.in: Install vsip_csl/img/impl/ headers.

2007-12-13  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/GNUmakefile.inc.in: Install vsip_csl/img/ headers.

2007-12-07  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add comments concerning isnan, isfinite, and isnormal 
	checks.
	* src/vsip/core/promote.hpp: Add missing type promotion specialization.
	* tests/coverage_unary_impl.cpp: Only test available functions.
	* tests/fft_be.cpp: Change the way we account for failures.
	* tests/vsip_csl/load_view.cpp: Conditionalize debug code on DEBUG macro.
	* benchmarks/prod.cpp: Disable blas-specific benchmark for split-complex 
	blocks.
	
2007-12-06  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/temp_buffer.hpp: Modified destructor to utilize
	  return_temporary_buffer() to de-allocate memory obtained with
	  get_temporary_buffer().

2007-12-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/signal/types.hpp (support_min_zeropad): New
	  support_region_type.
	* src/vsip_csl/img/impl/sfilt_common.hpp: New file, common
	  separable filter functions and types.
	* src/vsip_csl/img/impl/sfilt_ipp.hpp: New file, IPP BE for sfilt.
	* src/vsip_csl/img/impl/sfilt_gen.hpp: New file, generic BE for sfilt.
	* src/vsip_csl/img/separable_filter.hpp: New file, FE for sfilt.
	* tests/vsip_csl/sfilt.cpp: New file, unit test for sfilt.
	* benchmarks/sfilt.cpp: New file, benchmark for sfilt.

2007-12-04  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac(cygwin_mount): New variable.
	* GNUmakefile.in: Define it.
	* tests/QMTest/configuration.in: Use it.
	* tests/GNUmakefile.inc.in: Use it. Add special handling for windows.
	* tests/vsip_csl/load_view.cpp: Don't include unistd.h if not needed.
	* examples/vcproj: Add proper quoting for Windows paths to work.
	* doc/quickstart/quickstart.xml: Document building examples with 
	MS Visual Studio.

2007-11-14  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip_csl/test.hpp (equal): Move Lvalue_proxy variants
	  after the other implementations of equal().

2007-11-12  Brooks Moses  <brooks@codesourcery.com>

	* doc/quickstart/quickstart.xml: Clean up code examples.

2007-11-09  Brooks Moses  <brooks@codesourcery.com>

	* tests/solver-cholesky.cpp: Correct include file for VERBOSE.
	* tests/solver-covsol.cpp: Likewise.
	* tests/solver-llsqsol.cpp: Likewise.
	* tests/solver-qr.cpp: Likewise.
	* tests/solver-svd.cpp: Likewise.
	* tests/solver-toepsol.cpp: Likewise.

2007-11-08  Brooks Moses  <brooks@codesourcery.com>

	* doc/manual/manual.xml: New file.
	* doc/manual/overview.xml: New file.
	* doc/GNUmakefile.inc.in: Add build rules for manual.xml.

2007-11-01  Jules Bergmann  <jules@codesourcery.com>
	
	* scripts/trunk-gpl-snapshot.cfg: Use 'csl/fftw/trunk' for FFTW.
	
2007-11-01  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip_csl/matlab_bin_formatter.hpp: Fix Wall warnings.

2007-10-31  Brooks Moses  <brooks@codesourcery.com>

	* tests/regressions/matrix_headers.cpp: Define vsip::vsipl object.
	* tests/regressions/tensor_headers.cpp: Likewise.
	* tests/regressions/vector_headers.cpp: Likewise.

2007-10-31  Stefan Seefeld  <stefan@codesourcery.com>

	* examples/vcproj: Add MS Visual Studio file templates.
	* examples/GNUmakefile.inc.in: Generate MS VS solution.
	* src/vsip/GNUmakefile.inc.in: Fix install-core to do 
	what the comment suggests.
	
2007-10-31  Jules Bergmann  <jules@codesourcery.com>

	Matlab IO cleanup.
	* src/vsip_csl/matlab_file.hpp (header): New function, return file
	  header.
	* src/vsip_csl/matlab.hpp (File_header): Rename class from 'header'.
	  Add data_type and class_type helper stringify functions.
	* src/vsip_csl/matlab_bin_formatter.hpp: General cleanup and
	  commenting.  Straighten out version handling.

	Extend matlab test coverage.
	* tests/matlab_bin_file/matlab_bin_file.cpp: New location, also
	  reads pre-canned matlab data files for big- and little- endian.
	* tests/matlab_bin_file/data/matlab-ref-be.mat: Pre-canned big-endian
	  data file.
	* tests/matlab_bin_file/data/matlab-ref-le.mat: Pre-canned
	  little-endian data file.

	New utility to list contents of matlab file.
	* apps/utils/lsmat.cpp: New file, lists contents of matlab file.
	* apps/utils/GNUmakefile.inc.in: New file, integrated makefile for
	  apps/utils.
	* apps/utils/GNUmakefile: New file, standalong makefile for apps/utils
	* GNUmakefile.in: Include apps/utils/GNUmakefile.inc
	
2007-10-30  Jules Bergmann  <jules@codesourcery.com>

	* tests/tutorial/matlab_iter_example.cpp (test_write): New function,
	  initialize sample.mat.

2007-10-30  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/ipp/bindings.hpp: Add bindings for vcopy and vzero.
	* src/vsip/opt/ipp/bindings.cpp: Likewise.
	* src/vsip/opt/ipp/fir.hpp: Manipulate C arrays directly, rather
	  than round-tripping through blocks + ext_data.
	* benchmarks/fir.cpp: Parameterize decimation.  Add -0 documentation.

2007-10-30  Jules Bergmann  <jules@codesourcery.com>
	
	* src/vsip/opt/ipp/fir.hpp: Avoid undefined behavior with
	  user-specified storage (need admit/release) and ext_data
	  (cannot modify block while ext_data is active).
	* tests/fir.cpp: Add additional verbose output.
	
2007-10-29  Brooks Moses  <brooks@codesourcery.com>

	* configure.ac: Remove check for doxygen.
	* GNUmakefile.in: Disable doxygen.

2007-10-29  Brooks Moses  <brooks@codesourcery.com>

	* doc/quickstart/quickstart.xml: Document --with-atlas-libdir
	  and --with-atlas-include configure options.  Correct typos
	  and clean up various glitches.
	  (Building PDF Documentation): New section.
	  
2007-10-29  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip_csl/matlab_file.cpp (Matlab_file::Matlab_file):
	  Add checking for successful file opening.
	* src/vsip_csl/matlab_bin_formatter.hpp: Add error-checking
	  for all istream read() calls; skip over padding with ignore()
	  rather than read().  Fix typos.

2007-10-27  Brooks Moses  <brooks@codesourcery.com>

	* GNUmakefile.in (csldocbookdir): Base on $(abs_srcdir).

2007-10-26  Brooks Moses  <brooks@codesourcery.com>

	* configure.ac: If g2c check for existing ATLAS w/CBLAS fails
	  then just ignore it.  Simplify selection of ATLAS libdir and
	  incdir.
	  (--with-atlas-include): New option.

2007-10-26  Brooks Moses  <brooks@codesourcery.com>

	* GNUmakefile.in (CPPFLAGS): New variable.
	  (CXXCPPFLAGS): Base on $(CPPFLAGS), not @CPPFLAGS@.
	* src/vsip/opt/cbe/alf/src/ppu/GNUmakefile.inc.in
	  (ALF_CPPFLAGS): Include $(CPPFLAGS).

2007-10-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/vector.hpp (operator()): Add asserts.
	* src/vsip/matrix.hpp: Likewise.
	
	* src/vsip/core/view_cast.hpp: Fix bug.  Converting to same type.
	* tests/view_cast.cpp: Add coverage for above bug.
	
	* configure.ac: Check for SAL vthrx.
	* src/vsip/opt/sal/elementwise.hpp: Work around if SAL vthrx missing.

	Allow eval diags to be used before dispatch_assign is included.
	(i.e. in dispatch evaluators).
	* src/vsip/core/dispatch_assign.hpp: Move decls into ...
	* src/vsip/core/dispatch_assign_decl.hpp: here.
	* src/vsip/opt/diag/eval.hpp: Include decls.

	* src/vsip/core/signal/conv.hpp (impl_performance): Fix call to mops.
	* src/vsip/opt/diag/fft.hpp: Show more detail on fastpath.
	* src/vsip/opt/expr/eval_fastconv.hpp (name): Distinguish cases.
	
	* scripts/char.pl (-ms): New option.  Set sample time.
	* scripts/fmt-profile.pl: Fix bug in summation of op counts.

2007-10-23  Brooks Moses  <brooks@codesourcery.com>

	* doc/README: Fixed typos.

2007-10-23  Brooks Moses  <brooks@codesourcery.com>

	* configure.ac (CPP_SPU_FLAGS): New variable.
	  Apply $neutral_acconfig to VSIP_CBE_SDK_VERSION.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Use CPP_SPU_FLAGS
	  variable from configure.

2007-10-23  Brooks Moses  <brooks@codesourcery.com>

	* configure.ac: Consolidate AC_PROG_CXX and AC_PROG_CC calls.

2007-10-19  Brooks Moses  <brooks@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_fft_c.c: Include acconfig.hpp.
	* src/vsip/opt/cbe/spu/GNUMakefile.inc.in: Add -I src option
	  so that acconfig.hpp can be found.

2007-10-19  Brooks Moses  <brooks@codesourcery.com>

	* configure.ac: Move NUMA support section after compiler
	  selection.  Add -mcpu=cell and -maltivec to C/CXXFLAGS for
	  Cell, and move Cell CFLAGS settings before AC_PROG_CC.

2007-10-18  Brooks Moses  <brooks@codesourcery.com>

	* GNUmakefile.in: Import @datarootdir@.

2007-10-18  Brooks Moses  <brooks@codesourcery.com>

	* configure.ac: Replaced with-cbe-sdk-prefix with
	  with-cbe-sdk-sysroot; provided for enabling cbe_sdk
	  without giving a sysroot value; added treatment for
	  different SDK versions.
	* doc/quickstart/quickstart.xml: Document this.
	* GNUmakefile.in: Replace cbe-sdk-prefix with cbe-sdk-sysroot.
	* src/vsip/opt/cbe/alf/include/alf_config.h: Add definition
	  of addr64.
	* src/vsip/opt/cbe/alf/src/ppu/GNUmakefile.inc.in: Updated
	  include paths for SDK 3.0.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Likewise;
	  replace -lfft with -lfft_example for SDK 3.0.
	* src/vsip/opt/cbe/vec_literal.h: New file.
	* src/vsip/opt/cbe/spu/alf_fft_c.c: Replace libfft.h with
	  libfft_example.h for SDK 3.0.
	* src/vsip/opt/cbe/alf/src/inc/alf_spl.h: Remove.
	* src/vsip/opt/cbe/alf/src/ppu/alf_spl.c: Remove.

2007-10-17  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add cbe_fft as possible fft backend.
	* GNUmakefile.in: Adjust.
	* src/vsip/GNUmakefile.inc.in: Adjust.
	* src/vsip/core/fft.hpp: Adjust.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Adjust.
	* examples/GNUmakefile.inc.in: Conditionalize more examples on PNG
	availability.
	* doc/GNUmakefile.inc.in: Generate dependencies for doc generation.
	* synopsis.py.in: Adjust for better document extraction.
	* doc/tutorial/serial.xml: Fix typo.
	
2007-10-09  Stefan Seefeld  <stefan@codesourcery.com>

 	* configure.ac: Test whether SAL uses signed char types explicitely.
	* src/vsip/opt/sal/elementwise.hpp: Adjust.

2007-10-09  Don McCoy  <don@codesourcery.com>

	* doc/quickstart/quickstart.xml: Corrected description of 
	  --with-lapack to include 'simple-builtin' and 'no' options.  
	  Removed deprecated --disable-builtin-atlas option.

2007-09-10  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Fix option-default logic for --with-lapack.
	* src/vsip/core/fft.hpp: Fix typo.
	* tests/ref-impl/GNUmakefile: Remove as obsoleted.
	* tests/GNUmakefile.inc.inc: Allow ref-impl test suite to be buildable
	  without QMTest.
	
2007-08-25  Jules Bergmann  <jules@codesourcery.com>

	Fix bug: dispatch to SAL evaluated A-b*C as A*b-C.
	* src/vsip/opt/sal/is_op_supported.hpp: Remove incorrect dispatch for
	  msb_functor.
	* src/vsip/opt/sal/elementwise.hpp: Remove incorrect wrapper functions
	  for vmsb..
	* src/vsip/opt/sal/eval_elementwise.hpp: Fix typo in V_VV support
	  check.
	* tests/regressions/fused_mul_sub.cpp: Coverage for incorrect msb
	  case.

	* src/vsip_csl/GNUmakefile.inc.in (install): Add src/vsip_csl/output.

2007-08-23  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/subblock.hpp: Fix parent local domain query for
	  Subset_maps.
	* src/vsip/core/parallel/subset_map_decl.hpp: Correct computation
	  of local domain.
	* src/vsip/core/parallel/assign_chain.hpp: Expand diagnostic output
	  (no change to functionality).
	* src/vsip/opt/diag/extdata.hpp: Split helper Class_name into ...
	* src/vsip/opt/diag/class_name.hpp: ... here, new file.
	* src/vsip/opt/diag/view.hpp: New file, diagnostics for views.
	* src/vsip/opt/diag/eval.hpp: Add support for Tag_par_expr in
	  Dispatch_assign diagnostics.
	* src/vsip_csl/output.hpp: Split domain output to ...
	* src/vsip_csl/output/domain.hpp: ... here, new file.  Allows
	  domain output to be used in contexts where view decls aren't yet
	  available.
	* tests/parallel/subviews.cpp: Turn verbosity off.

2007-08-21  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/simd/expr_evaluator.hpp (Proxy_factory): Fix ct_valid
	  for Unary_expr to check operand block's ct_valid too.
	* src/vsip/opt/diag/extdata.hpp: Fix typo.
	* src/vsip/opt/diag/block.hpp: New file, diagnostics for blocks.

2007-08-20  Jules Bergmann  <jules@codesourcery.com>

	* scripts/config (MondoTestSerial): New test package, since
	  MPI is broken on build server.
	* scripts/datasheet.pl: Make vendor data optional.
	* src/vsip/vector.hpp: Pass vector fill through dispatch.
	* src/vsip/matrix.hpp: Pass matrix fill through dispatch.
	* src/vsip/opt/sal/is_op_supported.hpp: Add dispatch for SAL 
	  unsigned {long, short} -> float conversions
	* src/vsip/opt/sal/elementwise.hpp: Likewise.
	* src/vsip/opt/simd/expr_evaluator.hpp: Bump copyright.
	* src/vsip/opt/simd/expr_iterator.hpp: Pre-splat scalar constants
	  into SIMD reg.
	* src/vsip/opt/diag/eval.hpp: Handle scalar expressions.
	* src/vsip/opt/expr/serial_evaluator.hpp: Skip transpose evaluator
	  on non-transpose type conversions.
	* configure.ac: Fix bug in SAL cfg defines.
	* benchmarks/memwrite.cpp: Add diag.

2007-08-09  Jules Bergmann  <jules@codesourcery.com>

	* vendor/GNUmakefile.inc.in: Add missing INSTALL -d's.

2007-08-09  Jules Bergmann  <jules@codesourcery.com>

	New evaluator, handles non-dense arrays.
	* src/vsip/core/type_list.hpp (Make_type_list): Extend to 14 elements.
	* src/vsip/core/impl_tags.hpp (Mdim_expr_tag): New expr tag.
	* src/vsip/opt/diag/eval.hpp: Add support for Mdim_expr_tag.
	* src/vsip/opt/expr/eval_mdim.hpp: New file, implements multi-dim
	  expr to single-dim expression reduction (for exprs not handled
	  by Dense_expr).
	* src/vsip/opt/expr/serial_dispatch.hpp: Use Mdim_expr_tag.
	  Specialize Serial_dispatch for user/internal expressions.
	* src/vsip/opt/expr/serial_dispatch_fwd.hpp: Likewise.
	* src/vsip/opt/expr/eval_dense.hpp: Use new Serial_dispatch.
	* src/vsip/core/subblock.hpp (Sliced_block_map): Add specializations
	  for Local_or_global_map and Scalar_block_map.

	Characterization updates.
	* scripts/char.pl: Handle benchmarks that can't be built.
	* scripts/char.db: Extend core cases.
	* scripts/datasheet.pl: Likewise.

	Profile update to lower overhead of nested expression dispatch.
	* src/vsip/core/profile.hpp (Feature): Add fns_int to distinguish
	  between user- and internally- generated serial_dispatch expressions.
	* src/vsip/opt/expr/ops_info.hpp: Option to use typid for epxression
	  names in profiling.

	Fix bug in buffer allocation for FFT BE.
	* src/vsip/opt/fft/workspace.hpp (inout_size): Extend to check
	  in-place query_layout too.  Add error checking that buffer is large
	  enough.
	* src/vsip/opt/rt_extdata.hpp: Add error checking option that external
	  buffer is large enough.

	Handle partial SAL libraries.
	* src/vsip/opt/sal/fft.cpp: Control instantiation with
	  VSIP_IMPL_HAVE_SAL_{FLOAT,DOUBLE}
	* src/vsip/opt/sal/is_op_supported.hpp: Likewise.
	* src/vsip/opt/sal/fft.hpp: Likewise.
	* src/vsip/opt/sal/elementwise.hpp: Likewise.
	* configure.ac: Check if SAL supports float, double precision.

	Split large test, extend coverage.
	* tests/coverage_binary_div.cpp: Add int case to level 0.
	* tests/coverage_unary_exp.cpp: Split log tests into ...
	* tests/coverage_unary_log.cpp: .. here, new file.

	Misc.
	* src/vsip/opt/lapack/qr.hpp: Add flop-count comments.
	* src/vsip/core/check_config.cpp: Extend marcos reported.
	* benchmarks/vmagsq.cpp: Add dense and non-dense matrix expr cases.
	* benchmarks/main.cpp (-lib_config): New option, prints library_config.

2007-08-09  Jules Bergmann  <jules@codesourcery.com>

	* doc/tutorial/parallel.xml: Fix typo in parallel I/O code fragment.
	* tests/tutorial/*.cpp: New directory, tests for tutorial code
	  fragments and examples.

2007-08-08  Jules Bergmann  <jules@codesourcery.com>

	* scripts/char.pl: Capture -diag output for each run.
	* scripts/fmt-profile.pl: Fix typo in options description.
	* scripts/char.db: Add vmin set.
	* scripts/datasheet.pl: Add additional cases.
	* src/vsip/core/signal/conv.hpp: Bump copyright.
	* src/vsip/opt/sal/bindings.hpp: Add 2D convolution bindings.
	* src/vsip/opt/sal/conv.hpp: Use 2D SAL conv bindings for 2D V++ conv.
	* src/vsip/opt/sal/eval_elementwise.hpp: Fix assert to handle scalar
	  blocks with 0 size.
	* src/vsip/opt/fftw3/fft_impl.cpp: Force row alignment for FFTM.
	* src/vsip/opt/simd/simd.hpp: Add min, max, mag functions.
	* src/vsip/opt/simd/vma_ip_csc.cpp: New file, SIMD optimized
	  R += real-a * cmplx-B
	* src/vsip/opt/simd/vma_ip_csc.hpp: New file, likewise.
	* src/vsip/opt/simd/vaxpy.cpp: New file, SIMD optimized
	  R += cmplx-a * real-B + cmplx-C
	* src/vsip/opt/simd/vaxpy.hpp: New file, likewise.
	* src/vsip/opt/simd/eval_generic.hpp: Fix typo in rt_valid aligment
	  check.
	* src/vsip/opt/simd/expr_iterator.hpp: Recognize simd traits that
	  don't support div.  Add min, max, and mag support.  Fix unaligned
	  loader.
	* src/vsip/opt/diag/eval.hpp: Add support for 'A = scalar' exprs.
	* src/vsip/GNUmakefile.inc.in: Build vaxpy files.
	* tests/coverage_common.hpp: Add VERBOSE output for TEST_UNARY.
	* tests/regressions/simd_alignment.cpp: Add coverage for exprs
	  with different aligment (that require unaligned SIMD load).
	* tests/coverage_unary.cpp: Split neg tests into ...
	* tests/coverage_unary_neg.cpp: .. here, new file.
	* tests/conv-2d.cpp: Add more output on failure.
	* benchmarks/vdiv.cpp: Add diag output.
	* benchmarks/conv2d.cpp: Remove debug output.
	* benchmarks/sal/vthresh.cpp: Add coverage for vthrx.
	* examples/mercury/mcoe-setup.sh: Suppress GHC warning 175.
	
2007-07-31  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/fft/factory.hpp (create): Throw exception when
	  a suitable FFT BE can't be found.
	* src/vsip/core/expr/scalar_block.hpp: Add GHS pragmas.
	* src/vsip/opt/sal/conv.hpp: Fix out of date bits.
	* src/vsip_csl/test.hpp (Almost_equal): class version of almost_equal.
	  GreenHills could not disambiguate almost_equal in some cases.
	* scripts/char.pl: Handle recursive macros.
	* scripts/char.db: Add additional cases.
	* scripts/datasheet.pl: New file, script to generate "datasheet".
	* tests/ref-impl/solvers-lu.cpp: Avoid std::abs, ambiguous with GHS.
	* tests/ref-impl/signal-fir.cpp: Qualify use of exceptions.
	* tests/regressions/vmul_sizes.cpp: Use Almose_equal.
	* tests/regressions/transpose_assign.cpp: Use explicit delete[]
	  instead of implicit delete.
	* tests/coverage_binary.cpp: Remove add case.
	* benchmarks/loop.hpp: Fix usec/pt metric title.
	* benchmarks/fft.cpp: Fix usage description.

2007-07-31  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/signal/conv.hpp: Fix ifdef logic bug.  Optimized
	  BEs were not being included.
	* src/vsip/opt/ipp/fir.hpp: Use aligned_array for temporary storage
	  (using Vector doesn't work when dense format is split).
	* src/vsip/opt/fftw3/fft_impl.cpp (fftw3_complex_type): Centralize
	  choice of complex_type.
	  (USE_FFTW_SPLIT): New macro, avoid use of split-complex altogether.
	* src/vsip/opt/diag/eval.hpp (Dispatch_name): Add missing impl tags.
	* tests/fft.cpp: Fix Wall warning.
	* benchmarks/conv.cpp: Add diag output.
	* benchmarks/conv2d.cpp: New file, benchmark for 2D convolution.

2007-07-30  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/layout.hpp: Fix typo.
	* src/vsip/core/parallel/scalar_block_map.hpp (impl_apply): Remove
	  assert.
	* src/vsip/core/parallel/expr.hpp (Par_expr_block): Add pass-thru
	  Is_sized_block trait.
	* src/vsip/opt/fftw3/fft_impl.cpp: Work around FFTW split-complex
	  bugs.  Fix broken VSIPL++ split-complex inverse transforms.
	  Add missing transforms for FFTM split real->complex and
	  complex->real.
	* src/vsip/opt/simd/expr_evaluator.hpp: Fix handling of unaligned
	  data.
	* src/vsip/opt/simd/expr_iterator.hpp: Likewise.
	* src/vsip/opt/diag/extdata.hpp (Diagnose_rt_ext_data): New helper
	  function for debugging Rt_ext_data.
	* tests/regressions/fft_ip_subview.cpp: New file, test in-place
	  FFT and FFTM, including subviews.
	* tests/regressions/simd_alignment.cpp: New file, test SIMD with
	  unaligned data.
	* tests/regressions/subview_exprs.cpp: Add VERBOSE output.
	* tests/fftm.cpp: Fix typo in file header.
	* tests/fft.cpp: Add more VERBOSE output.
	
2007-07-27  Jules Bergmann  <jules@codesourcery.com>

	Fix bug with distributed matrix and tensor index reductions.
	* src/vsip/opt/reductions/par_reductions.hpp (generic_par_idx_op):
	  Remove unused vector
	* tests/regressions/par_maxval.cpp: Add regressions for distributed
	  matrices and tensors.

	Split large tests.
	* tests/coverage_unary.cpp: Split trig and exp/ln into ...
	* tests/coverage_unary_trig.cpp: ... here, new file.
	* tests/coverage_unary_exp.cpp: ... here, new file.
	* tests/fft.cpp: Split common bits, 2D, and block_types into ...
	* tests/fft_common.hpp: ... here, new file,
	* tests/fft2d.cpp: ... here, new file.
	* tests/fft_block_type.cpp: ... here, new file.

2007-07-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/layout.hpp (Applied_layout): Make extent parameter
	  generic.
	* src/vsip/core/length.hpp (size_of_dim): New function, return length
	  of dimension.
	* src/vsip/domain.hpp (size_of_dim): Likewise.
	* src/vsip/opt/fftw3/create_plan.hpp: Fix Wall warnings.
	
	* GNUmakefile.in (install-core): New rule, install non-documentation
	  part of library.  install depends on install-core, so its behavior
	  is unchanged.
	* src/vsip/GNUmakefile.inc.in (install-core): Use it.
	* src/vsip_csl/GNUmakefile.inc.in (install-core): Use it.
	* tests/GNUmakefile.inc.in: Link tests in csl directory with
	  -lvsip_csl.
	
2007-07-16  Assem Salama <assem@codesourcery.com>
	
	* src/vsip/core/type_list.hpp: Added a new arg to the template list
	  for a new dispatch.
	* src/vsip/opt/reductions/par_reductions.hpp: Fixed problem with
	  reduction-idx test.
	* src/vsip/opt/simd/simd.hpp: Added load unaligned for complex vectors.
	* src/vsip/opt/simd/eval_generic.hpp: Added another check to the
	  threshold evaluator.
	* src/vsip/opt/simd/expr_evaluator.hpp: Changed dispatch to handle when
	  all vectors are same alignemnt.
	* src/vsip/opt/simd/expr_iterator.hpp: Forced direct access proxies
	  to load aligned pointers.

2007-07-13  Jules Bergmann  <jules@codesourcery.com>

	* doc/tutorial/tutorial.xml: Bump copyright date.

	* doc/tutorial/api.xml: Add description of using Matlab IO.
	* doc/tutorial/src/matlab_bin_formatter_read.cpp: New file, example
	  program for Matlab IO.
	* doc/tutorial/src/matlab_text_formatter_prelude.cpp: Likewise.
	* doc/tutorial/src/matlab_iter_example_prelude.cpp: Likewise.
	* doc/tutorial/src/matlab_bin_formatter_write.cpp: Likewise.
	* doc/tutorial/src/matlab_text_formatter.cpp: Likewise.
	* doc/tutorial/src/matlab_bin_formatter_prelude.cpp: Likewise.
	* doc/tutorial/src/matlab_iter_example1.cpp: Likewise.
	* doc/tutorial/src/matlab_iter_example2.cpp: Likewise.
	* doc/tutorial/src/matlab_text_formatter-text.m: Likewise.

	* doc/tutorial/src/rm_iteration.hpp: Use put instead set for blocks.
	* doc/tutorial/src/dense1.hpp: Likewise.
	* doc/tutorial/src/dense3.hpp: Likewise.

2007-07-02  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/expr/generator_block.hpp (Generator_expr_block):
	  Remove use of missing define, use Local_or_global_map.
	* src/vsip/core/parallel/scalar_block_map.hpp (impl_apply): Fix
	  Wall warning.
	* vendor/GNUmakefile.inc.in: Use $(MAKE) instead of make.
	* configure.ac (--disable-shared-acconfig): New option, puts
	  varying defines in acconfig.h instead of on command line.
	  (fftw3_simd): New option, disables use of SIMD with builtin
	  FFTW3.
	* doc/quickstart/quickstart.xml: Document new configure options.
	  Prefer "Cell/B.E.".
	
2007-06-26  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/mpi/services.hpp (VSIP_IMPL_MPI_H_TYPE): Fix typo 
	  for systems having their MPI header files in the mpi/ subdirectory.

2007-06-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/expr/scalar_block.hpp (Scalar_block_base): Add
	  copy constructor when compiling with GCC 3.x.  Work around
	  apparant inlining/optimization bug.
	* tests/coverage_common.hpp: Add optional verbose debug output.
	* tests/ea_from_ptr.cpp: Only test vsip::impl::cbe when CBE
	  support is actually installed.
	
	* benchmarks/hpec_kernel/GNUmakefile.inc.in (install-benchmarks):
	  Rename rule from install.
	* benchmarks/GNUmakefile.inc.in (install-benchmarks): Likewise.
	* scripts/package.py: Install benchmarks using 'install-benchmarks'
	  rule.

2007-06-17  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/fftw3/fft_impl.cpp: Respect aligned when planning for
	  R-to-C and C-to-R transforms.
	* src/vsip_csl/GNUmakefile.inc.in (install): Install stencil headers.
	* tests/fft.cpp: Fix template typo.
	* benchmarks/fftw3/fft.cpp: Fix Wall warning.

2007-06-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/layout.hpp (Applied_layout<Rt_layout<Dim> >): Check
	  pack type before adjusting strides to meat alignment.
	* src/vsip/opt/fft/workspace.hpp (workspace): Allocate temporary
	  buffers large enough to fix row-start alignment.
	* src/vsip/opt/fftw3/fft_impl.hpp: Robustify Fftm stride handling.
	* src/vsip/opt/fftw3/create_plan.hpp: Fix Wall warnings.
	* tests/regressions/rtl_align.cpp: New file, regression test
	  for above Applied_layout<Rt_layout<Dim> > fix.

2007-06-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/impl_tags.hpp (Simd_unaligned_loop_fusion_tag):
	  Add missing tag.
	* src/vsip/opt/simd/simd.hpp (simd): Add has_perm trait to general
	  class.

2007-06-14  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/stencil.hpp: Disable debug output.
	* src/vsip_csl/stencil/boundary_factory.hpp: Likewise.

2007-06-12  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/fftw3/fft_impl.cpp: Resolve various conflicts and relax 
	alignment requirements.
	* src/vsip/opt/fftw3/create_plan.hpp: Require Stride_unit_align everywhere.
	
2007-06-12  Jules Bergmann  <jules@codesourcery.com>

	Optimize Scalar_block handling.
	* src/vsip/core/expr/scalar_block.hpp (Scalar_block_shared_map):
	  New class, holds single shared map for scalar blocks.
	  (Scalar_block): Use Scalar_block_map (instead of
	  Local_or_global_map).
 	  Do not record block size.
	* src/vsip/core/expr/scalar_block.cpp: New file.  Definition for
	  shared map.
	* src/vsip/core/expr/binary_operators.hpp: Update for sizeless
	  Scalar_blocks.
	* src/vsip/core/map_fwd.hpp (Scalar_block_map): Forward decl.
	* src/vsip/opt/fft/workspace.hpp: Update for sizeless Scalar_blocks.

	Optimize binary and tenary functions to avoid ref-count overhead.
	* src/vsip/core/expr/functor.hpp: Pass view values by const-ref
	  (to avoid reference counting overhead).  Update for sizeless
	  Scalar_blocks.
	* src/vsip/core/fns_elementwise.hpp: Pass view values by const-ref.
	  (VSIP_IMPL_BINARY_FUNC_USEOP): New macro for functions that can
	  share a functor with an existing operation, instead of creating
	  a redundant one (such as mul and op::Mult).
	* src/vsip/opt/expr/ops_info.hpp: Remove mul_functor op counts.
	* src/vsip/GNUmakefile.inc.in (src_vsip_cxx_sources): Add
	  core/expr/*.cpp files.
	
	Misc updates.
	* src/vsip/core/parallel/global_map.hpp (Global_map): Add missing
	  initializer for member variable
	* src/vsip/opt/rt_extdata.hpp (is_alias): Make function inline.
	* src/vsip/opt/simd/eval_generic.hpp: Add Ext_data_cost check to
	  threshold evaluator.
	* src/vsip/opt/diag/fft.hpp: Fix Wall warning.
	* src/vsip/core/check_config.cpp: Include compiler version info.
	* tests/coverage_common.hpp: Extend coverage to include distributed
	  maps.
	* tests/regressions/vmul_sizes.cpp: Fix missing of cout.
	* tests/regressions/large_vmul.cpp: Likewise.
	* benchmarks/loop.hpp: Add start/stop marker functions.
	* benchmarks/main.cpp: Likewise.
	* benchmarks/vmul.cpp: Split scalar-vector cases into svmul.cpp.
	  Add mul() cases.
	* benchmarks/vmul.hpp: Add classes for 'mul()' function cases.
	* benchmarks/ipp/vmul.cpp: Use VSIPL++ memory allocation.
	* benchmarks/sal/vmul.cpp: Fix bug in complex svmul cases.
	* benchmarks/sal/lvgt.cpp: New file, benchmark for SAL lvgtx.
	* benchmarks/sal/vthresh.cpp: New file, benchmark for SAL vthresx.
	* scripts/char.db: Add vmul/vthresh cases.

2007-06-12  Don McCoy  <don@codesourcery.com>

	* benchmarks/dot.cpp: Adds a compile time check to
	  ensure the evaluator exists and a specialization
	  to report a warning if it does not.

2007-06-09  Assem Salama  <assem@codesourcery.com>

	* src/vsip/opt/fftw3/fft.cpp: Added support using fftw3 split interface.
	* src/vsip/opt/fftw3/fft_impl.cpp: Impl class now uses create_plan
	  structure to manage creation of plans.
	* src/vsip/opt/fftw3/create_plan.hpp: New file. Contains create_plan
	  struct.
	* src/vsip/opt/fftw3/fftw_support.hpp: New file. Contains overloaded
	  create functions for plans.

2007-06-07  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/fftw3/fft_impl.cpp: Add alignment constraint for 1D FFTs.

2007-06-05  Jules Bergmann  <jules@codesourcery.com>

	* tests/coverage_ternary.cpp: Delete file, split into ...
	* tests/coverage_ternary_ma.cpp: New file, ... this.
	* tests/coverage_ternary_am.cpp: New file, ... this.
	* tests/coverage_ternary_msb.cpp: New file, ... this.
	* tests/coverage_ternary_sbm.cpp: New file, ... and this.
	* tests/coverage_common.hpp (TEST_BINARY_OP): New macro.
	* tests/coverage_binary.cpp: Split add/sub/mul/div into ...
	* tests/coverage_binary_add.cpp: ... here.
	* tests/coverage_binary_sub.cpp: ... here.
	* tests/coverage_binary_mul.cpp: ... here.
	* tests/coverage_binary_div.cpp: ... and here.
	* tests/parallel/block.cpp: Split par assign tests into ...
	* tests/parallel/assign.cpp: New file, ... here.
	* tests/util-par.hpp (check_local_view): Common function.

2007-06-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/simd/simd.hpp: Fix compilation errors.  Workaround
	  ppu-g++ handling of vec_cmple.

2007-06-05  Don McCoy  <don@codesourcery.com>

	* benchmarks/cell/bw.cpp: Remove debug code.
	* benchmarks/makefile.standalone.in: Allow configuration
	  parameters to set build variables to default values.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: Conditionalize
	  building of SVD benchmark on whether or not LAPACK is available.

2007-06-04  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/stencil.hpp: New stencil harness.
	* src/vsip_csl/stencil/boundary_factory.hpp: Likewise.
	* src/vsip_csl/stencil/expr.hpp: Likewise.
	* src/vsip_csl/stencil/bounds_finder.hpp: Likewise.
	* src/vsip_csl/stencil/kernel_builder.hpp: Likewise.
	* src/vsip/matrix.hpp: Add support for stencil expressions.
	* tests/vsip_csl/stencil_expr.cpp: Test it.
	* examples/stencil.cpp: Demo it.
	* examples/sobel.cpp: Likewise.
	* examples/GNUmakefile.inc.in: Build it.
	* examples/png.cpp: Require output option.
	
2007-06-04  Assem Salama  <assem@codesourcery.com>

	* src/vsip/core/fns_elementwise.hpp: Added a new unary operator
	  'unaligned' that allows a user to flag a vector as possibly
	  unaligned.
	* src/vsip/core/parallel/expr.hpp: Added a Choose_subblock class to
	  switch between Map_subset_block and Subset_block.
	* src/vsip/opt/simd/simd.hpp: Added a has_perm flag to Simd_traits.
	  This trait tells us if the simd implementation supports permutation
	  vectors.
	* src/vsip/opt/simd/expr_evaluator.hpp: Added a new dispatcher,
	  SIMD_unaligned_loop_fusion. This dispatcher treats all vectors
	  as unaligned if any one is.
	* src/vsip/opt/simd/expr_iterator.hpp: Made the threshold dispatch
	  support any Binary op.

2007-05-23  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: New --with-cbe-default-num-spes option, check for
	CC_SPU and EMBED_SPU.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Use them.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Use new VSIP_IMPL_CBE_NUM_SPES.

2007-05-23  Jules Bergmann  <jules@codesourcery.com>

	* benchmark/hpec_kernel/GNUmakefile.inc.in (install): Depend on
	  hpec_kernel.

2007-05-22  Jules Bergmann  <jules@codesourcery.com>

	* tests/ref-impl/test.hpp: Use vsip::mag instead of std::abs.
	  std::abs not provided on GHS/MCOE.
	* benchmark/GNUmakefile.inc.in (install): Depend on benchmarks.

2007-05-22  Stefan Seefeld  <stefan@codesourcery.com>

	* scripting/signal.cpp: Fix build failure.

2007-05-22  Jules Bergmann  <jules@codesourcery.com>

	* svn:externals: Remove externals for vendor/fft and tests/ref-impl.
	  vendor/fft must be checked out manually.  test/ref-impl has been
	  copied within SVN.

2007-05-22  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/alf/src/ppu/GNUmakefile.inc.in: Guard dependency
	  rule for ALF C files only.
	* src/vsip/opt/simd/simd.hpp: Fix use of unavailable comparisons.
	* GNUmakefile.in: Fix dependency generation for MCOE/GreenHills.
	* configure.ac: Report mpi probe status.  Update generic lapack
	  trypkg names.  Add support for Ubuntu 7.04's lapack/atlas.

2007-05-17  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/alf/src/ppu/GNUmakefile.inc.in: Added rule to 
	  generate dependencies for ALF correctly.
	* GNUmakefile.in: Removed generic rule for building C dependencies.

2007-05-17  Jules Bergmann  <jules@codesourcery.com>

	* scripts/package.py (describe): Add missing parameter.

2007-05-17  Assem Salama <assem@codesourcery.com>

	* src/vsip/opt/simd/eval_generic.hpp: Changed check for binary operator
	  support to ct_valid.

2007-05-17  Jules Bergmann  <jules@codesourcery.com>

	* scripts/1.3.1-com.cfg: New file, source config for 1.3.1 commercial
	  release.
	* scripts/1.3.1-gpl.cfg: New file, source config for 1.3.1 GPL
	  release.
	* scripts/branches-1.3-gpl-snapshot.cfg: New file, source config for
	  branches/1.3 GPL snapshot.
	* scripts/trunk-gpl-snapshot.cfg: New file, source config for trunk
	  GPL snapshot.

2007-05-17  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/simd/simd.hpp (load_unaligned): New function for SIMD
	  traits.
	* src/vsip/opt/simd/expr_iterator.hpp: pre-load scalar value into SIMD
	  register.
	* tests/simd.cpp: Add tests for load_unaligned.

2007-05-17  Jules Bergmann  <jules@codesourcery.com>

	* scripts/char.db: Document requirements.  Add cell and patience
	  requirements.
	* scripts/char.pl: Allow multiple -db options.
	* scripts/graph.pl: New file, script for plotting performance
	  graphs.
	* scripts/graph.db: New file, description of performance graphs.
	  Used by graph.pl.

2007-05-16  Assem Salama  <assem@codesourcery.com>
	
	* src/vsip/opt/simd/simd.hpp: Added support for ge and le.
	* src/vsip/opt/simd/threshold.hpp: Added support for arbitrary binary
	  ops.
	* src/vsip/opt/simd/threshold.cpp: Addes support for arbitrary binary
	  ops.
	* src/vsip/opt/simd/eval_generic.hpp: Added support for arbitrary binary
	  ops.
	* src/vsip/opt/simd/expr_evaluator.hpp: Added support for ternary
	  expressions using loop fusion.
	* src/vsip/opt/simd/expr_iterator.hpp: Added support for ternary
	  expressions using loop fusion.

2007-05-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/diag/fft.hpp: New file, diagnostics for Fft.
	* src/vsip/core/fft.hpp (fft_facade): make Diagnose_fft friend.
	  (fftm_facade): Likewise.
	* benchmarks/fft.cpp: Have diag function use Diagnose_fft.
	
	* tests/fft_ext/fft_ext.cpp: Use test_assert instead of assert.
	  Return EXIT_FAILURE instead of exit(-1) on failure.  -1 confuses
	  qmtest.
	* benchmarks/cell/fastconv.cpp: Add single-line fastconvolution
	  case.
	* benchmarks/fftw3/fft.cpp: Add split FFT benchmark case.
	* benchmarks/fftm.cpp: Compute riob/wiob.  Fix mem_per_point calc.
	* benchmarks/vmmul.cpp: Add diag function.  Add scaled variants.

2007-05-15  Don McCoy  <don@codesourcery.com>

	* benchmarks/GNUmakefile.inc.in: Now installs benchmarks (binaries).
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: Likewise.
	* benchmarks/hpec_kernel/make.standalone: Removed (again -- was
	  removed previously on 2006-07-07).

2007-05-15  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/alf.hpp: Removed obsolete function calls.
	Removed 'volatile' from alf_comp_kernel() calls:
	* src/vsip/opt/cbe/spu/alf_fconv_c.c
	* src/vsip/opt/cbe/spu/alf_fft_c.c
	* src/vsip/opt/cbe/spu/alf_vmul_c.c
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c
	* src/vsip/opt/cbe/spu/alf_fconvm_c.c
	* src/vsip/opt/cbe/spu/alf_vmul_split_c.c
	* src/vsip/opt/cbe/spu/alf_vmmul_c.c
	* src/vsip/opt/cbe/spu/alf_vmul_s.c
	* src/vsip/opt/cbe/spu/alf_fconvm_split_c.c

2007-05-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/simd/threshold.hpp (simd_thresh, simd_thresh0): Fix
	  compilation error.  Make static inline.
	* src/vsip/opt/simd/simd.hpp (AltiVec float load_scalar): Fix GHS
	  compilation error.
	* src/vsip/opt/expr/lf_initfini.hpp: Add missing inline.
	
2007-05-14  Assem Salama <assem@codesourcery.com>

	* src/vsip/opt/simd/threshold.hpp: New file. Implements a SIMD threshold
	  function.
	* src/vsip/opt/simd/threshold.cpp: New file. This file contains the
	  function call if no inlining is used.
	* src/vsip/opt/simd/simd.hpp: Added Alg_threshold to list of structs.
	* src/vsip/opt/simd/eval_generic.hpp: Added a Serial_expr_dispatch
	  for Alg_threshold.
	* src/vsip/GNUmakefile.inc.in: Added opt/simd/threshold.cpp to makefile.
	  	
2007-05-13  Don McCoy  <don@codesourcery.com>

	* GNUmakefile.in: Install missing directory.
	* src/vsip/GNUmakefile.inc.in: Likewise.
	* benchmarks/makefile.standalone.in: Clarified comments.
	  Added 'all' target so that it now builds the benchmarks 
	  that are in the subdirectories as well.

2007-05-13  Don McCoy  <don@codesourcery.com>

	* benchmarks/mpi/alltoall.cpp: Fixed header path, derived from 
	  benchmark base class in order to provide diag() function.
	* benchmarks/mpi/copy.cpp: Derived from benchmark base.
	* benchmarks/ipp/fft.cpp: Derived from benchmark base.  Fixed riob 
	  and wiob_per_point functions to avoid warning about sign.
	* benchmarks/ipp/fft_ext.cpp: Likewise.
	* benchmarks/ipp/vmul.cpp: Derived from benchmark base.
	* benchmarks/ipp/conv.cpp: Derived from benchmark base, fix 
	  header paths.
	* benchmarks/ipp/mcopy.cpp: Likewise.
	* benchmarks/fftw3/fftm.cpp: Fixed riob/wiob warning.
	* benchmarks/lapack/qrd.cpp: Derived from benchmark base.
	* benchmarks/fftm.cpp: Fixed riob/wiob warning.
	* benchmarks/sal/fft.cpp: Fixed missing typename keyword for Scalar_of.
	* benchmarks/vmmul.cpp: Fixed riob/wiob warning.
	* benchmarks/make.standalone: Renamed to makefile.standalone.in
	  (now installed as */benchmarks/Makefile).
	* benchmarks/GNUmakefile.inc.in: Modified to install the benchmark
	  source code.

2007-05-10  Don McCoy  <don@codesourcery.com>

	* benchmarks/hpec_kernel/cfar.cpp: Derive from Benchmark_base, 
	  add compiler directive to exclude hybrid case for non-SSE
	  platforms.
	* benchmarks/hpec_kernel/firbank.cpp: Derive from Benchmark_base,
	  add new test case for expression involving FFTMs.
	* benchmarks/hpec_kernel/svd.cpp: Derive from Benchmark_base.
	* benchmarks/hpec_kernel/cfar_c.cpp: Likewise.  Added compiler
	  directive to exclude SIMD code for non-SSE platforms.

2007-05-09  Don McCoy  <don@codesourcery.com>

	* doc/tutorial/tutorial.xml: Included new chapter.
	* doc/tutorial/benchmarks.xml: New file, benchmark reference.

2007-05-09  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/simd/simd.hpp: Fix faux-complex trait to work
	  around GHS internal error.

2007-05-09  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Fix typo in check for std::isfinite.
	* examples/mercury/mcoe-setup.sh: Enable exceptions (rather than
	  probe) when exceptions="y".
	
2007-05-08  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/fns_elementwise.hpp (is_finite, is_nan, is_normal):
	  change from UNARY_VIEW_FUNC_RETN to UNARY_FUNC_RETN.
	* src/vsip/core/fns_scalar.hpp (HAVE_STD_IS{FINITE,NAN,NORMAL}):
	  Use them.
	  (hypot): Work around mising ::hypot.
	* vendor/GNUmakefile.inc.in: Only build FFTW libraries, not benchmarks
	  and tests.
	* tests/coverage_common.hpp (TEST_UNARY): Document.
	* tests/coverage_unary_impl.cpp: New file, tests for impl unary
	  operators, such as is_nan, is_normal, and is_finite.
	* configure.ac: Check for std::is_{nan, finite, normal}.
	  Check for hypot.
	* examples/mercury/mcoe-setup.sh: Update to allow toolset
	  selection.  Change defaults (split complex format, ppc7447
	  architecture). 
	
2007-05-08  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/fft/backend.hpp: Add axis static member variable
	  to fft and fftm backend classes.
	* src/vsip/core/parallel/support_block.hpp: New file, block versions
	  of select parallel support functions in parallel/support.hpp.
	* src/vsip/opt/fft/return_functor.hpp (Fft_return_functor::local):
	  Properly determine local subblock size for Fftm case.
	* tests/regressions/dist_fftm_mmul.cpp: New file, regression test
	  for Fftm return_functor local subblock size.
	
2007-05-03  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fft.cpp (Fftm_impl): Return if empty subblock.
	* tests/regressions/dist_fftm.cpp: New file, regression test for
	  empty subblock handling.
	* tests/GNUmakefile.inc.in (tests_parallel_CXXINCLUDES): New
	  variable, add include path for compiling tests in parallel/ subdir.
	
2007-04-29  Assem Salama <assem@codesourcery.com>
	
	* tests/parallel/vramp.cpp: New file. This file tests the ramp
	  function.
	* src/vsip/core/expr/map_subset_block.hpp: Added const to the get
	  functions so that it works with Binary_expr_block.

2007-04-27  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (PAS_HEAP_SIZE, PAS_SHARE_DYNAMIC_XFER): Alway define.
	  (LDFLAGS): Fix bug when configuring for SAL that introduced empty
	  -L option.

2007-04-26  Assem Salama <assem@codesourcery.com>
	
	* src/vsip/core/parallel/expr.hpp: Changed the Par_expr_block that
	  is specialized for Peb_reuse_tag to use Distributed_generator_block
	  instead of Subset_block.
	* src/vsip/core/expr/map_subset_block.hpp: New file. New class
	  Map_subset_block. This new class works with either a 
	  Block_dist or Cyclic_dist. It uses global_from_local_index to
	  retrieve values.

2007-04-26  Jules Bergmann  <jules@codesourcery.com>

	* scripts/char.pl: New file, characterization script.
	* scripts/char.db: New file, characterization parameters.
	
2007-04-26  Don McCoy  <don@codesourcery.com>

	* benchmarks/prod.cpp: Derive test classes from Benchmark_base.
	* benchmarks/conv.cpp:   "  "
	* benchmarks/corr.cpp:   "  "
	* benchmarks/dist_vmul.cpp:   "  "
	* benchmarks/vdiv.cpp:   "  "
	* benchmarks/fir.cpp:   "  "
	* benchmarks/dot.cpp:   "  "
	* benchmarks/memwrite.cpp:   "  "
	* benchmarks/memwrite_simd.cpp:   "  "
	* benchmarks/sumval.cpp:   "  "
	* benchmarks/prod_var.cpp:   "  "
	* benchmarks/sumval_simd.cpp:   "  "

2007-04-26  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/vma.cpp: Fix reference to missing header.

2007-04-22  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Fix typos with exception option handling.
	
	* LICNESE.Commercial: New file, commercial license for Sourcery
	  VSIPL++.
	* LICENSE: Refer to LICENSE.Commercial.
	
	* scripts/config: New packages for Cell BE and MCOE.
	
	* src/vsip/core/ops_info.hpp (vsip::impl::signal): Rename to
	  vsip::impl::signal_detail to make GHS C++ happy.
	* src/vsip/core/signal/fir.hpp: Likewise.
	* src/vsip/core/signal/iir.hpp: Likewise.
	* src/vsip/core/signal/conv.hpp: Likewise.
	* src/vsip/core/signal/corr.hpp: Likewise.
	
2007-04-22  Jules Bergmann  <jules@codesourcery.com>
	
	* scripts/package.py (read_config_dir): Use Source class to
	  describe source configuration.  Add 'include' function to
	  nest cfg files.
	  (configdir): New option, specifies search directory for included
	  cfg files.
	* scripts/release.sh: Use new option.
	
2007-04-20  Jules Bergmann  <jules@codesourcery.com>

	* vendor/GNUmakefile.inc.in: Fix sh redirect.
	
2007-04-20  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Probe for exception support by compiler.
	  Disable builtin ATLAS when cross-compiling.
	
2007-04-18  Jules Bergmann  <jules@codesourcery.com>

	* vendor/atlas/configure.ac: Handle unknown PowerPC architecture
	  as G4.  Determine IA64 architecture mach type.  Distinguish
	  between P4 and P4E mach types.  Improve pentium model check. 
	
2007-04-18  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/expr/eval_fastconv.hpp: Added new evaluators
	  for fast convolution using a matrix of coefficients.
	* tests/fastconv.cpp: Fixed bug in new test (fused_m_multi).

2007-04-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/util.hpp (ea_from_ptr): Fix bug for 64 bit case.
	* tests/ea_from_ptr.cpp: Test case for ea_from_ptr.
	
2007-04-16  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/eval_fastconv.hpp: Added two new expression 
	  templates for cases utilizing a matrix of coefficients.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Reorganization to better
	  handle coefficients.
	* tests/fastconv.cpp: New tests for expressions.
	* benchmarks/fastconv.cpp: New tests to evalutate performance.

2007-04-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/mpi/services.hpp (Mpi_datatype<bool>): Use MPI_BYTE
	  instead of MPI_Type_coniguous if sizeof(bool) == 1.  Parallel
	  reductions like MPI_BOR and MPI_BAND do not apply to user types.
	* src/vsip/core/expr/ternary_block.hpp (size): Update to not use
	  size from Scalar_block.
	* src/vsip/opt/reductions/par_reductions.hpp (reduce_idx_blk): Add
	  missing const to parameter type.
	* tests/regressions/dist_error_db.cpp: New file, regression tests
	  for distributed error_db.
	
2007-04-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/util.hpp: New file, conatins new function
	  ea_from_ptr, pulls existing functions
	  is_dma_{size_ok,addr_ok,stride_ok} from bindings.hpp.
	* src/vsip/opt/cbe/ppu/bindings.hpp: Check if num_spes > 0 at
	  rt_valid.
	* src/vsip/opt/cbe/ppu/fft.hpp: Likewise.
	* src/vsip/opt/cbe/ppu/fft.cpp: Use ea_from_ptr to convert pointer
	  to EA.
	* src/vsip/opt/cbe/ppu/fastconv.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Likewise.  Fix cleanup DMA for
	  vmul, was not properly counting length of non-cleanup DMA.
	* tests/regressions/large_vmul.cpp: New file, regression test
	  for vmul DMA cleanup.
	
2007-04-09  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/eval_fastconv.hpp: Specified value for new template
	  parameter required for Fastconv object.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Defined tasks for new kernel.
	* src/vsip/opt/cbe/ppu/fastconv.cpp: Adjusted bindings to work with 
	  both the current and the new kernel.  Fixed a bug in the split case
	  where the addresses were being incremented by twice the desired value.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Modified to allow unique coefficients
	  to be used for each row when performing multiple fast convolutions.
	* src/vsip/opt/cbe/spu/fft_1d_r2.h: Removed debug printf.
	* src/vsip/opt/cbe/spu/alf_fconvm_c.c: New file, implements fast 
	  convolution for interleaved complex data with unique coefficients.
	* src/vsip/opt/cbe/spu/alf_fconvm_split_c.c: New file, as above for
	  the complex split case.
	* tests/fastconv.cpp: Added new test cases for matrices of coefficients, 
	  parameterized on whether or not the FFT on them is done in advance.
	* benchmarks/cell/fastconv.cpp: Added two new cases as above.
	* benchmarks/alloc_block.hpp: Changed the specialization for Local_map
	  to only be defined for the one-dimensional case.
	* examples/fconv.cpp: Specified template parameter for Fastconv.

2007-04-02  Assem Salama <assem@codesourcery.com>
	
	* src/vsip/core/expr/generator_block.hpp: Made Choose_peb of
	  Generator_expr_block a Peb_remap_tag. Changed apply function to call
	  apply instead of apply_const.  Removed const from type of 
	  Combine_return_type<CombineT, Generator_expr_block<Dim,Generator>
	  const>.
	* src/vsip/core/parallel/expr.hpp: Added a new implementation of
	  Par_expr_block that uses the Peb_remap_tag. Also changed return of
	  get_local_block to local_block_ret_type instead of local_block_type&.
	  Added a new typedef in Par_expr_block for all tags that wraps
	  local_block_type in View_block_storage.

2007-03-28  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fft.cpp: Use new parameters header.
	* src/vsip/opt/cbe/ppu/fastconv.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/fft.hpp: Likewise.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Likewise.
	* src/vsip/opt/cbe/fconv_params.h: New header (was common.h).  Also
	  modified to handle addresses in a portable (32/64-bit) way.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Use new header.
	* src/vsip/opt/cbe/spu/alf_fft_c.c: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c: Likewise.
	* src/vsip/opt/cbe/fft_params.h: New header (from common.h).
	* src/vsip/opt/cbe/common.h: Removed.

2007-03-26  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Add mkdir for benchmarks/fftw3
	* benchmarks/GNUmakefile.inc.in (benchmarks_src): Add
	  benchmarks/fftw3/*.cpp.  Update subdirectory CXXFLAGS.
	* benchmarks/fftw3/fft.cpp: New file, benchmark for FFTW3 FFT.
	* benchmarks/fftw3/fftm.cpp: New file, benchmark for FFTW3 FFTM.
	
2007-03-26  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Find -lippcore for IPP 5.1 ia32.
	  (--enable-ref-impl): automatically disable lapack (--with-lapack=no).
	  (--with-lapack=atlas_no_cblas): Use ATLAS without cblas.  Necessary
	  to use Ubuntu 6.06 ATLAS.
	  Update MKL/IPP handling for ia64.
	* src/vsip/core/cvsip/fft.cpp (Fftm_impl): Fix number of rows/cols
	  used for distributed Fftms.
	
2007-03-26  Jules Bergmann  <jules@codesourcery.com>

	* tests/regressions/vector_headers.cpp: New file, regression
	  test for headers required to use a vector.
	* tests/regressions/matrix_headers.cpp: New file, likewise for
	  matrices.
	* tests/regressions/tensor_headers.cpp: New file, likewise for
	  tensors.

2007-03-23  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fastconv.cpp: Changed kernel stack 
	  allocation to allow split complex case to work with up
	  to 4 K points.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Changed mininum and 
	  maximum size constants to come from a common location.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Added asserts to
	  verify transfer size is under the 16 KB limit.
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c: Likewise.
	* src/vsip/opt/cbe/spu/spe_assert.h: New file.  Replaces
          native assert() function for SPE code.
	* src/vsip/opt/cbe/common.h: Added defines for different
	  cases (split/interleaved complex).

2007-03-19  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Remove space after -I.  Makes pkg-config unhappy.

2007-03-19  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in (hdr): Add Cbe files.
	* configure.ac: Recognize host_type "powerpc" when choosing options
	  for fftw configure.
	* doc/quickstart/quickstart.xml: Document new configure options for
	  Cell BE.
	* autogen.sh: Configure FFTW.

2007-03-19  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/spu/alf_vmmul_c.c: New file - vector-matrix
	  multiply kernel for complex, single-precision.

2007-03-19  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/task_manager.hpp: Added new task definition.
	* src/vsip/opt/cbe/ppu/bindings.hpp: Added vmmul expression block.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Invoke new vmmul routine.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Added loop unroll option.
	* src/vsip/opt/cbe/vmmul_params.h: Common definitions for vmmul.
	* tests/vmmul.cpp: Enhanced test coverage for vmmul with subviews.
	* benchmarks/vmmul.cpp: Update to use benchmark base.

2007-03-19  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/layout.hpp: Fix bug in aligned stride computation.
	* src/vsip/opt/cbe/ppu/fft.cpp: Assert fft and fftm input and output
	  are DMA aligned.
	
2007-03-21  Assem Salama <assem@codesourcery.com>

	* benchmarks/maxval.hpp: New file. This file contains a helper struct
	  to generate test vectors that are local or distributed.
	* benchmarks/maxval.cpp: Added the ability to benchmark maxval on
	  multiple processors.

2007-03-15  Assem Salama <assem@codesourcery.com>

	* src/vsip/core/reductions/par_reductions.hpp: New file. This file
	  implements parallel reductions for index operations.
	* src/vsip/core/parallel/support.hpp: Added a new function.
	  global_from_local_index_blk which operates on blocks instead of views.

2007-03-14  Assem Salama <assem@codesourcery.com>

	* src/vsip/core/mpi/services: Added Index<dim> to the MPI data
	  types.

2007-03-18  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/GNUmakefile.inc.in: Remove obsolete reference to $(SVPP_LIBRARY)
	* benchmarks/GNUmakefile.inc.in: Likewise.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: Likewise.

2007-03-18  Jules Bergmann  <jules@codesourcery.com>
	
	* src/vsip/opt/cbe/ppu/fft.cpp (query_layout): Set pack type to
	  16-byte stride_unit_dense.
	* tests/regressions/fft_unaligned.cpp: New file, regression tests
	  for unaligned Fft.
	* tests/regressions/fftm_unaligned.cpp: New file, regression tests
	  for unaligned Fftm.
	
	* tests/view_functions.cpp: Remove file, split test into ...
	* tests/view_functions.hpp: New file, ... common bits.
	* tests/view_functions_unary.cpp: New file ... unary tests.
	* tests/view_functions_binary.cpp: New file, ... binary tests.
	* tests/view_functions_ternary.cpp: New file ... ternary tests.
	
	* tests/parallel/fftm.cpp: Set VERBOSE to 0.
	
2007-03-17  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Add CBE-specific headers to $hdr.
	* src/vsip/GNUmakefile.inc.in: Install them.
	* src/vsip/opt/cbe/alf/src/ppu/GNUmakefile.inc.in: Adjust path.
	* src/vsip/opt/cbe/ppu/alf.hpp: Adjust include directives.
	* src/vsip/opt/cbe/alf/include/alf.h: Likewise.
	* vsipl++.pc.in: Remove obsolete variables.
	* tests/context.in: Likewise.
	* configure.ac: Likewise.

2007-03-17  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/fft/dft.hpp (name): New member function to aid Fft
	  backend debugging.  Fix query_layout to give input and output same
	  complex format.  Change DFT accumulation type to double to reduce
	  error.
	* src/vsip/core/fft/backend.hpp (name): New member function for Fft
	  backends.
	* src/vsip/opt/fftw3/fft_impl.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/fft.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/fft.cpp: Remove debug printf.
	* tests/regressions/fft_inter_split.cpp: New file, test FFT with
	  different complex formats for input and output.
	
	* src/vsip/opt/cbe/ppu/bindings.hpp (is_dma_addr_ok): New function,
	  check if DMA address is properly aligned.  Use in vmul dispatch.
	* src/vsip/opt/cbe/ppu/bindings.cpp (vmul): Assert that DMA addresses
	  are properly aligned.
	
	* src/vsip/opt/simd/simd.hpp: Update AltiVec SIMD traits to work
	  with both GreenHills and GCC 4.1+.  Add missing AltiVec
	  interleaved_from_split functions.
	* src/vsip/opt/simd/vmul.hpp: Fix split vmul cleanup code to work
	  when result aliases one of the operands.
	* tests/simd.cpp: New file, unit tests for SIMD traits.

	* tests/scalar_view_add.cpp: Add library initialization.
	* tests/scalar_view_sub.cpp: Likewise.
	* tests/scalar_view_mul.cpp: Likewise.
	* tests/scalar_view_div.cpp: Likewise.
	* tests/parallel/fftm.cpp: Add VERBOSE output.
	
	* src/vsip/opt/diag/eval.hpp: Add dispatch diagnostics for
	  Tag_serial_expr.
	
2007-03-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/bindings.hpp (VSIP_IMPL_CBE_DMA_GRANULARITY):
	  New macro, granularity of DMA size in bytes.
	  (is_dma_size_ok): New funcion, check if DMA size is OK.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Avoid DMAs with invalid sizes.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c: Describe assumptions on
	  DMA size (must be a multiple of 16 B).
	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Likewise.  Remove unnecessary
	  cleanup code.
	* tests/regressions/vmul_sizes.cpp: New file, regression test
	  for range of vmul sizes.
	* tests/expr-test.cpp: Add library initialization.
	
2007-03-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/initfin.cpp: Parse vsipl++ options from SVPP_OPT
	  environment variables.
	* src/vsip/core/block_copy.hpp: Call loop fusion init/fini
	  before copy.
	* src/vsip/opt/cbe/ppu/bindings.hpp (Serial_evaluator_base):
	  Check that value type is supported (float or complex<float>).
	* tests/GNUmakefile.inc.in (tests_cxx_sources): Add tests in
	  parallel and regressions subdirs.
	
2007-03-15  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fastconv.hpp: Add Fastconv_traits.
	* src/vsip/opt/cbe/ppu/fastconv.cpp: Assert valid sizes.
	* src/vsip/opt/cbe/ppu/eval_fastconv.hpp: Various fixes.
	* src/vsip/opt/cbe/common.h: Add transform_kernel flag.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Only transform kernel if needed.
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c: Likewise.
	* tests/fastconv.cpp: Test all of the above.

2007-03-14  Stefan Seefeld  <stefan@codesourcery.com>

	* examples/fconv.cpp: Specify Fastconv complex format to match
	dense data layout.
	* configure.ac: Add checks for bool and int C-VSIPL views.
	* src/vsip/core/cvsip/view.hpp: Conditionalize View_traits better.

2007-03-14  Jules Bergmann  <jules@codesourcery.com>

	General RBO functionality.
	* src/vsip/core/impl_tags.hpp (Fc_expr_tag, Rbo_expr_tag): New
	  impl tags for fastconv RBO eval, and general RBO eval.
	* src/vsip/opt/rt_extdata.hpp (is_alias): New function to determine
	  if two blocks alias.  Add calls to loop_fusion init/fini.
	* src/vsip/opt/expr/return_block.hpp: New file, return expression
	  block.
	* src/vsip/opt/expr/lf_initfini.hpp: New file, loop fusion
	  init/fini routines.  Used to evaluator return expr blocks.
	* src/vsip/opt/expr/serial_dispatch.hpp: Include RBO bits.
	* src/vsip/opt/expr/serial_dispatch_fwd.hpp: Include RBO tags
	* src/vsip/opt/expr/eval_return_block.hpp: New file, evaluate
	  simple RBO expression (A = fft(B)) without temporary.
	* src/vsip/opt/expr/serial_evaluator.hpp: Call loop fusion
	  init/fini.

	FFT RBO support.
	* src/vsip/core/fft/util.hpp: (Result_rbo, Result_fftm_rbo) traits
	  classes for Fft/Fftm to return Return_expr_blocks.
	* src/vsip/opt/fft/return_functor.hpp: New file, implements
	  Fft_return_functor to be used by Return_expr_block.
	* src/vsip/core/fft.hpp: Use Return_expr_block for Fft/Fftm result. 
	* src/vsip/opt/fft/workspace.hpp: Add block versions of by_reference
	  processing routines.

	Optimized Fastconv using RBO.
	* src/vsip/opt/cbe/ppu/eval_fastconv.hpp: New file, Cbe RBO fastconv
	  evaluator using Fastconv.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Remove unnecessary include
	  which creates loop when this file included by eval_fastconv.hpp.
	* src/vsip/opt/expr/eval_fastconv.hpp: New file, general RBO
	  fastconv evaluator using Fftm objects a row at a time.

	Diagnostic Updates (support for Ext_data and distr expressions).
	* src/vsip/opt/choose_access.hpp: Track reason behind access
	  type choice.
	* src/vsip/opt/extdata.hpp: Update for Choose_access changes.
	* src/vsip/opt/diag/extdata.hpp: New file, help diagnose Ext_data.
	* src/vsip/opt/diag/eval.hpp: Add diagnostics for distributed
	  expressions.  Rename diagnose_eval to diagnose_eval_tag.
	* tests/diag_eval.cpp: Update to exercise distributed diag
	  and use new name for diagnose_eval_tag.

	Additional Fastconv benchmark cases.
	* benchmarks/cell/fastconv.cpp: Add case for recreating Fastconv
	  object before each convolution.  Renumber cases.
	* benchmarks/fastconv.cpp: Add single-line fastconv case (9, 19).
	  Add mixed phased/interleaved case.  Add error checking.
	
	Benchmark Updates.
	* benchmarks/vma.cpp: Disable use of SIMD routines.
	* benchmarks/main.cpp: Add size parameter to -steady option.
	* benchmarks/sal/fft.cpp: Update to use benchmark base.
	* benchmarks/sal/vma.cpp: Likewise.
	* benchmarks/sal/vmul.cpp: Likewise.
	* benchmarks/sal/memwrite.cpp: Likewise.
	* benchmarks/sal/fastconv.cpp: Likewise.  Use common fastconv.hpp.

	* src/vsip/core/vmmul.hpp: Split Vmmul_block definition into ...
	* src/vsip/core/expr/vmmul_block.hpp: New file, ... here.

2007-03-13  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/fft_be.cpp: Simplify & cleanup.
	* src/vsip/opt/cbe/ppu/fft.hpp: Fix Evaluator to only provide 1D FFTs.

2007-03-13  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/spu/timer.h: New file.  Timing routines.

2007-03-13  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fft.cpp: Modified to allow non-unit
	  strides between rows/columns for FFTM.  Corrected bug 
	  causing FFTM to apply the scaling factor twice.  Changed
	  FFT to use multi-use work blocks as does FFTM.  This
	  fixed a bug preventing task reuse when an FFT was 
	  performed prior to an FFTM.  Added comment about 2x
	  factor for the input buffer size.
	* tests/fft_be.cpp: Added CBE-specific backend tests.
	  Enhanced the data generation functions to allow
	  column-major FFTMs where the minor dimension has a
	  non-unit stride.

2007-03-07  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/fft_be.cpp: Add missing vsipl library initializer.

2007-03-06  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: New --enable-numa option.
	* GNUmakefile.in: Use it.
	* src/vsip/opt/numa.hpp: New service.
	* src/vsip/opt/numa.cpp: Implement it.
	* src/vsip/GNUmakefile.inc.in: Build it.
	* src/vsip/initfin.cpp: Initialize it.

2007-03-06  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/alloc_block.hpp: Remove access to private class member,
	  fix Wall warning.
	
2007-03-06  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/alloc_block.hpp: New file, handles block creation
	  using either library storage or user-specified storage.
	
2007-03-06  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/fastconv.cpp: Split Cbe cases into separate file.
	* benchmark/cell/fastconv.cpp: New file, Cbe fastconv cases
	* benchmark/fastconv.hpp: New file, common bits for fastconv.
	
2007-03-06  Jules Bergmann  <jules@codesourcery.com>

	* tests/scalar-view.cpp: Rename file to scalar_view.hpp, and split
	  tests into separate files.
	* tests/scalar_view.hpp: New file.
	* tests/scalar_view_add.cpp: New file, subset of scalar-view.cpp.
	* tests/scalar_view_mul.cpp: New file, likewise.
	* tests/scalar_view_sub.cpp: New file, likewise.
	* tests/scalar_view_div.cpp: New file, likewise.
	* tests/corr-2d.cpp: Disable double tests when VSIP_IMPL_TEST_DOUBLE
	  not defined, add level 0 test subset.
	* tests/coverage_binary.cpp: Likewise.
	* tests/matvec-prod.cpp: Likewise.
	* tests/conv-2d.cpp: Add level 0 test subset.
	* tests/correlation.cpp: Likewise.
	* tests/coverage_unary.cpp: Likewise.
	* tests/convolution.cpp: Simplify level 0 test subset.
	* tests/make.standalone: Add smallcheck target.
	
2007-03-06  Jules Bergmann  <jules@codesourcery.com>

	Add CBE split-complex fast convolution kernel.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Add tasks for split vmul
	  and split fastconv.
	* src/vsip/opt/cbe/ppu/bindings.hpp: Limit vmul dispatch to
	  interleaved complex.
	* src/vsip/opt/cbe/ppu/fastconv.hpp (Fastconv_base): Add complex
	  format template parameter.
	* src/vsip/opt/cbe/ppu/fastconv.cpp (Fastconv_base): Add complex
	  format template parameter.  Add split-complex SPE wrapper.
	* src/vsip/opt/cbe/spu/alf_vmul_split_c.c: New file, split-complex
	  vector-multiply.
	* src/vsip/opt/cbe/spu/vmul_split.h: New file, split-complex
	  vector multiply routine.
	* src/vsip/opt/cbe/spu/fft_1d_r2_split.h: New file, split-complex
	  1D FFT, based on libfft interleaved complex FFT.
	* src/vsip/opt/cbe/spu/alf_fconv_split_c.c: New file, split-complex
	  fast convolution.
	* src/vsip/opt/cbe/vmul_params.h (Vmul_split_params): Parameters
	  for split-complex vector-multiply.
	* src/vsip/opt/cbe/common.h (Fastconv_split_params): Parameters for
	  split-complex fast-convolution.

	* src/vsip/dense.hpp (Dense_impl): Make complex format a template
	  parameter.
	  (Dense): Support split/interleaved admit on distributed blocks.
	* src/vsip/core/parallel/distributed_block.hpp: Support split/
	  interleaved admit, releas, find, and rebind.
	
	* benchmarks/loop.hpp: Add missing metric diagnostic output.
	* benchmarks/fastconv.cpp: Add in-place and out-of-place CBE
	  fastconv cases, with control over split/interleaved and
	  huge page memory allocation.  Extend in-place distributed
	  CBE case to use huge pages.  Correct IO bandwidth.
	* benchmarks/bw/cell.cpp: New file, Cell bandwidth benchmark.
	
	* configure.ac (VSIP_IMPL_HAVE_CBE_SDK): Define this instead of
	  enable_cbe_sdk for consistency.
	* GNUmakefile.in (VSIP_IMPL_HAVE_CBE_SDK): Use it.
	* src/vsip/GNUmakefile.inc.in: Likewise.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Build SPE code with -O3.
	* benchmarks/GNUmakefile.inc.in: Build benchmarks in cell/
	  subdirectory.
	
2007-03-05  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fft.cpp: Converted to use multi-use
	  work blocks for FFTM, and to only transfer the twiddle-factors
	  once unless the task size changes.
	* src/vsip/opt/cbe/ppu/fft.hpp: Added compile time checks
	  to restrict the dispatcher to single-precision,
	  complex-complex cases only.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Changed default
	  SPU optimization flags to -O3.
	* src/vsip/opt/cbe/spu/alf_fft_c.c: Multi-use work block
	  and twiddle-factors changes.
	* src/vsip/opt/cbe/common.h: New fields for buffer 
	  addresses and strides.
	* examples/fft.cpp: Modified means of creating reference
	  result to avoid using the discrete transform.

2007-03-02  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fastconv.hpp: Corrected typo.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Eliminated overhead
	  from two function calls (fft_fwd_cvmul and fft_inv) by
	  direct inlining.  This also reduced the number of large 
	  arrays allocated on the stack by a factor of two.

2007-03-02  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fastconv.cpp: Adds an instance_id_ 
	  member variable used for tracking when weights and
	  twiddle factors need to be reloaded in the kernel.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Reloads weights
	  and twiddle factors for each new instance_id_.
	* src/vsip/opt/cbe/common.h: Removed command field, 
	  replaced with instance_id field.

2007-02-28  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Enable dependency tracking for C files.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Fix distributed view
	  assignment.
	* benchmarks/fastconv.cpp: Enable parallel execution for CBE be.

2007-02-27  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add support for --enable-mpi=openmpi.

2007-02-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fastconv.hpp (next_command_): New member
	  variable to avoid reloading twiddles and weights on each op().
	* src/vsip/opt/cbe/ppu/fastconv.cpp (next_command_): Use it.
	
2007-02-27  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/spu/fft_1d_r2.h: Fixed expression
	  that was using a GCC-specific extensions.  Replaced with
	  normal intrinsics.

2007-02-26  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fastconv.cpp: Modified to use
	  new 'command' field in Fastconv parameter block.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Fixed a missing
	  argument in checking the stride.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: Rearranged parts
	  to allow the vector multiply to be merged with the last
	  stage of the forward FFT.  Modified the initialization
	  routine to allow the weights and twiddle factors to
	  be reloaded independently.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Removed
	  dependency on libfft.
	* src/vsip/opt/cbe/spu/fft_1d.h: New file, original
	  header file from the Cell SDK's libfft.
	* src/vsip/opt/cbe/spu/fft_1d_r2.h: New file, modified
	  from original taken from Cell SDK's libfft.
	* src/vsip/opt/cbe/common.h: Added new 'command' field
	  to the Fastconv parameters.

2007-02-25  Jules Bergmann  <jules@codesourcery.com>

	Multi-use workblocks for fast convolution.
	* src/vsip/core/impl_tags.hpp: Rearrange tags to match match order
	  in LibraryTagList.
	* src/vsip/opt/cbe/ppu/fastconv.cpp: Use multi-use workblocks.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c (alf_prepar_input_list,
	  alf_prepare_output_list): New functions to drive DMA from SPE.
	* src/vsip/opt/cbe/common.h (Fastconv_params): Add in and out
	  pointer/stride for SPE-side DMA.
	* src/vsip/opt/cbe/ppu/fastconv.hpp (Fastconv_base): Initialize
	  size_ member variable, make it visible with size() member function.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Fix typo, not using
	  C_SPU_FLAGS.
	* scripts/set-prefix.sh: Fix bug processing pkg:dir options.
	* GNUmakefile.in (c_source): New variable for C source files.
	  Include it into $objects so that 'mostlyclean' will delete
	  them.
	
2007-02-25  Jules Bergmann  <jules@codesourcery.com>

	Fix race conditions and memory leaks in ALF.
	* src/vsip/opt/cbe/alf/include/alf.h (alf_wb_sync_destroy): New
	  function decl.
	* src/vsip/opt/cbe/alf/src/ppu/alf.c (alf_wb_sync_destory): New
	  function defn to cleanup alf_wb_sync_handlt_t resources.
	  Fix race conditions.
	* src/vsip/opt/cbe/alf/src/ppu/alf_wq_ppu.c: Fix memory corruption.

	Support for multi-use workblocks.
	* src/vsip/opt/cbe/ppu/task_manager.hpp (Task_manager::reserve):
	  Add partition_on_spu option.
	  (Task_manager::num_spes): New function, return number of SPEs.
	* src/vsip/opt/cbe/ppu/task_manager.cpp: Initialize num_spes_
	  member variable.
	
	* src/vsip/opt/cbe/ppu/fft.cpp: Update call to Task_manager::reserve.
	* src/vsip/opt/cbe/ppu/fastconv.cpp:L Likewise.
	* src/vsip/opt/cbe/ppu/alf.hpp (create_multi_block): New function,
	  create multi-use workblock. Use alf_wb_sync_destroy.
	  Allow ALF to be initialized for multi-use workblocks.
	* src/vsip/opt/cbe/ppu/bindings.cpp (vmul): Use multi-use
	  workblocks.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c (alf_prepare_input_list,
	  alf_prepare_output_list): New functions for multi-use workblocks.
	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Likewise.
	* src/vsip/opt/cbe/vmul_params.h: New file, parameters for vmul.
	
	Make 'make clean' work for ALF and SPU code.
	* src/vsip/opt/cbe/alf/src/ppu/GNUmakefile.inc.in (ALF_CFLAGS): 
	  Pass CFLAGS through.
	  (c_sources): include alf_src.
	* src/vsip/opt/cbe/alf/src/spu/GNUmakefile.inc.in (mostlyclean):
	  New rule.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Likewise.
	
	* src/vsip/opt/diag/eval.hpp: Pretty-print Cbe_sdk_tag.
	* benchmarks/copy.cpp: Make strings 'const char*'.
	* benchmarks/loop.hpp: Add map for user parameters.
	* benchmarks/main.cpp (-p:): New command line option to set user
	  parameters.
	
2007-02-24  Don McCoy  <don@codesourcery.com>

	* benchmarks/fastconv.cpp: Created Cell option (-20), range cells fixed.
	  Changed to derive from Benchmark_base.
	* examples/fconv.cpp: Added macros to guard against unconditional 
	  inclusion of Cell-specific code.

2007-02-24  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/task_manager.hpp: Added new task definition.
	* src/vsip/opt/cbe/ppu/fastconv.cpp: New file - fast convolution task type.
	* src/vsip/opt/cbe/ppu/fastconv.hpp: Likewise.
	* src/vsip/opt/cbe/spu/alf_fconv_c.c: New file - fast convolution kernel.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Build new kernel.
	* src/vsip/opt/cbe/common.h: Added definitions for fast convolution.
	* src/vsip/GNUmakefile.inc.in: Added bindings for new kernel.
	* examples/fconv.cpp: Example driver program.

2007-02-24  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/initfin.cpp: Pass argv/argc to Task_manager::initialize.
	* src/vsip/core/argv_utils.hpp: New file, contains shift_argv func.
	* src/vsip/core/parallel/services.hpp: Fix header comment.
	* src/vsip/opt/pas/services.hpp (shift_argv): Move defn to
	  argv_utils.hpp.
	* src/vsip/opt/profile.hpp: Make strings 'char const*'.
	* src/vsip/opt/cbe/ppu/task_manager.hpp (initialize): Process
	  argc/argv to determine number of SPEs.
	* src/vsip/opt/cbe/ppu/task_manager.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/alf.hpp: Make number of accelerators
	  a runtime parameter.

2007-02-22  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/cbe/ppu/alf.hpp: Store more data in Task type.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Share tasks if possible.
	* src/vsip/opt/cbe/ppu/task_manager.cpp: Cleanup last task.
	* src/vsip/opt/cbe/ppu/fft.cpp: Adjust.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Adjust.

2007-02-21  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/cbe/alf/*: Upgrade to new snapshot.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Adjust.
	* src/vsip/opt/cbe/ppu/alf.hpp: Adjust.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Adjust.
	* src/vsip/opt/cbe/spu/alf_fft_c.c: Adjust.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c: Adjust.
	* src/vsip/opt/cbe/spu/alf_vmul_s.c: Adjust.
	* src/vsip/opt/cbe/alf/src/spu/GNUmakefile.inc.in: New file.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Use it.
	* src/vsip/GNUmakefile.inc.in: Adjust.
	* configure.ac: Adjust.

2007-02-14  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/vmagsq.cpp: Support diag().  Add scalar vmagsq
	  vmag cases (3-4, 11-14).
	* benchmarks/copy.cpp: Support diag().  Add memcpy case (5).
	* benchmarks/loop.hpp (Benchmark_base): New base class for
	  benchmarks.  Intended to make future upgrades like 'diag'
	  easier.  Add diag mode.  Add ability to progress using an
	  array of point sizes.
	* benchmarks/vmul.cpp: Add double-precision cases.
	* benchmarks/vma.cpp: Support diag().  Add mixed scalar-complex
	  cases.
	* benchmarks/main.cpp (-mfile): New option to read progression
	  values from file.
	  (-diag): New option, sets diag mode.
	  (-geom): New option, sets geometric scaling.
	* benchmarks/vmul.hpp: Support diag().
	* benchmarks/fftm.cpp: Likewise.
	* benchmarks/fft.cpp: Likewise.  Add double-precision cases.
	* benchmarks/vmul_c.cpp: Support diag().
	* benchmarks/mcopy.cpp: Likewise.
	
2007-02-15  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fft.cpp: Fixed memory allocation issue.

2007-02-15  Don McCoy  <don@codesourcery.com>

	* src/vsip/core/fft/util.hpp: Moved test for power of two here.
	* src/vsip/core/fft.hpp: Revised a comment for clarity.
	* src/vsip/opt/ipp/fft.hpp: Moved power of two test to util.hpp.
	* src/vsip/opt/cbe/ppu/fft.cpp: Added Fftm support, refactored
	  some common elements into a new base class.
	* src/vsip/opt/cbe/ppu/fft.hpp: Fftm support.

2007-02-14  Don McCoy  <don@codesourcery.com>
	
	* src/vsip/opt/cbe/ppu/fft.cpp: Removed unimplemented cases.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Adds FFT library
	  on an as-needed basis, rather than for all kernels.

2007-02-12  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fft.cpp: Added handlers for 8K point FFTs.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: Declared FFT SPE image.
	* src/vsip/opt/cbe/ppu/fft.hpp: Added scale parameter for evaluators.
	* src/vsip/opt/cbe/ppu/alf.hpp: Increased stack size, added assert()
	  to check return value for add_* functions.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Added FFT library.
	* src/vsip/opt/cbe/spu/vmul.cpp: Removed, obsolete.
	* src/vsip/opt/cbe/spu/alf_fft_c.c: New file, implements 1-D FFT.
	* src/vsip/opt/cbe/vmul.h: Removed, obsolete.
	* src/vsip/opt/cbe/common.h: New file, definitions common to both
	  SPE and PPE sides.

2007-02-08  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/parallel/block.hpp: Include distributed_block.hpp
	  when PAR_SERVICE == 0.

2007-02-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/view_traits.hpp: Include get_local_view.hpp.
	* src/vsip/core/signal/fir.hpp: Force extdata layout to interleaved
	  complex.
	* src/vsip/core/extdata_dist.hpp (Ext_data_dist): Comment member
	  variables.
	* src/vsip/core/working_view.hpp (Assign_local): Comment
	  specializations.
	* src/vsip/core/parallel/subset_map_decl.hpp (parent_subblock):
	  Fix Wall warnings.
	* src/vsip/core/paralle/block.hpp: New file, include appropriate
	  distributed block.
	* src/vsip/core/parallel/expr.hpp: Include parallel/block.hpp
	  instead of parallel/distributed_block.hpp.
	* src/vsip/opt/parallel/foreach.hpp: Likewise.
	* src/vsip/map.hpp: Likewise.  Fix reference counting leak for
	  Map_data.
	* src/vsip/opt/sal/cholesky.hpp (Chold_impl): Remove
	  Compile_time_assert using Blas_traits.  Not applicable
	  because blas may not be included, and not necessary since
	  Chold dispatch already checks Is_chold_avail.
	* src/vsip/opt/pas/assign_direct.hpp (build_copy_list): Update
	  intersection to handle strides.
	* src/vsip/opt/pas/param.hpp (VSIP_IMPL_PAS_SHARE_DYNAMIC_XFER):
	  Move to ..
	* configure.ac (-enable-pas-share-dynamic-xfer): ... here.
	* src/vsip/opt/pas/services.hpp (Pas_datatype): Additional
	  specializations.
	* src/vsip/opt/pas/assign.hpp: Include initfin.hpp.
	* src/vsip/opt/signal/fir_opt.hpp: Add missing admit/release.
	* tests/iir.cpp: Add VERBOSE output for debugging.
	* tests/threshold.cpp: Disable double precision tests with
	  VSIP_IMPL_TEST_DOUBLE
	* tests/matvec.cpp: Likewise.
	* tests/fir.cpp: Likewise.
	* tests/matvec-dot.cpp: Likewise.
	* tests/parallel/fftm.cpp: Likewise.
	* tests/fft.cpp: Likewise.
	* tests/matvec-prod.cpp: Likewise
	* tests/parallel/subset_map.cpp: Avoid long running tests when
	  TEST_LEVEL <= 1.

	* tests/ref-impl/dense.cpp: Pass argc/argv to vsipl object.
	* tests/ref-impl/admitrelease.cpp: Likewise.
	* tests/ref-impl/vector.cpp: Likewise.
	* tests/ref-impl/matrix.cpp: Likewise.
	* tests/ref-impl/signal-histogram.cpp: Likewise.
	* tests/ref-impl/solvers-qr.cpp: Likewise.
	* tests/ref-impl/signal.cpp: Likewise.
	* tests/ref-impl/random.cpp: Likewise.
	* tests/ref-impl/dim-order.cpp: Likewise.
	* tests/ref-impl/math-scalarview.cpp: Likewise.
	* tests/ref-impl/vector-math.cpp: Likewise.
	* tests/ref-impl/signal-fft.cpp: Likewise.
	* tests/ref-impl/signal-convolution.cpp: Likewise.
	* tests/ref-impl/matrix-math.cpp: Likewise.
	* tests/ref-impl/solvers-covsol.cpp: Likewise.
	* tests/ref-impl/view-math.cpp: Likewise.
	* tests/ref-impl/signal-windows.cpp: Likewise.
	* tests/ref-impl/math-reductions.cpp: Likewise.
	* tests/ref-impl/math-matvec.cpp: Likewise.
	* tests/ref-impl/complex.cpp: Likewise.
	* tests/ref-impl/fft-coverage.cpp: Likewise.
	* tests/ref-impl/solvers-lu.cpp: Likewise.
	* tests/ref-impl/selgen.cpp: Likewise.
	* tests/ref-impl/solvers-chol.cpp: Likewise.
	* tests/ref-impl/vector-const.cpp: Likewise.
	* tests/ref-impl/matrix-const.cpp: Likewise.
	* tests/ref-impl/math.cpp: Likewise.
	* tests/ref-impl/signal-fir.cpp: Likewise.
	* tests/ref-impl/signal-correlation.cpp: Likewise.
	* tests/ref-impl/ortho.cpp: New file.  Tests for orthogonality
	  issues.
	
2007-02-07  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/allocation.hpp: Move non-zero check...
	* src/vsip/core/allocation.cpp: ...to here.

2007-02-06  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/allocation.hpp: Only call free_align on non-zero pointer.

2007-02-05  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/fns_scalar.hpp: On windows isnan appears to be
	spelled _isnan.
	* GNUmakefile.in: Fix typo.

2007-02-01  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/cbe/ppu/fft.hpp: Start of a new backend binding. 
	* src/vsip/opt/cbe/ppu/fft.cpp: Likewise.
	* src/vsip/core/fft.hpp: Use it.
	* src/vsip/opt/cbe/ppu/task_manager.hpp: New file.
	* src/vsip/opt/cbe/ppu/task_manager.cpp: New file.
	* src/vsip/initfin.cpp: Use it.
	* src/vsip/opt/cbe/ppu/bindings.hpp: Likewise.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Likewise.
	* src/vsip/opt/cbe/ppu/alf.hpp: Simplify.
	* src/vsip/opt/cbe/ppu/alf.cpp: Removed.
	* src/vsip/GNUmakefile.inc.in: Build new files.
	* configure.ac: Define new --enable-cbe-sdk-embedded-images option.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Use it.

2007-02-01  Jules Bergmann  <jules@codesourcery.com>
	
	* doc/quickstart/quickstart.xml: Revise section on ref-impl cfg.
	
2007-01-31  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Bump version to 1.3.
	* doc/tutorial/tutorial.xml: Likewise.
	* doc/quickstart/quickstart.xml: Likewise.
	* scripts/release.sh: Likewise.
	
2007-01-31  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/GNUmakefile.inc.in: Don't put non-BSD sources in
	  cxx_sources when building ref-impl.
	* scripts/config: Update ref-impl binary package options.
	* tests/extdata_dist.cpp: Remove unnecessary include and define.
	* configure.ac: Imply --enable-cvsip and --enable-fft=cvsip
	  when --enable-ref-impl given.
	
2007-01-30  Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Update to cover reference
	  implementation.
	* LICENSE.BSD: Add 2007 to copyright years.
	
2007-01-29  Jules Bergmann  <jules@codesourcery.com>

	Add config support for ref-impl and C-VSIP binary packages.
	* scripts/package.py (Configuration): Add tests_ids field.
	* scripts/config: Add test binary packages for reference
	  implementation (TestRefImpl) and C-VSIP backends (TestCvsipBe)
	
	New block trait Is_modifiable_block.
	* src/vsip/core/block_traits.hpp (Is_modifiable_block): New trait,
	  indicates if block is modifiable.
	* src/vsip/dense.hpp (Is_modifiable_block): Specialize.
	* src/vsip/core/fast_block.hpp (Is_modifiable_block): Specialize.
	* src/vsip/core/subblock.hpp (Is_modifiable_block): Specialize.
	* src/vsip/core/block_copy.hpp: Use Is_modifiable_block trait
	  instead of block constness to determine if block is modifiable.

	Ext_data_dist cleanup.
	* src/vsip/core/extdata_dist.hpp: Avoid choosing default value
	  for template parameter AT until block type is known.  Change
	  sync type from constructor/run-time parameter to template/
	  compile-time parameter.  Use Persistent_ext_data for Impl_remap,
	  avoid sharing buffer between Us_block and Ext_data object.
	* src/vsip/core/extdata.hpp (Peristent_ext_data::cost): Define
	  member function.
	* src/vsip/core/cvsip/eval_reductions_idx.hpp: Use new Ext_data_dist
	  interface.
	* src/vsip/core/cvsip/eval_reductions.hpp: Likewise.
	* src/vsip/opt/signal/conv_ext.hpp: Likewise.
	* src/vsip/opt/signal/corr_ext.hpp: Likewise.
	
	* src/vsip/core/cvsip/conv.hpp: Add fixup code for the cases
	  not handled correctly by TVCPP.
	* src/vsip/core/cvsip/view.hpp (View_traits): Add get(), put()
	  methods, used by conv.hpp.
	
	* src/vsip/core/cvsip/lu.hpp: Remove unused variable.
	* src/vsip/core/working_view.hpp (assign_local_if): New function,
	  conditional version of assign_local.
	* src/vsip/opt/pas/assign_eb.hpp: Check return value for
	  pas_pset_get_pnums_list.
	* src/vsip/opt/pas/assign.hpp: Likewise.
	  
	* tests/block_traits.cpp: New file, unit test for Is_modifiable_block
	  unit test.
	* tests/regressions/par_maxval.cpp: New file, regression test
	  for reduction of distributed expression not handled by 
	  Ext_data_dist.
	* tests/regressions/conv_to_subview.cpp: Update error checking
	  to use error_db.
	* tests/fir.cpp: Likewise.
	* tests/extdata_dist.cpp: Update to use new Ext_data_dist interface.
	  Add coverage for expressions.
	* tests/convolution.cpp: Use error_db instead of equal, lower
	  error thresholds for C-VSIP BE.
	* tests/reductions-idx.cpp: Add more coverage for distributed
	  reductions.
	* tests/reductions.cpp: Likewise.
	* tests/ref-impl/fft-coverage.cpp: Fix comment.
	* tests/ref-impl/signal-fir.cpp: Expand catch block to cover
	  constructor not implemented in C-VSIP BE.
	
2007-01-26  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/cbe/alf/src/ppu/GNUmakefile.inc.in: New file.
	* src/vsip/GNUmakefile.inc.in: Use it.
	* GNUmakefile.in: Set up C compilation harness.
	* configure.ac: Do not link to libalf.a.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Don't embed SPE images.
	* src/vsip/opt/cbe/ppu/alf.hpp: Use spe_open_image() et al.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Likewise.
	
2007-01-25  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/parallel.hpp: Guard inclusion of opt/parallel/foreach
	  when building ref-impl.
	* src/vsip_csl/GNUmakefile.inc.in: Guard makefile when building
	  ref-impl.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: Likewise.
	* benchmarks/GNUmakefile.inc.in: Likewise.
	
	* configure.ac (VSIP_CSL_LIB): New AC_SUBST to indicate whether
	  vsip_csl.a is present.
	* vsipl++.pc.in: Use VSIP_CSL_LIB.
	* tests/context.in: Likewise.
	
	* benchmarks/benchmarks.hpp: Don't include opt/parallel/foreach.
	  directly.
	
2007-01-24  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/alf.hpp: Made correction for data buffer size
	  when dealing with complex data.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Likewise.

2007-01-24  Don McCoy  <don@codesourcery.com>
	
	* src/vsip/opt/cbe/spu/alf_vmul_s.c: renamed to follow s/d/c/z
	  BLAS convention (was src/vsip/opt/cbe/spu/alf_vmul_f.c).

2007-01-24  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/alf.hpp: Added size adjustment to allow
	  complex data to be passed as floats to ALF.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Added image for complex
	  float vector-multiply.  Modified the code that subdivides the
	  memory into workable chunks to walk forward through the data.
	* src/vsip/opt/cbe/spu/alf_vmul_c.c: New file.  Complex vmul.
	* src/vsip/opt/cbe/spu/alf_vmul_f.c: Vectorized regular vmul.

2007-01-24  Jules Bergmann  <jules@codesourcery.com>

	Fix bug when taking subset view of a subset view.
	* src/vsip/core/view_traits.hpp: Move forward declarations of views
	  to ...
	* src/vsip/core/view_fwd.hpp: ... here (New file).
	* src/vsip/core/subblock.hpp (Subset_block_map): Pass map subset
	  logic down to Map_subdomain for all map types.
	* src/vsip/core/parallel/subset_map.hpp: Move class decl into ...
	* src/vsip/core/parallel/subset_map_decl.hpp: ... here (New file) 
	  (Map_subdomain): Provide general defn, and specialization for
	  Subset_map.
	* tests/regressions/subset.cpp: New file, regression test for
	  subset of a subset.

	* src/vsip/opt/ipp/fir.hpp: Fix bug when mirroring kernels
	  with symmetry.
	
2007-01-24  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/vsip.hpp: New 'include all' header.
	* doc/GNUmakefile.inc.in: Use it to speed up documentation extraction.
	* src/vsip/opt/fftw3/fft.cpp: Correct usage of VSIP_IMPL_PROVIDE_FFT_FLOAT et al.

2007-01-23  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Move src/vsip/opt/cbe/spu/GNUmakefile.inc inclusion...
	* src/vsip/GNUmakefile.inc.in: ...to here.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Don't build a separate archive.

	* configure.ac: Define cbe_sdk_prefix.
	* GNUmakefile.in: Define CBE_SDK_PREFIX.
	* src/vsip/opt/cbe/ppu/alf.hpp: Add ALF bindings.
	* src/vsip/opt/cbe/ppu/alf.cpp: Likewise.
	* src/vsip/initfin.cpp: Initialize them.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Use them.
	* src/vsip/GNUmakefile.inc.in: Build them.
	* src/vsip/opt/cbe/ppu/vmul.hpp: Removed.
	* src/vsip/opt/cbe/ppu/vmul.cpp: Removed.
	* src/vsip/opt/cbe/spu/alf_vmul_f.c: New vmul_f kernel.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: Build it.

2007-01-10  Don McCoy  <don@codesourcery.com>

	* LICENSE.BSD: New file - BSD License notice.

2007-01-05  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/fftw3/fft.cpp: Use VSIP_IMPL_PROVIDE_FFT_* instead of
	VSIP_IMPL_FFT_USE_*.
	* src/vsip/core/type_list.hpp: Grow list to length=12.

2007-01-04  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/cbe/ppu/vmul.hpp: Wrap libspe.h in extern "C".
	* src/vsip/opt/cbe/ppu/vmul.cpp: Likewise.

2007-01-04  Don McCoy  <don@codesourcery.com>

	* src/vsip/opt/cbe/ppu/vmul.cpp: New file - driver for SPE-based 
	  vector multiply.
	* src/vsip/opt/cbe/ppu/vmul.hpp: New file.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Changed to call SPE-based vmul.
	* src/vsip/opt/cbe/spu/vmul.cpp: Static (resident) elementwise
	  vector multiply function.
	* src/vsip/opt/cbe/vmul.h: Data structures shared between the SPU
	  and PPU code.
	* src/vsip/GNUmakefile.inc.in: Added new source file.

2007-01-03  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Fix handling of --with-cbe-sdk-prefix.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Wrap libspe.h in extern "C".

2006-12-30  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add --enable-cbe-sdk option.
	* src/vsip/opt/cbe/spu/GNUmakefile.inc.in: New makefile
	to build Cell SPE kernels / images.
	* src/vsip/opt/cbe/spu/vmul.cpp: First (dummy) kernel.
	* lib/GNUmakefile.inc.in: Removed.
	* GNUmakefile.in: Adjust accordingly.
	* src/vsip/core/impl_tags.hpp: Define Cbe_sdk_tag.
	* src/vsip/opt/expr/serial_dispatch_fwd.hpp: Use it.
	* src/vsip/opt/expr/serial_dispatch.hpp: Use it.
	* src/vsip/opt/cbe/ppu/bindings.hpp: New backend prototypes.
	* src/vsip/opt/cbe/ppu/bindings.cpp: Likewise.
	* src/vsip/GNUmakefile.inc.in: Compile them.
	* src/vsip/opt/lapack/bindings.cpp: Fix include.
	
2006-12-23  Don McCoy  <don@codesourcery.com>

	* tests/us-block.cpp: Corrected header file location.
	* tests/view_cast.cpp: Likewise.

2006-12-23  Don McCoy  <don@codesourcery.com>

	Updated copyright notices in the following files:
	* src/vsip/core/reductions/types.hpp
	* src/vsip/core/*
	* src/vsip/core/parallel/*
	* src/vsip/*
	* src/vsip/opt/fft/workspace.hpp
	* src/vsip/opt/sal/*
	* src/vsip/opt/*
	* src/vsip/opt/pas/*
	* src/vsip/opt/ipp/*
	* src/vsip/opt/fftw3/*
	* src/vsip/opt/lapack/*
	* src/vsip/opt/simd/*
	* src/vsip/opt/parallel/*
	* src/vsip/opt/diag/eval.hpp
	* src/vsip/opt/signal/*
	* src/vsip/opt/expr/*
	* src/vsip_csl/*
	* tests/*
	* tests/fft_ext/fft_ext.cpp
	* tests/regressions/*
	* tests/vsip_csl/load_view.cpp
	* tests/parallel/*
	* scripting/*
	* apps/ssar/*
	* apps/sarsim/*
	* benchmarks/*
	* benchmarks/mpi/*
	* benchmarks/ipp/*
	* benchmarks/lapack/qrd.cpp
	* benchmarks/sal/*
	* benchmarks/hpec_kernel/*

2006-12-23  Don McCoy  <don@codesourcery.com>

	* LICENSE: new file describing licensing terms.

2006-12-22  Stefan Seefeld  <stefan@codesourcery.com>

	C-VSIPL backend cleanup:
	* src/vsip/core/cvsip/cvsip.hpp: Replaced by...
	* src/vsip/core/cvsip/solver.hpp: ...this.
	* src/vsip/core/cvsip/common.hpp: Added more conversions.
	* src/vsip/core/cvsip/solver_cholesky.hpp: Moved and tidied into...
	* src/vsip/core/cvsip/cholesky.hpp: ...this.
	* src/vsip/core/cvsip/cvsip_chol.hpp: Removed.
	* src/vsip/core/solver/cholesky.hpp: Adjusted accordingly.
	* src/vsip/core/cvsip/solver_lu.hpp: Moved and tidied into...
	* src/vsip/core/cvsip/lu.hpp: ...this.
	* src/vsip/core/cvsip/cvsip_lu.hpp: Removed.
	* src/vsip/core/solver/lu.hpp: Adjusted accordingly.
	* src/vsip/core/cvsip/solver_qr.hpp: Moved and tidied into...
	* src/vsip/core/cvsip/qr.hpp: ...this.
	* src/vsip/core/cvsip/cvsip_qr.hpp: Removed.
	* src/vsip/core/solver/qr: Adjusted accordingly.
	
2006-12-22  Don McCoy  <don@codesourcery.com>
	
	* LICENSE: renamed to LICENSE.GPL
	
2006-12-21  Assem Salama <assem@codesourcery.com>
	
	* ChangeLog: Fixed typos in previous commit.
	* src/vsip/core/cvsip/cvsip_matrix.hpp: Removed file.

2006-12-21  Stefan Seefeld  <stefan@codesourcery.com>

	* synopsis.py.in: Use synopsis 0.9 features.

	* configure.ac: substitute VSIP_IMPL_REF_IMPL.
	* GNUmakefile.in: Use it to exclude vsip/opt/*.hpp headers.
	* src/vsip/GNUmakefile.in: Likewise.
	* src/vsip_csl/GNUmakefile.in: Likewise.
	
2006-12-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/working_view.hpp (clone_view): Add specializations
	  to set map of new view.

2006-12-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/view_cast.hpp: Move to ...
	* src/vsip/core/view_cast.hpp: ... here.
	* src/vsip/opt/sal/is_op_supported.hpp: Update is_op_supported
	  include.
	* src/vsip/opt/sal/eval_elementwise.hpp: Likewise.
	* src/vsip_csl/load_view.hpp: Likewise.
	* src/vsip_csl/save_view.hpp: Likewise.
	
	* src/vsip/opt/parallel/proxy_local_block.hpp: Move to ...
	* src/vsip/core/parallel/proxy_local_block.hpp: ... here.
	* src/vsip/core/parallel/distributed_block.hpp: Update
	  proxy_local_block include.
	* src/vsip/opt/pas/block.hpp: Likewise.
	
	* src/vsip/opt/us_block.hpp: Move to ...
	* src/vsip/core/us_block.hpp: core.
	* src/vsip/core/extdata_dist.hpp: Update us_block include.
	
2006-12-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/*: Add check to make sure optimized headers aren't
	  accidentally used in ref-impl.
	
2006-12-20  Jules Bergmann  <jules@codesourcery.com>

	Move Ext_data_dist into core.
	* src/vsip/opt/extdata_local.hpp: Rename to ...
	* src/vsip/core/extdata_dist.hpp: ... this.  Rename Ext_data_local
	  to Ext_data_dist.
	* src/vsip/core/cvsip/eval_reductions_idx.hpp: Use Ext_data_dist.
	* src/vsip/core/cvsip/eval_reductions.hpp: Likewise.
	* src/vsip/opt/sal/conv.hpp: Likewise.
	* src/vsip/opt/signal/conv_ext.hpp: Likewise.
	* src/vsip/opt/signal/corr_ext.hpp: Likewise.
	* tests/extdata-local.cpp: Rename to ...
	* tests/extdata_dist.cpp: ... this, and use Ext_data_local
	
2006-12-20  Jules Bergmann  <jules@codesourcery.com>
	
	* src/vsip/core/block_traits.hpp (Proper_type_of): Determine if
	  block type should be const.  Useful for cases were const is
	  stripped off expression blocks.
	* src/vsip/core/cvsip/eval_reductions_idx.hpp: Work around for
	  loss of const on expression block type.
	* src/vsip/core/cvsip/eval_reductions.hpp: Likewise.
	* tests/reductions.cpp: Extend to cover reduction of expression.
	* src/vsip/opt/extdata_local.hpp: Extend to work with const blocks.
	  Add ability to allocate buffer for copy.
	* src/vsip/core/expr/ternary_block.hpp (Distributed_local_block):
	  Define proxy_type.
	
	* src/vsip/core/vmmul.hpp (Is_par_same_map): Recognize Replicated_map.
	* tests/vmmul.cpp: Extend to cover replicated_map.
	
	* scripts/package.py: Fix path to acconfig.hpp.
	* src/vsip/GNUmakefile.inc.in: Install opt/diag and opt/fft
	  directories.
	* GNUmakefile.in: Likewise.  Add FASTMAKE option to avoid
	  regenerating dependencies.
	* examples/GNUmakefile.inc.in: Move install of examples into
	  $pkgdatadir/examples.
	* examples/makefile.standalone.in: Add rules for fft and png
	  examples
	
2006-12-19  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/profile.hpp (Power_tb_time): New timer policy
	  to use PowerPC timebase timer.
	* src/vsip/opt/profile.cpp (read_timebase): New function, read
	  timebase from cpuinfo.  Use to determine Power_tb_time
	  clocks_per_sec.
	* configure.ac (--enable-timer=power_tb): Allow selection of
	  PowerPC timebase timer.
	
2006-12-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip_csl/load_view.hpp (load_view_as): Extend to work
	  with distributed views.

2006-12-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/domain_utils.hpp (intersect): Extend to handle
	  non-unit-stride in 1 arg.
	  (apply_intr): New function to apply an intersection to another dom.
	  (subset_from_intr): New function to convert an intersection into
	  a subset.
	  (domain): New overloads to create a domain from a length.
	* src/vsip/core/subblock.hpp (Subset_block_map): Fix usage of 'type'
	  to work when subset map type differs from parent map type.
	  (Subset_block): Add asserts on get().
	  (get_local_view): Extend to work with Subset_map.
	* src/vsip/core/parallel/subset_map.hpp: New file, map for
	  distributed subsets.
	* src/vsip/core/parallel/expr.hpp: Don't use assumption that
	  local subblock is element conformant with union of patches.
	* src/vsip/core/parallel/assign_block_vector.hpp
	  (VSIP_IMPL_ABV_VERBOSE): Rename macro.
	* src/vsip/core/parallel/assign_chain.hpp: Use apply_intr to
	  determine send and receive domains.
	* src/vsip/core/map_fwd.hpp (Subset_map): Forward decl.
	* src/vsip/map.hpp: Include subset_map. 
	  (impl_local_from_global_domain): Update to work with subsets
	  supported by Subset_map.
	* src/vsip_csl/matlab_utils.hpp: Qualify names used from vsip
	  namespace.
	* tests/fftshift.cpp: New file, tests for fftshift function,
	  including distributed cases.
	* tests/domain_utils.cpp: New file, unit tests for intersect,
	  apply_intr, and subset_from_intr functions.
	* tests/parallel/subset_map.cpp: New file, coverge tests for
	  distributed subsets.
	
2006-12-11  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/vector.hpp: Assert index is valid for get/put.
	* src/vsip/tensor.hpp: Likewise.
	* src/vsip/matrix.hpp: Likewise.  Also check index is valid for
	  row/col subviews.
	
2006-12-11  Jules Bergmann  <jules@codesourcery.com>

	C-VSIP reduction BE.
	* src/vsip/core/cvsip/eval_reductions.hpp: New file.  Evaluators for
	  performing reductions with C-VSIP.
	* src/vsip/core/cvsip/eval_reductions_idx.hpp: New file.  Evaluators
	  for performing index returning reductions with C-VSIP.
	* src/vsip/core/reductions/reductions.hpp: Use C-VSIP reduction BE.
	* src/vsip/core/reductions/reductions_idx.hpp: Use C-VSIP reduction
	  BE.  Extend maxmgval and minmgval to work with non-complex
	  views.
	* src/vsip/core/cvsip/block.hpp (Block_traits): Add specializations
	  for bool and int.
	* src/vsip/core/cvsip/view.hpp (View_traits): Add specializations
	  for <1,bool>, <1, int>, <2,bool>, <2, int>.
	  (View): Add specializations for <1,bool> and <2,bool> that
	  emulate admit/release by copy.
	  (View_from_ext): New class, constructs View directly from
	  Ext_data object.
	* src/vsip/core/cvsip/convert_value.hpp: New file, conversions
	  between C++ and C-VSIP types.
	* src/vsip/opt/general_dispatch.hpp (operation tags, wrapper classes,
	  Evaluator): Move decls that need to be visible in core to ...
	* src/vsip/core/general_evaluator.hpp: New file, ... here.
	* src/vsip/opt/extdata_local.hpp: Add support for auto-allocation
	  of temporary storage.
	
2006-12-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/fft/workspace.hpp: Move to ...
	* src/vsip/opt/fft/workspace.hpp: ... here.
	* src/vsip/opt/block_copy.hpp: Move to ...
	* src/vsip/core/block_copy.hpp: ... here.
	* src/vsip/core/extdata.hpp: Adjust includes for moved files.
	* src/vsip/core/fft.hpp: Likewise.
	* src/vsip/opt/extdata.hpp: Likewise.
	* src/vsip/opt/extdata_local.hpp: Likewise.
	* src/vsip/matrix.hpp: Include block_fill instead of block_copy.
	
2006-12-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/cvsip/solver_lu.hpp (Is_lud_impl_avail): Specialize
	  for types supported by CVSIP BE.
	* src/vsip/core/cvsip/solver_cholesky.hpp (Is_chold_immpl_avail):
	  Specialize for types supported by CVSIP BE.
	* src/vsip/core/cvsip/solver_qr.hpp (Is_qrd_immpl_avail):
	  Specialize for types supported by CVSIP BE.
	  Fix member initializer list order to match class decl.
	* src/vsip/core/cvsip/cvsip.hpp: Revert back to VSIP_IMPL_CVSIP_HAVE
	  macros.
	
	* src/vsip/core/coverage.hpp (VSIP_IMPL_COVER_TAG): New macro for
	  coverage of ImplTags.
	* src/vsip/core/solver/lu.hpp: Use VSIP_IMPL_COVER_TAG.
	* src/vsip/core/solver/cholesky.hpp: Likewise.
	* src/vsip/core/solver/qr.hpp: Likewise.
	
	* src/vsip/core/static_assert.hpp (Compile_time_assert_msg):
	  Variant of Compile_time_assert that takes an error "message" in
	  the form of a type.
	* src/vsip/core/cvsip/conv.hpp: Use impl_tags.hpp.  Add compile-time
	  checking for types not supported by BE.
	
	* src/vsip/core/impl_tags.hpp: New file, common decls for
	  implementation tags.
	* src/vsip/core/cvsip/corr.hpp: Use impl_tags.hpp.
	* src/vsip/core/solver/common.hpp: Likewise.
	* src/vsip/opt/general_dispatch.hpp: Likewise.
	* src/vsip/opt/expr/serial_evaluator.hpp: Likewise.
	  Change if logic so function always return.
	
2006-12-06  Jules Bergmann  <jules@codesourcery.com>

	Reorganize extdata for ref-impl:
	* src/vsip/core/extdata.hpp: New file, basic data access goes in
	  core, plus high-level wrappers.
	* src/vsip/opt/extdata.hpp: flexible data access stays in opt.
	* src/vsip/core/extdata_common.hpp: New file, commont bits.

	Use Ext_data instead of Rt_ext_data in ref-impl:
	* src/vsip/core/fft/ct_workspace.cpp: New workspace impl that
	  uses Ext_data instead of Rt_ext_data.
	* src/vsip/core/fft.hpp: Use Ct_workspace for ref-impl.
	* src/vsip/core/cvsip/fft.cpp: Handle non-unit strides.
	  Rename VSIP_IMPL_CVSIP_HAS_{FLOAT,DOUBLE} to _HAVE_.

	Hardwire solver dispatch for ref-impl:
	* src/vsip/core/solver/svd.hpp: Hardware dispatch for ref-impl.
	* src/vsip/core/solver/cholesky.hpp: Likewise.
	* src/vsip/core/solver/qr.hpp: Likewise.
	* src/vsip/core/solver/common.hpp: Fix dispatch to work with empty
	  list.
	
	* src/vsip/core/vmmul.hpp: Disable vmmul evaluator in ref-impl.

	Cleanup includes.
	* src/vsip/dense.hpp: Include core/extdata instead of opt/extdata.
	* src/vsip/core/signal/fir.hpp: Likewise.
	* src/vsip/core/fast_block.hpp: Likewise.
	* src/vsip/opt/sal/eval_threshold.hpp: Likewise.
	* src/vsip/opt/sal/eval_vcmp.hpp: Likewise.
	* src/vsip/opt/sal/eval_util.hpp: Likewise.
	* src/vsip/opt/sal/eval_elementwise.hpp: Likewise.
	* src/vsip/opt/rt_extdata.hpp:: Likewise.
	* src/vsip/opt/us_block.hpp: Likewise.
	* src/vsip/opt/ipp/bindings.hpp: Likewise.
	* src/vsip/opt/extdata_local.hpp: Likewise.
	* src/vsip/opt/simd/expr_evaluator.hpp: Likewise.
	* src/vsip/opt/simd/eval_generic.hpp: Likewise.
	* src/vsip/opt/expr/serial_evaluator.hpp: Likewise.
	* src/vsip/opt/expr/eval_dense.hpp: Likewise.
	* src/vsip_csl/matlab_bin_formatter.hpp: Likewise.
	* src/vsip_csl/plainblock.hpp: Likewise.
	
	* src/vsip/opt/block_copy.hpp: Split Block_fill into ...
	* src/vsip/core/block_fill.hpp: ... here.
	* src/vsip/vector.hpp: Include new Block_fill header.
	
	* configure.ac (VSIP_IMPL_PROVIDE_FFT_*): New macros to hint
	  at what FFT types are supported.
	  Rename VSIP_IMPL_CVSIP_HAS_{FLOAT,DOUBLE} to _HAVE_.
	* tests/fftm.cpp: Add verbose macro.  Pay attention to
	  VSIP_IMPL_PROVIDE_FFT_{*}
	* tests/fft.cpp: Pay attention to VSIP_IMPL_PROVIDE_FFT_{*}
	* src/vsip/core/cvsip/block.hpp: Rename
	  VSIP_IMPL_CVSIP_HAS_{FLOAT,DOUBLE} to _HAVE_.
	* src/vsip/core/cvsip/view.hpp: Likewise.
	* src/vsip/core/cvsip/fft.hpp: Likewise.
	* src/vsip/core/cvsip/matvec.hpp: Likewise.
	
	* tests/random.cpp: Move explicit cvsip bits into namespace
	  to avoid conflict with real cvsip.
	
	* src/vsip/core/mpi/services.hpp (Mpi_datatype): Add specializations
	  for {signed,unsigned} char.
	
	* src/vsip/core/signal/fir_backend.hpp: Fix Wall warning, not
	  initializing base class in copy constructor.
	* src/vsip/opt/dispatch.hpp: Fix Wall warning.
	
2006-12-05  Assem Salama <assem@codesourcery.com>
	
	* src/vsip/core/cvsip/solver_lu.hpp: LU solver using cvsip.
	* src/vsip/core/cvsip/solver_cholesky.hpp: New file. Cholesky solver
	  using cvsip.
	* src/vsip/core/cvsip/solver_qr.hpp: QR solver using cvsip. Note that
	  this doesn't pass the tests just yet. Problem with free.
	* src/vsip/core/cvsip/cvsip.hpp: Added new bindings for LU, Cholesky,
	  and QR solvers.
	* src/vsip/core/cvsip/cvsip_lu.hpp: cvsip wrapper class for LU solver.
	* src/vsip/core/cvsip/cvsip_qr.hpp: cvsip wrapper class for QR solver.
	* src/vsip/core/cvsip/cvsip_chol.hpp: cvsip wrapper class for 
	  Cholesky solver.
	* src/vsip/core/solver/qr.hpp: Added cvsip backend to available tags.
	* src/vsip/core/solver/common.hpp: Added a type_list.hpp include.
	* src/vsip/core/solver/cholesky.hpp: Added a cvsip backend to
	  available tags.

2006-12-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/parallel/expr.hpp: Add missing size(dim, d)
	  accessor.
	
2006-12-05  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Create benchmarks subdirs.
	* src/vsip/GNUmakefile.inc.in: Create cvsip/ subdirectory during install.
	* tests/dispatch.cpp: Fix tests/dispatch.cpp.
	* benchmarks/*: Move special benchmarks into subdirectories for easier
	handling. Adjust build harness(es) accordingly.
	
2006-12-05  Jules Bergmann  <jules@codesourcery.com>

	Fix issue #125.
	* src/vsip/core/expr/binary_block.hpp: Add asserts at block
	  create that lhs and rhs are same size.
	* src/vsip/core/metaprogramming.hpp (Non_const_of): New trait
	  to strip const qualifier from type.
	* src/vsip/core/fft.hpp: Check input/output view sizes.
	* src/vsip/opt/extdata.hpp: Use Block_copy_{to_ptr,from_ptr}.
	  Fix Ext_data to work const blocks (such as expression blocks).
	* src/vsip/opt/profile.cpp: Fix Wall warning.
	* src/vsip/opt/rt_extdata.hpp: Use Rt_block_copy_{to_ptr,from_ptr}.
	  Add Copy_access_tag specialization for Rt_low_level_data_access.
	  Fix Rt_ext_data to work const blocks (such as expression blocks).
	* src/vsip/opt/block_copy.hpp: Split Block_copy into
	  Block_copy_{to_ptr,from_ptr}.   Ditto for Rt_block_copy.
	* tests/regressions/fft_expr_arg.cpp: New file, regression test
	  for issue 125, passing expression to Fft.
	
	* src/vsip/opt/diag/eval.hpp: Update diagnostics.
	
2006-12-05  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/setup_assign.hpp: Fix missing profile qualification
	and simplify code.

2006-11-29  Don McCoy  <don@codesourcery.com>

	* apps/ssar/diffview.cpp: Remove stdlib include.
	* apps/ssar/GNUmakefile: Use immediate assignment.

2006-11-29  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/profile.hpp: Include opt_info.hpp.
	* src/vsip/opt/profile.cpp: Use std::string instead of char const *.
	* src/vsip/opt/profile.hpp: Likewise.
	* src/vsip/opt/ops_info.hpp: Move to...
	* src/vsip/core/ops_info.hpp: ...here.
	* src/vsip/initfin.cpp: Don't handle profile options for ref-impl.
	* src/vsip/core/fft/util.hpp: Remove redundant headers.
	* src/vsip/core/signal/fir.hpp: Likewise.
	* src/vsip/core/signal/conv.hpp: Likewise.
	* src/vsip/core/matvec.hpp: Likewise.
	* src/vsip/core/cvsip/conv.hpp: Likewise.
	* src/vsip/core/cvsip/corr.hpp: Likewise.
	* src/vsip/core/mpi/services.hpp: Likewise.
	* src/vsip/core/setup_assign.hpp: Likewise.
	* src/vsip/opt/pas/assign.hpp: Likewise.
	* src/vsip/opt/ipp/conv.hpp: Likewise.
	* src/vsip/opt/expr/serial_dispatch.hpp: Likewise.
	* benchmarks/benchmarks.hpp: Likewise.
	* examples/fft.cpp: Likewise.
	* src/vsip/core/cvsip/matvec.hpp: Add missing header.
	* src/vsip/core/cvsip/fir.hpp: Conditionalize more code.
	* tests/fft.cpp: Hide and qualify 'cout' & co.
	
2006-11-29  Don McCoy  <don@codesourcery.com>

	* GNUmakefile.in: Installs profile formatting tool.
	* apps/ssar/GNUmakefile: Added mechanism to control
	  floating-point precision.  Added profiling target.
	  Fixed to correctly handle prefix.
	* apps/ssar/kernel1.hpp: Moved filenames to ssar.cpp.
	  Updated what views are saved for debug purposes.
	* apps/ssar/make_set1_images.sh: Fixed to account
	  for debug views that are no longer saved.
	* apps/ssar/ssar.cpp: Added filenames and precision.
	* apps/ssar/set1/ref_image.view: Renamed as 
	  ref_image_dp.view.
	* apps/ssar/set1/ref_image_sp.view: New file.  Used
	  for comparison when single-precision is selected.
	* apps/ssar/README: New file.  Describes benchmark and 
	  how to run it.

2006-11-27  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/profile.hpp: Define 'Feature' enumeration.
	* src/vsip/opt/profile.cpp: Use portable std C++ as much as possible.
	* src/vsip/core/profile.hpp: Provide profile wrapper handling the
	conditional logic to work with ref-impl.
	* src/vsip/core/fft.hpp: Use it.
	* src/vsip/core/signal/corr.hpp: Likewise.
	* src/vsip/opt/signal/corr_ext.hpp: Likewise.
	* src/vsip/opt/signal/corr_opt.hpp: Likewise.
	* src/vsip/core/signal/conv.hpp: Likewise.
	* src/vsip/opt/sal/conv.hpp: Likewise.
	* src/vsip/opt/ipp/conv.hpp: Likewise.
	* src/vsip/opt/signal/conv_ext.hpp: Likewise.
	* src/vsip/core/signal/fir.hpp: Likewise.
	* src/vsip/opt/ipp/fir.hpp: Likewise.
	* src/vsip/opt/signal/fir_opt.hpp: Likewise.
	* src/vsip/core/signal/iir.hpp: Likewise.
	* src/vsip/core/matvec.hpp: Likewise.
	* src/vsip/core/setup_assign.hpp: Likewise.
	* src/vsip/core/parallel/assign_block_vector.hpp: Likewise.
	* src/vsip/core/parallel/assign_chain.hpp: Likewise.
	* src/vsip/opt/pas/assign_eb.hpp: Likewise.
	* src/vsip/opt/pas/assign_direct.hpp: Likewise.
	* src/vsip/opt/pas/assign.hpp: Likewise.
	* src/vsip/opt/expr/serial_dispatch.hpp: Likewise.
	* apps/ssar/kernel1.hpp: Likewise.
	* apps/sarsim/sarsim.hpp: Likewise.
	* doc/tutorial/src/profile_example.cpp: Likewise.
	* examples/fft.cpp: Tell the user what the numbers on stdout mean.
	* src/vsip/core/signal/fir_backend.hpp: Add helper function to
	compute order from kernel size and symmetry.
	* src/vsip/core/cvsip/fir.hpp: Pass kernel size, not order argument.
	* src/vsip/core/cvsip/conv.hpp: Remove unused macro.
	* src/vsip/core/cvsip/corr.hpp: Likewise.

2006-11-26  Don McCoy  <don@codesourcery.com>

	* apps/ssar/kernel1.hpp: Made some data members in constructors local as
          they did not need to be retained.  Some minor renaming and comment-
          fixing for consistency.  Fixed the two asserts in interpolate to
          check for the correct size.
	* apps/ssar/ssar.cpp: Added display of setup time, plus max, min and
          std-dev for the mean compute time.

2006-11-22  Don McCoy  <don@codesourcery.com>

	* apps/ssar/kernel1.hpp: Changed interpolation loop to process along
	  columns.  Adjusted surrounding code to match.
	* apps/ssar/ssar.cpp: Default to single-precision floating point.

2006-11-22  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/matvec.hpp: Fix some embarrassing typos.
	* src/vsip/core/signal/fir.hpp: Fix some embarrassing typos.

2006-11-19  Don McCoy  <don@codesourcery.com>

	* apps/ssar/kernel1.hpp: Removed some temporaries.  Minor refactoring.
	* apps/ssar/ssar.cpp: Made a typedef for Kernel1 base processing type.

2006-11-16  Jules Bergmann  <jules@codesourcery.com>

	* apps/ssar/ssar.cpp: Add -loop option.
	* apps/ssar/kernel1.hpp: Perform digital_spotlighting processing
	  by row/column.  Use explicit corner-turn during inverse 2D FFT.
	
2006-11-15  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/ipp/fir.hpp: Define new IPP Fir backend.
	* src/vsip/opt/ipp/fir.cpp: Implement it.
	* src/vsip/GNUmakefile.inc.in: Compile it.
	* src/vsip/core/signal/fir.hpp: Use it.
	* src/vsip/opt/ipp/bindings.cpp: Remove obsolete code.

2006-11-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/fft.hpp (base_interface): Fix ops count for Fftms.
	  Pass is_fftm as parameter to constructor.
	* src/vsip/opt/ops_info.hpp: Pass is_fftm as parameter.
	
2006-11-14  Jules Bergmann  <jules@codesourcery.com>

	* scripts/fmt-profile.pl: Add new options to set output file,
	  sum nested operations, and show extra time.
	* src/vsip/core/fft.hpp: Pass axis A to fft::Description.
	* src/vsip/opt/ops_info.hpp: Use axis A to determine if Fftm is by
	  row or by col.
	* src/vsip/opt/expr/serial_evaluator.hpp: Distinguish between copy
	  and transpose in Expr_trans.
	
2006-11-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/ipp/bindings.hpp: Add dispatch for mag.
	* src/vsip/opt/ipp/bindings.cpp: Add bindings for mag and magsq
	  (magsq is real only).
	
2006-11-14  Don McCoy  <don@codesourcery.com>

	* apps/ssar/kernel1.hpp: Speedups - Changed to return FFT results by 
	  reference instead of by value (eqs. 59, 63, 66, 69 and 94).  Eliminated 
	  two temporary variables (eqs. 66 and 68).  Used column-major format for 
	  the intermediate and result (eq. 62), which involves a column-vector
  	  multiply and an FFTM by columns.  Computed scale prior to the zero-
	  padding operation (eq. 65) to allow it to dispatch to an SIMD routine.

2006-11-13  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/dispatch.hpp: New dispatcher framework.
	* tests/dispatch.cpp: Test it.
	* src/vsip/core/allocation.hpp: Give align_array auto_ptr copy-semantics.
	* src/vsip/core/cvsip/common.hpp: Add more support functions.
	* src/vsip/core/cvsip/view.hpp: Add 'size' accessors to views.
	* src/vsip/core/refcount.hpp: Check for identity in assignment.
	* src/vsip/core/signal/fir.hpp: New Fir<> frontend.
	* src/vsip/core/signal/fir_backend.hpp: New Fir backend interface.
	* src/vsip/core/cvsip/fir.hpp: New Fir backend implementation.
	* src/vsip/opt/signal/fir_opt.hpp: New Fir backend implementation.
	* tests/ref-impl/signal-fir.cpp: Be prepared for failing assignment.

2006-11-13  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/diag/eval.hpp: New file, diagnostics for
	  serial expression evaluation.
	* tests/diag_eval.cpp: New file, uni tests for above diags.
	
2006-11-12  Don McCoy  <don@codesourcery.com>

	* apps/ssar/kernel1.hpp: Changed the interpolation loop to
	  use pre-computed values where possible.

2006-11-08  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/cvsip/conv.hpp: Fix declaration of Cvsip_tag.
	* src/vsip/core/signal/conv.hpp: Likewise.
	* src/vsip/core/cvsip/corr.hpp: New backend.
	* src/vsip/core/signal/corr.hpp: Use it.
	* tests/correlation.cpp: Add backend-specific tests for C-VSIPL.
	* src/vsip/core/cvsip/common.hpp: Add bias translation.

2006-11-08  Jules Bergmann  <jules@codesourcery.com>

	Share PAS dynamic_xfer object for assignments.  Fix bug where not
	all psets were closed.
	* src/vsip/initfin.hpp (vsipl): Add accessor function for par_service.
	* src/vsip/opt/pas/block.hpp: Use VSIP_IMPL_CHECK_RC to check
	  PAS return codes instead of assert.
	* src/vsip/opt/pas/assign_direct.hpp: Likewise.
	* src/vsip/opt/pas/assign_eb.hpp: Likewise.  Add missing close
	  for all_pset.
	* src/vsip/opt/pas/assign.hpp: Likewise.  Use shared dynamic_xfer.
	* src/vsip/opt/pas/param.hpp: Add _PAS_SHARE_DYNAMIC_XFER
	  to control sharing of dynamic_xfer for PAS.
	* src/vsip/opt/pas/services.hpp: Use VSIP_IMPL_CHECK_RC.  Create
	  and destroy shared dynamic_xfer.
	* src/vsip/map.hpp: Check if map is applied before returning
	  applied pset.
	
	Support MCOE TMR timer.
	* configure.ac (--enable-timer): Add option mcoe_tmr.
	* src/vsip/opt/profile.cpp: Add timer policy for MCOE TMR timer.
	* src/vsip/opt/profile.hpp: Add timer policy for MCOE TMR timer.
	  New _PROFILER_PAR macro to control profiling in parallel/comms.
	  Add reset() method to P_acc_timer.
	* src/vsip/core/setup_assign.hpp: Control profiling with
	  _PROFILING_FEATURE_ENABLED / _PROFILE_FEATURE macros.
	* examples/mercury/mcoe-setup.sh: Make mcoe_tmr timer policy the
	  default.
	
	* src/vsip/opt/expr/serial_dispatch.hpp: If ops_per_point are
	  0, record bytes written instead.

	* benchmarks/copy.cpp: Add option to sync between setup_assign
	  construction and execution.  Merge create_map functionality
	  into ...
	* benchmarks/create_map.hpp: ... here.
	* benchmarks/loop.hpp: Add riob_per_sec and data_per_set metrics.
	  Allow loop count to be fixed.  Use non-decreasing loop count
	  calibration to avoid oscillations.
	* benchmarks/main.cpp: Add argument processing for fix_loop, and
	  for riob and data metrics.
	* benchmarks/fft_sal.cpp: Add coverage for in-place, interleaved-
	  complex, and inverse FFTs.
	* benchmarks/vmul.cpp: Split out common classes and parallel cases.
	* benchmarks/vmul.hpp: New file, common classes for vmul and vmul_par.
	* benchmarks/vmul_par.cpp: New file, parallel vmul cases.
	* benchmarks/sumval.cpp: Add get/put sumval case.
	* benchmarks/sumval_simd.cpp: New file, sumval benchmark using SIMD.
	* benchmarks/memwrite.cpp: New file, memory write bandwidth benchmark.
	* benchmarks/memwrite_sal.cpp: New file, memory write bandwidth
	  benchmark using SAL.
	* benchmarks/memwrite_simd.cpp: New file, memory write bandwidth
	  benchmark using SIMD.
	
2006-11-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/signal/corr_common.hpp: Add macro to control
	  handling of same-support scaling.  Use in corr_same().
	* src/vsip/opt/signal/corr_opt.hpp: Likewise.
	* src/vsip_csl/ref_corr.hpp: Likewise.
	
2006-11-07  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/tutorial/src/ser/fc1-admit-release.cpp: Fix typos and other 
	minor issues.
	* doc/tutorial/parallel.xml: Likewise.
	* doc/tutorial/serial.xml: Likewise.

2006-11-06  Don McCoy  <don@codesourcery.com>

	* apps/ssar/kernel1.hpp: Reorganized such that as much processing
	  as possible is done at create time.  Removed all but one of
	  the explicit loops from the main compute process.
	* apps/ssar/ssar.cpp: Changed to allow the input (raw radar data)
	  and output (viewable image) to be passed to Kernel1.

2006-11-03  Don McCoy  <don@codesourcery.com>

	* src/vsip_csl/load_view.hpp: Added load_view_as<> to read in a file
	  of one type into a view of another (using view_cast<> template).
	* src/vsip_csl/save_view.hpp: Likewise added save_view_as<>.
	* apps/ssar/load_save.hpp: Removed.
	* apps/ssar/kernel1.hpp: Changed to use new load/save...as functions.
	* apps/ssar/GNUmakefile: Removed load_save.hpp dependency.
	* apps/ssar/viewtoraw.cpp: Simplified using view_cast<>.

2006-11-02  Jules Bergmann  <jules@codesourcery.com>

	Support nested event names for profile accumulate mode.
	* configure.ac (--disable-profile-nesting): New option, disables
	  nested event names.
	* src/vsip/opt/profile.cpp: Create nested event names for accum
	  mode when VSIP_IMPL_PROFILE_NESTING set.
	* src/vsip/opt/profile.hpp: Add stack for nested event names.
	* scripts/fmt-profile.pl: Support nested event names.
	
2006-11-02  Don McCoy  <don@codesourcery.com>

	* src/vsip_csl/matlab_utils.hpp: New file.  Moved fft_shift
	  routines from kernel1.hpp to here.  Added versions returning
	  results by reference.  Changed get/put loop to use assignment
	  using subviews.
	* apps/ssar/load_save.hpp: Updated for post 1.2 changes.
	* apps/ssar/diffview.cpp: Added -c option for complex views 
	  (this is also the default).  Simplified compare_view by
	  making it a template function.
	* apps/ssar/kernel1.hpp: Changed to use new fftshift routines.
	* apps/ssar/viewtoraw.cpp: Added -c option.
	* apps/ssar/Makefile: Renamed to GNUmakefile.

2006-11-01  Jules Bergmann  <jules@codesourcery.com>

	* scripts/fmt-profile.pl: New file, script for formatting profiler
	  output.
	
2006-11-01  Jules Bergmann  <jules@codesourcery.com>

	Rename isnan to is_nan (and ilk) since isnan may be a macro.
	* src/vsip/core/fns_scalar.hpp: Rename is_nan and ilk.
	* src/vsip/core/fns_elementwise.hpp: Likewise.
	* src/vsip_csl/error_db.hpp: Likewise.

	Add view_cast for view type conversions.
	* src/vsip/opt/view_cast.hpp: New file, implement view_cast fcn
	  and Cast operator.
	* tests/view_cast.cpp: New file, unit test for view_cast.
	
	Add SAL dispatch for view type conversions.
	* src/vsip/opt/sal/is_op_supported.hpp: Add Op1sup specializations
	  for supported conversions.
	* src/vsip/opt/sal/elementwise.hpp: Add vconv wrapper function.
	* src/vsip/opt/sal/eval_elementwise.hpp: Add dispatch to vconv.

	Misc changes.
	* src/vsip/core/allocation.cpp: Handle 0 return from malloc properly.
	* src/vsip/map.hpp: Remove old comment.
	* src/vsip_csl/load_view.hpp: Add missing header.
	* tests/regressions/ext_subview_split.cpp: Update path to fast_block
	  header.
	* doc/GNUmakefile.inc.in (doc2src_noapi): Like doc2src target, but
	  does not build API docs.
	
2006-10-31  Don McCoy  <don@codesourcery.com>

	Added Scalable SAR benchmark application (all new files).
	* apps/ssar/load_save.hpp: Overloaded functions for reading/writing
	  views based on 'double' while stored on disk as 'float'.
	* apps/ssar/diffview.cpp: Compare complex or scalar views.
	* apps/ssar/make_set1_images.sh: Creates intermediate images for set1.
	* apps/ssar/kernel1.hpp: VSIPL++ implementation of HPC's SSCA #3
	  application benchmark.
	* apps/ssar/viewtoraw.cpp: Creates raw greyscale images from views
	  in different formats.
	* apps/ssar/ssar.cpp: Entry point for SSAR application.
	* apps/ssar/set1/uc.view: Input data.
	* apps/ssar/set1/ftfilt.view: Input data.
	* apps/ssar/set1/k.view: Input data.
	* apps/ssar/set1/ref_image.view: Input data.
	* apps/ssar/set1/ku.view: Input data.
	* apps/ssar/set1/dims.txt: Input dimensions.
	* apps/ssar/set1/u.view: Input data.
	* apps/ssar/set1/sar.view: Input data (raw SAR data).
	* apps/ssar/Makefile: Makefile for all components.

2006-10-31  Jules Bergmann  <jules@codesourcery.com>

	PAS for Linux binary package (for testing purposes).
	* scripts/package.py: Update path to acconfig.hpp.
	* scripts/config: Add binary package for PAS.  Update x86 test
	  package.
	* scripts/release.sh: Add paths for PAS.
	
2006-10-30  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Check for various C-VSIPL convolution functions.
	* src/vsip/core/signal/conv_common.hpp (conv_kernel_size): New function.
	* src/vsip/core/cvsip/common.hpp: Common code for C-VSIPL bindings.
	* src/vsip/core/cvsip/conv.hpp: Provide C-VSIPL bindings for conv.
	* src/vsip/core/signal/conv.hpp: Use them.
	* src/vsip/opt/sal/conv.hpp: Fix header guard.
	* src/vsip/core/cvsip/block.hpp: Make it easier for synopsis to parse.
	* src/vsip/core/cvsip/matvec.hpp: Remove redundant include directive.
	* src/vsip/core/matvec.hpp: Fix header guard.
	* src/vsip/opt/general_dispatch.hpp: Fix evaluation order.

2006-10-27  Jules Bergmann  <jules@codesourcery.com>

	Add support for QMtest CommandHost target.
	* configure.ac (--with-qmtest-command): New option to set command
	  for CommandHost target.
	  (QMTEST_TARGET): New AC_SUBST to pass QMtest target (either
	  CommandHost or LocalHost).
	  Fix non-portable case statement.
	* vsipl++.pc.in (qmtest_target): Variable to hold QMTEST_TARGET.
	* tests/context.in (QMTEST_TARGET): Use it.
	* tests/GNUmakefile.inc.in (installcheck): Merrir QMTEST_TARGET
	  into QMTEST_TARGET_.
	* tests/context-installed.pre.in (QMTEST_TARGET_): Use it.
	
2006-10-27  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/eval_blas.hpp: Move to...
	* src/vsip/opt/lapack/matvec.hpp: ...here.
	* src/vsip/core/matvec_prod.hpp: Provide alternative path for ref-impl.
	* src/vsip/core/matvec.hpp: Likewise.
	* src/vsip/opt/general_dispatch.hpp: Make Dispatch_order<>::type the
	default.

2006-10-27  Jules Bergmann  <jules@codesourcery.com>

	Add dispatch to SAL vector comparisons (lv{eq,ne,gt,ge,lt,le}x).
	* src/vsip/core/setup_assign.hpp: Remove reference to
	  Tag_serial_assign.
	* src/vsip/core/dispatch_assign.hpp (assign): Pass const
	  modifier of SrcBlock thru to Dispatch_assign.
	* src/vsip/opt/sal/eval_vcmp.hpp: New file, evaluators for
	  SAL vector comparisons.
	* src/vsip/opt/sal/bindings.hpp: Include eval_vcmp.hpp
	* src/vsip/opt/sal/is_op_supported.hpp: New file, Is_op_supported
	  traits, move from ...
	* src/vsip/opt/sal/eval_elementwise.hpp: ... here.
	* src/vsip/opt/sal/elementwise.hpp: Add bindings for SAL
	  vector comparisons.
	* tests/threshold.cpp: Add coverage for vector comparisons.

	Extend load_view and save_view to work w/distributed views.
	* src/vsip_csl/load_view.hpp: Extend load_view to work w/distributed
	  views.
	* src/vsip_csl/save_view.hpp: Extend save_view to work w/distributed
	  views.
	* src/vsip/opt/extdata.hpp (is_ext_dense): New function, check
	  if Ext_data refers to a dense space.
	* src/vsip/core/adjust_layout.hpp (Adjust_layout_complex): New
	  class to adjust complex format of layout type.
	* tests/test_common.hpp (setup, check): Overload for tensors.
	* tests/vsip_csl/load_view.cpp: New file, unit tests for load_view
	  and save_view.
	
	* src/vsip/map.hpp: Add assertion to prevent a higher-dimensional
	  map from being applied to a view.

	* tests/extdata-fft.cpp: Update path to fast_block include.
	* tests/elementwise.cpp: Likewise.
	* tests/fast-block.cpp: Likewise.

2006-10-26  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/support.hpp: Move some helper templates...
	* src/vsip/core/order_traits.hpp: ...here and add Is_order_valid trait.
	* src/vsip/opt/pas/block.hpp: Adjust.
	* src/vsip/core/cvsip/matvec.hpp: C-VSIPL bindings for matvec.
	* src/vsip/core/matvec.hpp: Use them.
	* src/vsip/core/matvec_prod.hpp: Likewise.
	* src/vsip/opt/general_dispatch.hpp: Add Op_prod_gemp tag.
	* src/vsip/opt/eval_blas.hpp: Use it.
	* src/vsip/opt/sal/eval_misc.hpp: Likewise.
	* tests/QMTest/classes.qmc: Revert erroneous checkin.
	
2006-10-26  Jules Bergmann  <jules@codesourcery.com>

	* tests/threshold.hpp: New file, unit tests for threshold
	  expressions that are dispatched to SAL.
	
2006-10-26  Assem Salama <assem@codesourcery.com>
	
	* src/vsip/core/cvsip/solver_lu.hpp: Fixed header gaurds, move
	  admit/release from decompose function into this file.
	* src/vsip/core/cvsip/cvsip.hpp: Added some more functions for qr.
	* src/vsip/core/cvsip/cvsip_lu.hpp: Removed admit/relese from
	  decompose function.
	* src/vsip/core/cvsip/cvsip_matrix: Added support for order type and
	  strides.
	* src/vsip/core/solver/lu.hpp: Added Cvsip_tag to dispatch. Also
	  added VSIPL_IMPL_REF_IMPL define to force use of Cvsip_tag.
	* src/vsip/core/solver/common.hpp: Added support for new Cvsip_tag.

2006-10-25  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/fns_scalar.hpp: Add vsip::impl::fn entries for
	  isfinite, isnan, and isnormal.
	* src/vsip/core/fns_elementwise.hpp: Add view only unary dispatch.
	  Use it for isfinite, isnan, and isnormal.
	* src/vsip_csl/error_db.hpp: Document.  Check for NaN inputs.

2006-10-24  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/parallel/expr.hpp: Move to...
	* src/vsip/core/parallel/expr.hpp: ...here.
	* src/vsip/opt/fast_block.hpp: Move to...
	* src/vsip/core/fast_block.hpp: ...here.
	* src/vsip/opt/dispatch_assign.hpp: Move to...
	* src/vsip/core/dispatch_assign.hpp: ...here, remove old code, and
	make useful as part of ref-impl.
	* src/vsip/core/fft/util.hpp: Adjust.
	* src/vsip/core/setup_assign.hpp: Adjust.
	* src/vsip/core/signal/fir.hpp: Adjust.
	* src/vsip/vector.hpp: Adjust.
	* src/vsip/matrix.hpp: Adjust.
	* src/vsip/tensor.hpp: Adjust.
	* src/vsip/core/lvalue_proxy.hpp: Fix header guard.
	* src/vsip/core/setup_assign.hpp: Likewise.
	* src/vsip/core/layout.hpp: Likewise.
	* src/vsip/core/adjust_layout.hpp: Likewise.
	* src/vsip/core/aligned_allocator.hpp: Likewise.
	* src/vsip/core/allocation.hpp: Likewise.

2006-10-23  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/core/fft.hpp: Fix some include directives.
	* tests/fft_be.cpp: Allow to be run in two modes, composite, as well as
	individual backends.

	* configure.ac: Add --enable-ref-impl option handling.
	* src/vsip/core/fft.hpp: Directly bind to cvsip::fft when building
	building the ref-impl.

2006-10-23  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in (hdr): Update to new location of src/vsip/core/fft.
	* apps/sarsim/sarsim.cpp: Add support for parallel sarsim.
	* apps/sarsim/sarsim.hpp: Add support for parallel sarsim (maps
	  for data cubes), add timers.
	* apps/sarsim/mit-sarsim.cpp: Add support for parallel sarsim.
	* apps/sarsim/GNUmakefile (PKG): New variable, VSIPL++ pkg-config 
	  name.
	* apps/sarsim/histcmp.c: Fix Wall warnings.
	* apps/sarsim/frm_hdr.c: Likewise.
	* apps/sarsim/read_tbv.c: Likewise.
	* apps/sarsim/util_io.c: Likewise.
	* apps/sarsim/dat2xv.c: Likewise.
	* apps/sarsim/sarx.h: Likewise.
	* apps/sarsim/read_adts.c: Likewise.
	* apps/sarsim/read_adts.h: Likewise.
	
2006-10-23  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/sal/eval_threshold.hpp: New file, dispatch for
	  SAL vthres and vthr functions.
	* src/vsip/opt/sal/bindings.hpp: Include eval_threshold.
	* src/vsip/opt/sal/elementwise.hpp: Add bindings for SAL vthresx
	  and vthrx functions..
	
	* src/vsip/core/coverage.hpp: Update header and guard.
	* src/vsip/core/parallel/global_map.hpp: Likewise.
	* src/vsip/core/parallel/local_map.hpp: Likewise.
	* src/vsip/opt/sal/eval_elementwise.hpp: Likewise.
	
2006-10-20  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/opt/fft/: Move to...
	* src/vsip/core/fft/: ...here. Adjust all references accordingly.

	* configure.ac: Fixes to better handle enable-fft-float et al.
	* src/vsip/core/cvsip/block.hpp: New file.
	* src/vsip/core/cvsip/view.hpp: New file.
	* src/vsip/core/fft.hpp: New file.
	* src/vsip/core/cvsip/fft.cpp: New file.
	* src/vsip/core/fft.hpp: Add new FFT backend.
	* src/vsip/GNUmakefile.inc.in: Compile it.
	* tests/fft_be.cpp: Test it.
	
2006-10-18  Jules Bergmann  <jules@codesourcery.com>

	Use non-early-binding pas assignment algorithm for expressions.
	* src/vsip/core/parallel/choose_assign_impl.hpp
	  (Choose_par_assign_impl): Add EarlyBinding template parameter to
	  select whether early-binding or dynamic assignment should be used.
	* src/vsip/opt/dispatch_assign.hpp (Dispatch_assign_helper): Likewise.
	* src/vsip/core/setup_assign.hpp: Use Dispatch_assign_helper with
	  EarlyBinding = true.
	* src/vsip/opt/parallel/expr.hpp: Use Dispatch_assign_helper with
	  EarlyBinding = false.
	
	* src/vsip/opt/pas/assign.hpp: Fix bug, not setting PAS_WAIT if
	  src and dst distributions have same dim-order; move dynamic
	  xfer construction/destruction into object constructor/destructor
	  (courtesy John Watson / MCS).
	
	* src/vsip/core/vmmul.hpp: Add missing include.
	
2006-10-18  Assem Salame <assem@codesourcery.com>
	
	* src/vsip/core/cvsip/cvsip.hpp: Fixed typo.
	  VSIPL_IMPL_CVSIP_HAVE_DOUBLE should have been
	  VSIPL_IMPL_CVSIP_HAVE_FLOAT.

2006-10-18  Assem Salame <assem@codesourcery.com>
	
	* src/vsip/core/cvsip/cvsip.hpp: New file. This file implements some
	  basic cvsip bindings for use in VSIPL++.

2006-10-17  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add support for C-VSIPL backend.
	* GNUmakefile.in: Add cvsip backend.

2006-10-16  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Adjust hdr variable to new header locations.
	* src/vsip/GNUmakefile.inc.in: Fix 'install' target.

2006-10-16  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/opt/simd/expr_evaluator.hpp: Update includes for new layout.
	* src/vsip/opt/simd/expr_iterator.hpp: Likewise.
	
2006-10-13  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add --enable-pas-heap-size option.
	* src/vsip/opt/pas/param.hpp: Handle VSIP_IMPL_PAS_HEAP_SIZE.
	* src/vsip/opt/pas/services.hpp: Add -pas_heap option.

2006-10-13  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/core/vmmul.hpp (Distributed_local_block): Add missing
	  proxy_type typedef.
	  (Serial_expr_evaluator): Move vmmul evaluator to Op_expr_tag.
	* src/vsip/opt/expr/serial_dispatch_fwd.hpp (LibraryTagList):
	  Add Op_expr_tag.
	* src/vsip/opt/expr/serial_evaluator.hpp (Op_expr_tag): New evaluator
	  tag, intended for special op handling, such as vmmul.
	* tests/vmmul.cpp: Extend to cover cases where vmmul has
	  expr argument, and is used in a expression.
	
2006-10-12  Jules Bergmann  <jules@codesourcery.com>

	* tests/matvec.cpp: Disable long double test when
	  VSIP_IMPL_TEST_LONG_DOUBLE not set.
	* tests/vmmul.cpp: Use length_type to represent number of processors.
	* tests/util-par.hpp: Likewise.
	* tests/parallel/subviews.cpp: Likewise.
	* tests/parallel/block.cpp: Likewise.
	
2006-10-11  Stefan Seefeld  <stefan@codesourcery.com>

	* vendor/atlas/configure.ac: Add case to properly handle ATHLON.
	* src/vsip/*: Reorganize files into core/ and opt/ subdirectories.

2006-10-10  Jules Bergmann  <jules@codesourcery.com>

	* examples/mercury/mcoe-setup.sh: Fix to work with solaris /bin/sh.
	  (Fixes issue #102).

2006-10-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/replicated_map.hpp (impl_local_from_global_domain):
	  New function to translate local to global domain for map.
	* src/vsip/impl/global_map.hpp (impl_local_from_global_domain):
	  likewise.
	  (impl_rank_from_proc): New function to translate rank into
	  processor.
	* src/vsip/impl/subblock.hpp: Handle empty domain when checking
	  that a subblock's domain is a subset of the parent's domain.
	  Handle empty subblock case when creating local block for 
	  distributed subblock (case exercised by matrix_subviews.cpp).
	* src/vsip/impl/par-services-mpi.hpp: Add MPI_Datatype for char.
	* tests/test_common.hpp: use separate macros to enable VERBOSE
	  checking from show functions.
	* tests/complex.cpp: Initialize library.
	* tests/parallel/matrix_subviews.cpp: New file, tests
	  distributed matrix matrix subview cases.
	
2006-10-05  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Let configure only check for python if scripting is
	actually enabled.

2006-10-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/signal-conv-ipp.hpp (impl_performance): Avoid
	  Wall warning when profiling disabled.
	* src/vsip/impl/pas/par_assign_eb.hpp: New file, early-binding
	  version of PAS Par_assign.
	* src/vsip/impl/choose_par_assign_impl.hpp: Use early-binding
	  PAS Par_assign.
	* src/vsip/impl/par_assign.hpp: Include par_assign_eb file.
	* src/vsip/impl/par_assign_fwd.hpp (Pas_assign_eb): New impl tag
	  for early-binding PAS Par_assign.
	* src/vsip/impl/simd/eval-generic.hpp: Add dispatch for lt_functor
	  using vgt() with reversed arguments.
	* src/vsip/support.hpp (VSIP_IMPL_FLATTEN): New macro to tell
	  compiler every call inside function should be inlined.
	* src/vsip/GNUmakefile.inc.in: Build check_config.  Install
	  PAS headers.
	* GNUmakefile.in (hdr): Include PAS headers.
	* tests/fft_be.cpp: Guard backend tests with ifdef check that
	  backend is actually available.  Simplifies test compilation. 
	* tests/coverage_comparison.cpp: Add coverage for less-than,
	  float value type.
	* configure.ac (--with-pas-include, --with-pas-lib): New options
	  to specify PAS paths.  
	  (LIBEXT): Add heuristic for MCOE.
	  Update PAS configuration to work without pkg-config file.
	* benchmarks/create_map.hpp: Use reference for communicator.
	* benchmarks/dist_vmul.cpp: Likewise.
	* benchmarks/vmul.cpp: Likewise.
	* benchmarks/copy.cpp: Avoid MPI specific benchmarks when usiing
	  PAS.
	* benchmarks/loop.hpp: Fix printf wall warnings.
	* benchmarks/fft_sal.cpp: New benchmark for SAL FFT performance.
	* benchmarks/fastconv_sal.cpp: New benchmark for SAL fast convolution
	  performance.
	* benchmarks/mcopy.cpp: Add int benchmark case.
	* examples/mercury/mcoe-setup.sh: Fix enable/disable flags for
	  SIMD loop fusion.
	* src/vsip/impl/check_config.cpp: New file, function library_config
	  to return library configuration string.
	* src/vsip/impl/check_config.hpp: New file, header for cpp file.
	* tests/check_config.cpp: New file, exercise library_config.
	
2006-10-05  Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Document --with-{obj,lib,exe}-ext
	  options.

2006-10-04  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add --enable-scripting, --with-python, and 
	--with-boost-prefix flags.
	* GNUmakefile.in: Fix the use of CXXFLAGS, LDFLAGS, and LIBS,
	and add the optional subdirectory 'scripting'.
	* scripting/GNUmakefile.inc.in: New file.
	* scripting/types.hpp: New file.
	* scripting/_base.cpp: New file.
	* scripting/math.cpp: New file.
	* scripting/signal.cpp: New file.
	* scripting/png.cpp: New file.
	* scripting/__init__.py: New file.

2006-10-03  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add support for --with-lib-ext.

2006-10-03  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/pas/offset.hpp: New file, necessary for PAS.

2006-09-17  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (VSIP_IMPL_MPI_H_TYPE): Indicate mpi header to use
	  with number instead of string.  String did not work with Intel C++.
	* src/vsip/impl/par-services-mpi.hpp: Likewise.
	
2006-09-17  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (VSIP_IMPL_MPI_H): Avoid using angle-braces,
	  too difficult to quote properly.
	* src/vsip/impl/par-services-mpi.hpp: Likewise.
	* tests/context.in: use CPPFLAGS instead of CPPFLAGS_NOQUOTES.
	* tests/GNUmakefile.inc.in (installcheck): Remmove quote removal
	  no longer necessary.
	
	* scripts/config: Built IPP and builtin FFT backends for intel
	  variants.
	* scripts/release.sh: Bump version.
	* tests/parallel/fftm.cpp: Fix initialization of distributed
	  date. (Fixes issues #58).
	
2006-09-15  Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Add description of new
	  libraries and platforms supported.  Update configure
	  options.  Describe how to run parallel programs.
	* doc/tutorial/tutorial.xml: Bump version number to 1.2.

2006-09-15  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/qrd.cpp: Add cases for various save Q options.
	  Add col-major cases.
	
2006-09-15  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Add sdist and bdist targets for Windows
	zip packages.

2006-09-15  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/vmul.cpp: Avoid using rand for potentially
	  distributed data, optimized check of distributed data.
	* benchmarks/vma.cpp: New cases for V = s*V+s.
	* benchmarks/fftm.cpp: Add Impl_pop case: psuedo OP FFTM
	  using OP FFT.  Add Impl_bv case for by-value Fftm.
	  Renumber.
	* benchmarks/fft.cpp: Add by-value case.
	
2006-09-15  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--enable-ipp=win): New option to configure for
	  IPP on windows.
	  (--with-lapack=mkl_win): New option to configure for MKL on
	  windows.
	* benchmarks/main.cpp: Avoid calling getpid() on windows.
	
2006-09-14  Jules Bergmann  <jules@codesourcery.com>

	* tests/regressions/transpose_assign.cpp: New file, regression
	  test for ICC 9.1 for Windows bug in fast-transpose.hpp.
	  (Bug work around already committed).
	* tests/test_common.hpp: New file, common routines to setup,
	  check, and show views.
	
2006-09-14  Jules Bergmann  <jules@codesourcery.com>

	* scripts/set-prefix.sh: Change #! to /bin/sh
	* scripts/package.py: Add support for builtin_libdir to distinguish
	  libdir of builtin libraries (which can be shared amonst
	  variants) from libdir of libsvipp.
	* scripts/config: Add builtin_libdir entries.
	* GNUmakefile.in (builtin_libdir): New variable.  
	  (bdist): Remove 'h' option to tar to preserve pkg-config symlinks.
	* vendor/GNUmakefile.inc.in: Install atlas and fftw3 into
	  builtin_libdir.
	* configure.ac (--with-builtin-libdir): New option for setting
	  builtin_libdir.
	  (LDFLAGS): Remove old -L paths. 
	  Define vsip_impl_fft_use_{float,double,long_double}
	  properly when using SAL.
	* lib/GNUmakefile.inc.in: Remove boiler-plate install
	  of all libs in libs dir.  Conflicts with builtin_libdir.
	  Only used for libg2c, which now has rule in vendor/GNUmakefile.inc.
	
	* src/vsip/impl/simd/simd.hpp (load_scalar): Fix defn for
	  SSE char, short, and int.
	* tests/test-random.hpp: Add option to use VSIPL++ Rand
	  instead of system rand().
	* tests/fft.cpp: Turn VERBOSE off.  Avoid testing 2D CC
	  when only using IPP backend.
	* tests/solver-lu.cpp: Improve debugging output.
	
2006-09-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/fft.hpp: Pass backend to workspace constructor.
	* src/vsip/impl/workspace.hpp: Fast path optimization for 1-dim
	  CC unit-stride FFT to use compile-time Ext_data.
	
2006-09-14  Mark Mitchell  <mark@codesourcery.com>

	* doc/tutorial/tutorial.xml: Add references to API reference and
	specification.
	* doc/tutorial/performance.xml: Edit.
	* doc/tutorial/parallel.xml: Likewise.
	* doc/tutorial/serial.xml: Likewise.

2006-09-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/fast-transpose.hpp (transpose_unit): Simplify
	  dispatch on _WIN32, work around for Intel C++ 9.1 bug.
	  
2006-09-14  Don McCoy  <don@codesourcery.com>

	* benchmarks/hpec_kernel/cfar.cpp: Corrected storage order for
	  slice algorithm.  Changed order for vector algorithm too,
	  resulting in a slight performance improvement.

2006-09-14  Don McCoy  <don@codesourcery.com>

	* doc/tutorial/performance.xml: Updated for fast convolution.
	* doc/tutorial/tutorial.xml: Added profiler reference.
	* doc/tutorial/src/profile_accum.txt: New file.  Accumulate mode 
	  example.
	* doc/tutorial/src/profile_trace.txt: Updated for fast convolution.
	* doc/tutorial/src/profile_example.cpp: Likewise.
	* doc/tutorial/src/profile_output.txt: Likewise.
	* doc/tutorial/src/profile_fft1.txt: Removed.
	* doc/tutorial/src/profile_fft2.txt: Removed.
	* doc/tutorial/profiling.xml: New file.  Profiler reference.
	* doc/tutorial/serial.xml: Fixed xref.

2006-09-13  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Fix macro comment.
	* src/vsip/impl/config.hpp: Introduce VSIP_IMPL_IPP_CALL.
	* src/vsip/impl/ipp.cpp: Use it.
	* src/vsip/impl/ipp/fft.cpp: Use it.

2006-09-12  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/config.hpp: Remove unused macros for SIZEOF_DOUBLE
	  and SIZEOF_LONG_DOUBLE.  SIZEOF_LONG_DOUBLE differs between
	  ia32 and em64t/amd64.
	* scripts/package.py: Updates for merged packages: use libdir instead
	  of suffixes to distinguish variants.
	* scripts/config: Updates for merged packages, defines new
	  Mondo package that contains all linux variants.
	* scripts/release.sh: Remove -no-maintainer-mode option when
	  building source.  This was accidentally commited.
	* vsipl++.pc.in: Include vsip_csl library.
	* vendor/GNUmakefile.inc.in: Add rules to clean atlas.
	* tests/context.in: Use CPPFLAGS_NOQUOTES instead of CPPFLAGS.
	  Include vsip_csl library.
	* tests/fft.cpp: Add verbose macro to make failures easier to debug.
	* tests/GNUmakefile.inc.in (installcheck): Pass libdir variable to
	  pkg-config.  Remove quotes from CPPFLAGS.
	* configure.ac: Move macros for parallel services, FFT, and ATLAS
	  from acconfig.hpp to command line.
	
2006-09-12  Don McCoy  <don@codesourcery.com>

	Moved two headers from tests/ to src/vsip_csl/:
	* GNUmakefile.in: Added missing VSIP_IMPL_HAVE_MPI definition.
	* tests/extdata-subviews.cpp: Adjusted path.
	* tests/reductions-idx.cpp: Adjusted path.
	* tests/fns_scalar.cpp: Adjusted path.
	* tests/scalar-view.cpp: Adjusted path.
	* tests/regressions/proxy_lvalue_conv.cpp: Adjusted path.
	* tests/view_lvalue.cpp: Adjusted path.
	* tests/solver-qr.cpp: Adjusted path.
	* tests/coverage_ternary.cpp: Adjusted path.
	* tests/reductions-bool.cpp: Adjusted path.
	* tests/extdata-matadd.cpp: Adjusted path.
	* tests/test-storage.hpp: Moved to src/vsip_csl/.
	* tests/view.cpp: Adjusted path.
	* tests/plainblock.hpp: Moved to src/vsip_csl/.
	* tests/extdata.cpp: Adjusted path.
	* tests/coverage_binary.cpp: Adjusted path.
	* tests/extdata-fft.cpp: Adjusted path.
	* tests/coverage_unary.cpp: Adjusted path.
	* tests/extdata-runtime.cpp: Adjusted path.
	* tests/reductions.cpp: Adjusted path.
	* tests/coverage_comparison.cpp: Adjusted path.
	* configure.ac: Fixed missing substitution needed for compiling
	  benchmarks dependent on MPI.
	* benchmarks/mcopy_ipp.cpp: Adjusted path.
	* benchmarks/prod.cpp: Adjusted path.
	* benchmarks/conv_ipp.cpp: Added missing headers.
	* benchmarks/vma.cpp: Adjusted path.
	* benchmarks/vmul_ipp.cpp: Added missing headers.
	* benchmarks/make.standalone: Exclude *_mpi.cpp from default build.
	* benchmarks/GNUmakefile.inc.in: Changed VSIP_IMPL_MPI_H to
	  VSIP_IMPL_HAVE_MPI.
	* benchmarks/mcopy.cpp: Adjusted path.
	* benchmarks/fft_ipp.cpp: Added missing headers.

2006-09-12  Don McCoy  <don@codesourcery.com>

	* benchmarks/hpec_kernel/cfar.cpp: Fixed performance issue
	  introduced in the last patch.  Now the preferred (i.e. highest
	  performing) storage order is used for each of the three
	  algorithms.

2006-09-12  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fns_scalar.hpp: Properly forward-declare hypotf as
	'extern "C"'. Fall back on ::hypot(double, double) if necessary.
	* src/vsip_csl/GNUmakefile.inc.in: Re-enable matlab code on Windows.
	* configure.ac: Remove AC_CONFIG_MACRO_DIR and increment version string.
	* src/vsip/support.hpp: Disable ICC loop vectorization for Windows.

2006-09-12  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/simd/expr_evaluator.hpp: Use Adjust_layout_dim
	  to work with re-dimensioned expressions.
	* tests/coverage_common.hpp (matrix_cases3): Add scalar-matrix
	  combinations.
	* tests/coverage_binary.cpp: Add coverage for col-mat * scalar.
	* tests/regressions/col_mat_scale.cpp: New test, regression for
	  col-mat * scalar, which tests SIMD loop fusion with re-dimensioned
	  expressions.
	
2006-09-12  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Fix handling of 'mpicxx -show'; add --with-qmtest.
	  (Fixes issue #123).
	* GNUmakefile.in: Define QMTEST variable.
	* tests/GNUmakefile.inc.in: Use it.
	* src/vsip/impl/fns_elementwise.hpp: Fix for icl.
	* src/vsip/impl/signal-iir.hpp: Add missing include.
	* src/vsip/impl/layout.hpp: Make Rt_allocated_storage non-copyable.
	* src/vsip/impl/rt_extdata.hpp: Avoid temporary copy (and fix bug).
	* src/vsip/impl/inttypes.hpp: Add our own fixed-size integral types.
	* src/vsip_csl/matlab_file.cpp: Use them.
	* src/vsip_csl/matlab_file.hpp: Likewise.
	* src/vsip_csl/matlab.hpp: Likewise.
	* src/vsip_csl/matlab_bin_formatter.hpp: Likewises.
	
2006-09-12  Jules Bergmann  <jules@codesourcery.com>

	* doc/tutorial/tutorial.xml: Split into tutorial (part I) and
	  reference (part II).
	* doc/tutorial/src/ser/fc1-admit-release.cpp: New file, source
	  code for serial IO example.
	* doc/tutorial/serial.xml: New file, contains serial portions of
	  fast convolution example ...
	* doc/tutorial/parallel.xml: ... taken from here.
	* doc/tutorial/performance.xml: Add chapter id.
	* doc/tutorial/optimization.xml: Likewise.
	* doc/tutorial/api.xml: Likewise.
	
2006-09-07  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/support.hpp: Define VSIP_HAS_EXCEPTIONS appropriately when
	there is no compiler support.
	* src/vsip/support.cpp: Print location in fatal_exception().

	* configure.ac: Add portable build instructions.
	* GNUmakefile.in: Likewise.
	* src/vsip/GNUmakefile.inc.in: Likewise.
	* src/vsip_csl/GNUmakefile.inc.in: Likewise.
	* src/vsip/domain.hpp: Fix signature of function template specialization.
	* src/vsip/impl/config.hpp: Define VSIP_IMPL_PI.
	* src/vsip/impl/fft/dft.hpp: Use it.
	* src/vsip/signal-window.cpp: Likewise.
	* src/vsip_csl/ref_dft.hpp: Likewise.
	* tests/extdata-subviews.cpp: Likewise.
	* tests/matvec.cpp: Likewise.
	* tests/fft.cpp: Likewise.
	* apps/sarsim/fft.hpp: Likewise.
	* examples/fft.cpp: Likewise.
	* examples/example1.cpp: Likewise.
	* src/vsip/impl/coverage.hpp: Use config.hpp, not acconfig.hpp.
	* src/vsip/impl/expr_serial_dispatch_fwd.hpp: Likewise.
	* src/vsip/impl/aligned_allocator.hpp: Likewise.
	* src/vsip/impl/lapack.hpp: Likewise.
	* examples/GNUmakefile.inc.in: Conditionalize compilation of png.cpp. 
	* src/vsip/impl/expr_ops_info.hpp: Work around icl preprocessor bug.
	* tests/parallel/corner-turn.cpp: Avoid use of <unistd.h> for portability.
	
2006-09-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/dense.hpp (Dense): Add implementation constructor
	  to construct an admit/release block from a User_storage
	  object.
	* src/vsip/impl/extdata.hpp: Add size() method to Ext_data.
	* src/vsip/impl/replicated_map.hpp: Replace incorrect usage of
	  no_processor with no_rank.
	* src/vsip/impl/pas/block.hpp: Add support for split-complex.
	* src/vsip/impl/pas/param.hpp: Use PAS_RDMA (set in Linux pas.pc)
	  to determine if Linux or MCOE parameters should be used.
	* src/vsip/impl/pas/par_assign_direct.hpp: Add support for
	  split-complex.
	* src/vsip/impl/pas/services.hpp: Fix auto_ptr usage that
	  GreenHills didn't like.
	* src/vsip/impl/pas/par_assign.hpp: Add support for split-complex.
	* src/vsip/impl/block-traits.hpp: Add Block_root trait and
	  block_root() function to extract root block for a subblock.
	* src/vsip/impl/proxy_local_block.hpp: Change impl_offset return
	  type from long to stride_type.
	* src/vsip/impl/subblock.hpp: Define Block_root and block_root
	  specializations.
	* tests/parallel/corner-turn.cpp: Generalize to cover additional
	  types and sizes.
	* tests/parallel/subviews.cpp: Fix typos that limited generality
	  of coverage.  Add coverage for complex subviews.
	* tests/parallel/block.cpp: Add rudimentary coverage for
	  Replicated_map.
	* benchmarks/fftm.cpp: Fix log() ambiguity on GreenHills.
	* examples/mercury/mcoe-setup.sh: Add options to enable
	  loop fusion (and disable SAL, although should only be
	  used for benchmarking loop fusion).
	
2006-09-05  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/simd/eval-generic.hpp: Added layout policies for SIMD
	  evaluators for real-scalar/complex-view cases.

2006-09-02  Don McCoy  <don@codesourcery.com>

	* src/vsip/initfin.cpp: Corrected comment, now that...
	* src/vsip/profile.cpp: ...arguments are removed from the list 
	  passed to the Profile_options constructor.  Added new function 
	  member for that purpose.
	* src/vsip/impl/profile.hpp: Added definitions for the different 
	  values for VSIP_IMPL_PROFILER.  Revised comments.
	* configure.ac: Removed configuration options related to profiling.
	* examples/fft.cpp: Added command-line arguments to library
	  initialization call.  Changed profiler output filename.
	* examples/png.cpp: Added command-line arguments.
	* examples/example1.cpp: Added command-line arguments.

2006-08-30  Jules Bergmann  <jules@codesourcery.com>

	Support for using PAS for parallel services.
	* src/vsip/par-services.cpp (global_tag): Counter to generate
	  unique tags for PAS pbuffer allocations.
	* src/vsip/dense.hpp: Move Dense forward decl into dense_fwd.
	  Use Choose_dist_block to choose distributed block type.
	  Define get_local_proxy() function and Is_pas_block trait.
	* src/vsip/impl/expr_generator_block.hpp (Distributed_local_block):
	  Define proxy_type.
	* src/vsip/impl/expr_binary_block.hpp: Likewise.
	* src/vsip/impl/expr_unary_block.hpp: Likewise.
	* src/vsip/impl/expr_scalar_block.hpp: Likewise.
	* src/vsip/impl/working-view.hpp: Remove unnecessary include.
	* src/vsip/impl/par-util.hpp: Likewise.
	* src/vsip/impl/par-support.hpp: Likewise.
	* src/vsip/impl/dense_fwd.hpp: New file, forward declaration of
	  Dense block.
	* src/vsip/impl/replicated_map.hpp: Store data in ref-counted
	  Data member.  Add PAS support.
	* src/vsip/impl/distributed-block.hpp: Move get_local_view bits
	  to get_local_view.hpp.
	* src/vsip/impl/pas/block.hpp: New file, distributed block for
	  PAS.
	* src/vsip/impl/pas/util.hpp: New file, utility functions for PAS.
	* src/vsip/impl/pas/param.hpp: New file, parameters for PAS
	  configuration.
	* src/vsip/impl/pas/par_assign_direct.hpp: New file, PAS
	  assignment using direct low-level point-to-point messaging.
	* src/vsip/impl/pas/par_assign.hpp: New file, PAS assignment using
	  high-level collective messaging.
	* src/vsip/impl/pas/broadcast.hpp: New file, broadcast utility
	  for PAS.
	* src/vsip/impl/pas/services.hpp: New file, parallel services
	  for PAS.
	* src/vsip/impl/par_assign_common.hpp: New file, common routines
	  for Par_assign.
	* src/vsip/impl/par-services.hpp: Add include to pas/services.hpp.
	* src/vsip/impl/config.hpp: Add parallel configuration section.
	* src/vsip/impl/choose_par_assign_impl.hpp: New file, trait
	  class to choose appropriate parallel assignment implementation.
	* src/vsip/impl/par_assign_blkvec.hpp: Add missing include.
	* src/vsip/impl/par-chain-assign.hpp: Move processor_has_block
	  to par_assign_common.hpp.
	* src/vsip/impl/par-services-mpi.hpp: Add dummy typedefs/functions
	  for par_ll_pset_type.
	* src/vsip/impl/par-services-none.hpp: Likewise.
	* src/vsip/impl/dist.hpp: Add support for using PAS' segment
	  size algorithm.
	* src/vsip/impl/choose_dist_block.hpp: New file, trait class to
	  choose the correct distributed block for the parallel impl.
	* src/vsip/impl/get_local_view.hpp: New file, common get_local_view
	  routines from distributed-block.hpp.
	* src/vsip/impl/block-traits.hpp (Distributed_local_block): Add
	  proxy_type typedef.
	  (Is_pas_block): New trait to indicate if block has a valid
	  PAS distribution.
	* src/vsip/impl/sv_block.hpp (impl_vector): Return reference.
	* src/vsip/impl/proxy_local_block.hpp: New file, proxy class
	  for local blocks on remote processors.  Used to query layout
	  parameters such as stride.
	* src/vsip/impl/dispatch-assign.hpp: Move par_assign impl tag
	  choice into Choose_par_assign_impl.
	* src/vsip/impl/par_assign.hpp: Remove forward decl to
	  par_assign_fwd.  Wrapper header for all par_assign files.
	* src/vsip/impl/par-expr.hpp: Use Choose_par_assign_impl
	  to determine appropriate Par_assign implementation.
	* src/vsip/impl/subblock.hpp: Add PAS support (impl_ll_pbuf
	  forwarding, proxy local block forwarding).
	* src/vsip/impl/par_assign_fwd.hpp: New file, foward decl of
	  Par_assign class.
	* src/vsip/impl/global_map.hpp: Add PAS support.
	* src/vsip/support.hpp (Dim_of): New traits class to extract
	  dimension ordering from tuple.  Add PAS support.
	* src/vsip/map.hpp: Add PAS support.
	* src/vsip/random.hpp: Add missing header.
	* src/vsip_csl/test.hpp (VSIP_IMPL_TEST_DOUBLE): New macro to control
	  testing of double precision.
	  VSIP_IMPL_TEST_LONG_DOUBLE): Likewise, for long double.
	* tests/reductions-idx.cpp (VSIP_IMPL_TEST_DOUBLE): Use it. 
	* tests/histogram.cpp: Likewise.
	* tests/solver-toepsol.cpp: Likewise.
	* tests/freqswap.cpp: Likewise.
	* tests/corr-2d.cpp: Likewise.
	* tests/conv-2d.cpp: Likewise.
	* tests/correlation.cpp: Likewise.
	* tests/reductions.cpp: Likewise.
	* tests/convolution.cpp: Likewise.
	* tests/solver-cholesky.cpp: Likewise.
	* tests/domain.cpp: Add command line processing.
	* tests/dense.cpp: Likewise.
	* tests/parallel/expr.cpp: Updates for PAS (pass Communicator by
	  reference, use VSIP_DIST_LEVEL).
	* tests/parallel/user-storage.cpp: Likewise.
	* tests/parallel/subviews.cpp: Likewise.
	* tests/parallel/block.cpp: Updates for PAS, refactor to have
	  more commonality between explicit and implicit parallel
	  assignment tests.
	* tests/appmap.cpp: Add tests for empty subblocks.
	* tests/segment_size.cpp: New file, unit test for segment_size().
	* benchmarks/loop.hpp: Pass communicators by reference.
	* benchmarks/main.cpp: Likewise.
	* examples/mercury/mcoe-setup.sh: Add configure flags for pas.
	* configure.ac (--enable-pas): New configuration option to
	  enable PAS.
	* autogen.sh: Include aclocal.

2006-08-30  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/par-foreach.hpp: Added missing header.
	* configure.ac: Made minor change to allow configure to
	  work with either IPP 4.1 or 5.0.

2006-08-29  Don McCoy  <don@codesourcery.com>

	* tests/extdata-subviews.cpp: Added command-line arguments.
	* tests/reductions-idx.cpp: Likewise.
	* tests/window.cpp: Likewise.
	* tests/fns_scalar.cpp: Likewise.
	* tests/fft_ext/fft_ext.cpp: Likewise.
	* tests/regressions/fft_temp_view.cpp: Likewise. 
	* tests/regressions/proxy_lvalue_conv.cpp: Likewise.
	* tests/regressions/const_view_at_op.cpp: Likewise.
	* tests/regressions/subview_exprs.cpp: Likewise.
	* tests/view_lvalue.cpp: Likewise.
	* tests/iir.cpp: Likewise.
	* tests/histogram.cpp: Likewise.
	* tests/reductions-bool.cpp: Likewise.
	* tests/freqswap.cpp: Likewise.
	* tests/random.cpp: Likewise.
	* tests/fir.cpp: Likewise.
	* tests/fftm.cpp: Likewise.
	* tests/selgen-ramp.cpp: Likewise.
	* tests/reductions.cpp: Likewise.
	* tests/fft.cpp: Likewise.
	* tests/elementwise.cpp: Likewise.

2006-08-29  Don McCoy  <don@codesourcery.com>

	* configure.ac: Help strings edited for consistency.  Added
          timer selection to summary.

2006-08-24  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/fft/util.hpp: Moved description to ops_info.hpp.
	* src/vsip/impl/signal-iir.hpp: Moved ops count to ops_info.hpp.
	* src/vsip/impl/expr_ops_info.hpp: Added Vmmul specializations.
	* src/vsip/impl/signal-conv.hpp: Moved ops count to ops_info.hpp.
	* src/vsip/impl/signal-corr.hpp: Moved ops count to ops_info.hpp.
	* src/vsip/impl/ops_info.hpp: Added op counts as noted.  Removed
          leading spaces from sizes in descriptions.  Sizes for 1-D
          objects no longer show "x1" for the second dimension.  Removed 
	  dimension from Fft and Fftm descriptions.  
	* src/vsip/impl/fft.hpp: Moved ops count to ops_info.hpp. Made
          Fft/Fftm naming explicit instead of inferring it from dimension.
	* src/vsip/impl/signal-fir.hpp: Moved ops count to ops_info.hpp.
	* src/vsip/impl/expr_serial_dispatch.hpp: Added include for
	  impl/profile.hpp.

2006-08-24  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: New AC_SUBST for svpp_library: root name
	  of VSIPL++ library.
	* GNUmakefile.in: Define SVPP_LIBRARY from svpp_library AC_SUBST.
	* src/vsip/GNUmakefile.inc.in: Use SVPP_LIBRARY variable.
	* tests/GNUmakefile.inc.in: Likewise.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: Likewise.
	* benchmarks/GNUmakefile.inc.in: Likewise.
	* examples/GNUmakefile.inc.in: Likewise.
	* vsipl++.pc.in: use svpp_library AC_SUBST.
	* tests/context.in: Likewise.
	* doc/quickstart/quickstart.xml: Reference -lsvpp

2006-08-24  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/parallel.hpp: Include par-foreach.
	* src/vsip/impl/expr_serial_dispatch.hpp: Add missing include.
	* doc/tutorial/parallel.xml: Apply Mark's 7/31 edits.
	* doc/tutorial/src/par/Makefile: New file, makefile for tutorial
	  programs.
	* doc/tutorial/src/par/fc2-foreach.cpp: New file, complete
	  parallel foreach example program.
	* doc/tutorial/src/par/fc2-local-views.cpp: New file, complete
	  parallel local views example program.
	* doc/tutorial/src/par/fc3-io.cpp: Update to match tutorial text.
	* doc/tutorial/src/par/fc1-parallel.cpp: Likewise.
	* doc/tutorial/src/par/fc1-serial.cpp: Likewise.
	
2006-08-21  Don McCoy  <don@codesourcery.com>

	* src/vsip/complex.hpp: Added functions to provide names for 
	  the profiler.
	* src/vsip/impl/expr_ops_info.hpp: Renamed expr_ops_per_point.hpp.
	  Added reduction to create tags for use by the profiler.  Added
	  some operation counts for unary and ternary operators.
	* src/vsip/impl/expr_operations.hpp: Added functions to provide 
	  names for the profiler.
	* src/vsip/impl/sal/eval_elementwise.hpp: Updated names.
	* src/vsip/impl/vmmul.hpp: Updated names.
	* src/vsip/impl/eval_dense_expr.hpp: Added functions to provide 
	  names for the profiler.
	* src/vsip/impl/simd/expr_evaluator.hpp: Likewise.
	* src/vsip/impl/simd/eval-generic.hpp: Likewise.
	* src/vsip/impl/fns_elementwise.hpp: Likewise.
	* src/vsip/impl/ipp.hpp: Updated names.
	* src/vsip/impl/expr_ops_per_point.hpp: Renamed expr_ops_info. 
	* src/vsip/impl/fns_userelt.hpp: Added generic functor
	  names unary, binary and ternary for user-defined functions.
	* src/vsip/impl/expr_serial_dispatch.hpp: Extended profile
	  policy to provided an expression tag and operations count
	  to the profiler.
	* src/vsip/impl/expr_serial_evaluator.hpp: Updated names.
	* src/vsip/selgen.hpp: Added functions to provide names for 
	  the profiler.
	* tests/expr_ops_per_point.cpp: Renamed to...
	* tests/expr_ops_info.cpp: ...this.  Added tests for 
	  expression tags.
	* tests/GNUmakefile.inc.in: Modified to allow building tests 
	  individually by invoking it with 'make tests/*'.  

2006-08-17  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/simd/simd.hpp: Add support for complex types, fma.
	* src/vsip/impl/simd/expr_evaluator.hpp: Optimizations.
	* src/vsip/impl/simd/expr_iterator.hpp: Add support for ternary fma.
	* tests/QMTest/vpp_database.py: Mask '.svn' directories.

2006-08-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/expr_serial_dispatch_fwd.hpp (Serial_dispatch_helper):
	  Add ProfileP template parameter for profiling policy.
	  (Serial_dispatch): New class, front-end to Serial_dispatch_helper.
	* src/vsip/impl/expr_serial_evaluator.hpp (Serial_dispatch_helper):
	  Use profiling policy to determine if profiling, coverage, or
	  nothing is done when calling an evaluator.
	* src/vsip/impl/dispatch-assign.hpp: Use Serial_dispatch frontend.
	* src/vsip/impl/eval_dense_expr.hpp: Likewise, add name() member
	  functions to Serial_expr_evaluator specializations.
	* src/vsip/impl/sal/eval_elementwise.hpp: Add name() member
	  functions to Serial_expr_evaluator sepcializations.
	* src/vsip/impl/expr_serial_dispatch.hpp: Likewise.
	* src/vsip/impl/ipp.hpp: Likewise

2006-08-13  Don McCoy  <don@codesourcery.com>

	* src/vsip/initfin.cpp: Modified to hand off command-line arguments 
	  to the new object made for handling profiler options.  These allow 
	  the profiler to be enabled without altering an existing program.
	* src/vsip/profile.cpp: New definition of Profiler_options class.
	* src/vsip/initfin.hpp: New static member to hold pointer to options
	  object.
	* src/vsip/impl/profile.hpp: New declaration for Profiler_options
	  class.

2006-08-13  Don McCoy  <don@codesourcery.com>

	* scripts/config: Changed --enable-profile-timer to --enable-timer.
	* src/vsip/impl/signal-iir.hpp: Added capability to disable profiling 
	  and the performance API.
	* src/vsip/impl/signal-conv.hpp: Likewise.
	* src/vsip/impl/signal-corr.hpp: Likewise.
	* src/vsip/impl/signal-conv-ipp.hpp: Likewise.
	* src/vsip/impl/signal-conv-ext.hpp: Likewise.
	* src/vsip/impl/signal-corr-ext.hpp: Likewise.
	* src/vsip/impl/fft.hpp: Likewise.
	* src/vsip/impl/signal-corr-opt.hpp: Likewise.
	* src/vsip/impl/signal-fir.hpp: Likewise.
	* src/vsip/impl/signal-conv-sal.hpp: Likewise.
	* src/vsip/impl/profile.hpp: Likewise.
	* src/vsip/impl/matvec.hpp: Likewise.
	* configure.ac: Added options for enabling/disabling profiling in 
	  total or in part.  Default is disabled.  The setting is displayed
	  in the summary.  Also made a minor change to allow 
	  --disable-timer to work as expected.
	* doc/quickstart/quickstart.xml:  Changed --enable-profile-timer to 
	  --enable-timer.
	* examples/mercury/mcoe-setup.sh: Likewise.

2006-08-08  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/mpi_alltoall.cpp: Rename file to ...
	* benchmarks/alltoall_mpi.cpp: ... this.
	* benchmarks/copy_mpi.cpp: New file, measure MPI point-to-point
	  data copy.
	
2006-08-08  Don McCoy  <don@codesourcery.com>

	* src/vsip/profile.cpp: Changed 'mflops' to 'mops'.
	* src/vsip/impl/fft/util.hpp: Updated tag(s) used in profiling.
	* src/vsip/impl/signal-iir.hpp: Added profiling code.
	* src/vsip/impl/signal-conv.hpp: Updated profiling code.
	* src/vsip/impl/signal-corr.hpp: Likewise.
	* src/vsip/impl/ops_info.hpp: Added descriptive tags for profiling.
	* src/vsip/impl/fft.hpp: Changed 'mflops' to 'mops'.
	* src/vsip/impl/signal-fir.hpp: Added profiling code.
	* src/vsip/impl/profile.hpp: Modified to allow use of strings in
	  addition to char pointers in the Scope_event class.
	* src/vsip/impl/matvec.hpp: Added profiling code.
	* apps/sarsim/sarsim.hpp: Changed 'mflops' to 'mops'.
	* benchmarks/dist_vmul.cpp: Corrected missing impl:: on op counts.
	* benchmarks/GNUmakefile.inc.in: Omit building mpi benchmarks when
	  not compiled with mpi.
	* examples/fft.cpp: Changed 'mflops' to 'mops'.

2006-08-07  Jules Bergmann  <jules@codesourcery.com>

	Update SIMD handling to allow both generic functions and loop fusion.
	* src/vsip/impl/expr_serial_dispatch_fwd.hpp (Simd_loop_fusion_tag):
	  New dispatch tag for SIMD loop fusion.
	* src/vsip/impl/simd/expr_evaluator.hpp: Use new Simd_loop_fusion_tag.
	* src/vsip/impl/expr_serial_dispatch.hpp: Update to include both
	  SIMD loop fusion and SIMD generic routines.
	* src/vsip/impl/expr_serial_evaluator.hpp: Add Simd_loop_fusion_tag.
	  Rename Simd_tag to Simd_builtin_tag.
	* configure.ac: Rename '--with-simd=WHAT' option to
	  '--with-builtin-simd-routines=WHAT'.  Add new option for
	  SIMD loop fusion '--enable-simd-loop-fusion'.
	* examples/mercury/mcoe-setup.sh: Update to control SIMD generic
	  routines and SIMD loop fusion.

	Update SIMD support for Altivec, add new routines for logic ops
	* src/vsip/impl/simd/simd.hpp: Enable altivec traits classes
	  when using GreenHills.  Add altivec classes for signed char,
	  int, and float.  Add SSE traits classes for signed char and int.
	  Add functions for binary operations and packing.
	* src/vsip/impl/simd/vadd.hpp: New file, generic SIMD addition.
	* src/vsip/impl/simd/vadd.cpp: New file, generic SIMD addition.
	* src/vsip/impl/simd/vgt.hpp: New file, generic SIMD gt().
	* src/vsip/impl/simd/vgt.cpp: New file, generic SIMD gt().
	* src/vsip/impl/simd/vlogic.hpp: New file, generic SIMD logic ops.
	* src/vsip/impl/simd/vlogic.cpp: New file, generic SIMD logic ops.
	* src/vsip/impl/simd/eval-generic.hpp: Dispatch to new add, gt,
	  and logic operations.
	* src/vsip/GNUmakefile.inc.in: Add cpp files for new generic SIMD ops.
	* tests/coverage_common.hpp: Support boolean data.
	* tests/coverage_binary.cpp: Add coverage for bxor, land, lor, lxor.
	* tests/coverage_unary.cpp: Add coverage for bnot, lnot.

	Optimize distributed get() performance.
	* src/vsip/impl/distributed-block.hpp: Optimize get() to avoid
	  communication when program is single-processor, or when block
	  is globally replicated.
	* src/vsip/map_fwd.hpp: Add forward defs for Replicated_map.

	Misc fixes and updates.
	* src/vsip/impl/profile.hpp: Add is_zero() function to timer
	  policies.
	* src/vsip/profile.cpp: Use is_zero().
	* src/vsip/impl/fft/util.hpp: Fix Wall warning
	* src/vsip_csl/GNUmakefile.inc.in: Revert change that removed
	  src_vsip_csl_cxx_sources from cxx_sources.  Necessary for
	  dependencies.
	* vendor/GNUmakefile.inc.in: Un-revert change to FFTW rules.
	* benchmarks/create_map.hpp: New file, common functions to create
	  maps for benchmarks.
	* benchmarks/vmul.cpp: Add coverage for scalar-vector multiply
	  when scalar is a literal value and when constant is generated
	  with 'get()' from coeff view.

2006-08-04  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/expr_ops_per_point.hpp: New file, expression
	  template reduction to determine the number of ops/point.
	* src/vsip/impl/metaprogramming.hpp (Int_value): Make value visible.
	* tests/expr_ops_per_point.cpp: New file, unit test for
	  Expr_ops_per_point reduction.

2006-07-31  Jules Bergmann  <jules@codesourcery.com>

	* vendor/GNUmakefile.inc.in: Add LAPACK related libraries to
	  $(libs).  Add missing dependencies.
	* configure.ac: Add missing AC_SUBST variables for new
	  vendor/GNUmakefile.inc.in.
	
2006-07-28  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/simd/expr_iterator.hpp: Fix template parameter
	  usage for Unary_access_traits.

2006-07-27  Assem Salama <assem@codesourcery.com>

	* src/vsip_csl/matlab_file.cpp: New file. Implements some functions of
	  Matlab_file class.
	* src/vsip_csl/matlab_file.hpp: New file. This is the defintion of
	  Matlab_file class. This class implements a higher level interface
	  to Matlab_bin_formatter using iterators.
	* src/vsip_csl/GNUmakefile.inc.in: Added matlab_file.cpp to sources.
	* tests/matlab_iterator.cpp: New file. This file tests the Matlab
	  file iterator interface
	* tests/matlab_bin_file.cpp: Made include for test.hpp point to
	  vsip_csl one.

2006-07-27  Assem Salama <assem@codesourcery.com>

	* vendor/GNUmakefile.inc.in: Changed style of makefile to make it more
	  readable and remove some repitition.
	* configure.ac: Added option for simple-builtin.
	* vendor/clapack/SRC/make.inc.in: Changed library to names to
	  lib<name>.
	* vendor/clapack/blas/SRC/Makefile: Changed name to GNUmakefile.in
	* vendor/clapack/blas/SRC/GNUmakfile.in: This used to called Makefile.
	  Changed xerbla.o to xerbla_new.o

2006-07-27  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/simd/simd.hpp: Only define Simd_traits<double>
	when SSE2 is enabled.
	* src/vsip/impl/simd/expr_evaluator.hpp: Fix ct_valid check
	to detect block immutability (in terms of DDA).

2006-07-27  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in (subdirs): Move benchmarks and benchmarks/hpec_kernel
	  subdirectories to end of list.  This way the see $(libs) after
	  it has been set by src/vsip and src/vsip_csl.

2006-07-26  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/simd/simd.hpp: Make load() argument const, add div().
	* src/vsip/impl/simd/expr_iterator.hpp: New file.
	* src/vsip/impl/simd/expr_evaluator.hpp: New file.
	* src/vsip/impl/expr_serial_dispatch.hpp: Use new evaluator.
	

2006-07-26  Don McCoy  <don@codesourcery.com>

	* doc/tutorial/performance.xml: New section of tutorial covering the use
	  of the profiler and the built in performance API.
	* doc/tutorial/tutorial.xml: Adjusted to include performance chapter.
	* doc/tutorial/src/profile_trace.txt: Inlined example of new chapter.
	* doc/tutorial/src/profile_example.cpp: Likewise.
	* doc/tutorial/src/profile_fft1.txt: Likewise.
	* doc/tutorial/src/profile_output.txt: Likewise.
	* doc/tutorial/src/profile_fft2.txt: Likewise.

2006-07-23  Don McCoy  <don@codesourcery.com>

	* src/vsip/profile.cpp: Changed event() function to optionally take 
	  a timestamp as an argument.  The default creates a zero timestamp
          indicating it should generate its own timestamp.
	* src/vsip/impl/fft/util.hpp: Added class to build descriptive strings
	  from a mixture of normal parameters and template parameters.
	* src/vsip/impl/fft.hpp: Unified some functionality by combining the
	  use of the timer with a class that better manages event information.
	  Enahanced event tags to include 1) direction, 2) input data type,
	  3) output data type, 4) return mechanism and 5) size.  
	* src/vsip/impl/profile.hpp: Made event tags const in some places and
	  std::strings in others, so that the tag pointers did not have to 
	  persist longer than the object being profiled.  Added class to 
	  store event names and operation counts as well as to manage access 
	  to the timer needed by impl_performance().
	* examples/fft.cpp: Added a demonstration of the impl_performance()
	  interface.  Minor cleanup.

2006-07-23  Jules Bergmann  <jules@codesourcery.com>

	* doc/tutorial/parallel.xml: New file, parallel chapter of
	  tutorial.
	* doc/tutorial/tutorial.xml: Add parallel chapter.
	* doc/tutorial/src/par/fc3-io.cpp: New file, example program
	  for parallel chapter.
	* doc/tutorial/src/par/fc2-fastconv-fragment.hpp: Likewise.
	* doc/tutorial/src/par/fc1-parallel.cpp: Likewise.
	* doc/tutorial/src/par/fc1-serial.cpp: Likewise.
	* doc/tutorial/images/par: New directory for parallel chapter
	  images.
	* doc/tutorial/images/par/fastconv-serial: New file, image for
	  parallel chapter.
	* doc/tutorial/images/par/fastconv-cache.png: Likewise.
	* doc/tutorial/images/par/fastconv-speedup.png: Likewise.
	* doc/tutorial/images/par/fastconv-foreach.png: Likewise.
	* doc/GNUmakefile.inc.in: Copy parallel chapter images.

2006-07-23  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/par-services-none.hpp (par_assign_impl_type):
	  Add missing typedef.
	* src/vsip/impl/sal/fft.cpp (query_layout): Set rtl_in.complex =
	  rtl_out.complex.

2006-07-22  Jules Bergmann  <jules@codesourcery.com>

	New Par_assign framework that makes it easier to plug in
	other parallel assignments.
	* src/vsip/impl/par_assign.hpp: New file, general Par_assign
	  class that is specialized for specific implementation tags.
	* src/vsip/impl/par_assign_blkvec.hpp: New file, implements
	  parallel assignment for special case of block distributed
	  vectors.  Avoids creating type chains (i.e. MPI datatypes).
	* src/vsip/impl/par-chain-assign.hpp: Update to be a Par_assign
	  specialization.
	* src/vsip/impl/map-traits.hpp (Is_block_dist): New map traits
	  class to determine if a particular dimension is block or whole
	  (i.e. only 1 patch per subblock).
	* src/vsip/impl/dispatch-assign.hpp: Use new Par_assign class.
	  Identify when block-vector assignment can be done.
	* src/vsip/impl/par-expr.hpp: Likewise.
	* src/vsip/impl/setup-assign.hpp: Likewise.
	* tests/parallel/block.cpp: Likewise.
	* src/vsip/impl/par-services-mpi.hpp (par_assign_impl_type):
	  Define preferred Par_assign ImplTag.
	* src/vsip/map.hpp (Is_block_dist): Provide specialization for Map.
	* src/vsip/vector.hpp: Move par-chain-assign.hpp include to
	  dispatch-assign.hpp.
	* src/vsip/matrix.hpp: Likewise.
	* src/vsip/tensor.hpp: Likewise.

	Bug fixes.
	* src/vsip/impl/sal/elementwise.hpp: Fix bug in ZVS_SYN wrapper
	  (used for split-complex synthetic wrappers like scalar-vector add).
	* src/vsip/impl/eval_dense_expr.hpp: Fix handling of Dense blocks
	  with a Local_or_global_map.
	* src/vsip/impl/expr_serial_evaluator.hpp: Fix Copy_tag
	  evaluator to request 1-dim Ext_data access.
	
	* src/vsip/impl/adjust-layout.hpp (Adjust_layout_pack): New
	  class to adjust layout by setting pack_type.
	* benchmarks/dist_vmul.cpp: New benchmark, covers distributed
	  vector-multiply including scatter, gather costs.
	* benchmarks/copy.cpp: Update to test Par_assign class performance.
	* benchmarks/loop.hpp: Add capability to skip calibration.
	* benchmarks/vmul.cpp: Move setup_assign outside of timer.
	* benchmarks/main.cpp: Add options to skip calibration (-nocal)
	  and pause before running (-pause).
	* examples/fft.cpp: Fix Wall warning.
	
2006-07-21  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/GNUmakefile.inc.in: Add xml dependencies and convenience targets.

2006-07-21  Jules Bergmann  <jules@codesourcery.com>

	* scripts/package.py: Use SVN instead of CVS.
	* scripts/release.sh: Likewise.

2006-07-21  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/par-services-none.hpp (default_communicator):
	  Return result by reference.
	* src/vsip_csl/GNUmakefile.inc.in (install): Add missing dependency
	  on lib/libvsip_csl.a.

2006-07-21  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/ops_info.hpp: Moved from benchmarks/ directory.
	* benchmarks/*.cpp: Adjusted for above, accounting for the
	  new location and that it is now in the impl namespace.
	* benchmarks/hpec_kernel/*.cpp: Likewise.
	* benchmarks/benchmarks.hpp: Likewise.  Also added a definition
	  of Ops_info for building against non-Sourcery libraries.
	* benchmarks/prod_var.cpp: Fixed ref_matvec include to point
	  to new location in vsip_csl/.  Dis-ambiguated a call to
	  prod() and dot() by adding the vsip:: qualifier.
	* benchmarks/fft_ext_ipp.cpp: Likewise for test.hpp
	* benchmarks/maxval.cpp: Likewise.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: Fixed to include
	  vsip library using -L and -l.

2006-07-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/ipp/fft.cpp: Make impl namespace explicit to
	  deconfuse ICC 9.1, which thought it was a class.
	* src/vsip/impl/eval_dense_expr.hpp: Copy functor when redimensioning
	  a unary expr block (fixes examples/png.cpp build failure).
	
2006-07-20  Jules Bergmann  <jules@codesourcery.com>

	Optimize comparison of maps for equivalence.
	* src/vsip/impl/block-traits.hpp (Map_equal): Add template
	  parameter to account for dimension of applied maps being compared.
	  (map_equal): likewise.
	  (Is_par_same_map): likewise.
	* src/vsip/impl/vmmul.hpp (Is_par_same_map): Likewise.
	* src/vsip/impl/expr_binary_block.hpp (Is_par_same_map): Likewise.
	* src/vsip/impl/replicated_map.hpp (Map_equal): Likewise.
	* src/vsip/impl/expr_scalar_block.hpp (Is_par_same_map): Likewise.
	* src/vsip/impl/par-foreach.hpp (Foreach_vector): Likewise.
	* src/vsip/impl/local_map.hpp (Map_equal): Likewise.
	* src/vsip/impl/expr_ternary_block.hpp (Is_par_same_map): Likewise.
	* src/vsip/impl/global_map.hpp (Map_equal): Likewise.
	* src/vsip/impl/expr_unary_block.hpp (Is_par_same_map): Likewise.
	* src/vsip/map.hpp (Map_data): New reference-counted class, used 
	  by Map to store data.  Allows maps to share common data,
	  helps optimize equality check for maps (when they are equal
	  and have the same Map_data).  
	  (map_equiv): Optimize map equivalence checking.
	  (Map_equal): Take applied map dimension into account.

	Optimizations for parallel assignment.
	* src/vsip/impl/par-services.hpp: Return communicator by reference.
	* src/vsip/impl/dispatch-assign.hpp: Optimize handling of simple
	  parallel expressions to avoid view creation and reference
	  counting overhead.
	* src/vsip/impl/par-expr.hpp (par_expr_simple): Remove empty
	  subblock check, it isn't necessary and it slows execution
	  when not empy.
	* src/vsip/impl/par-chain-assign.hpp: Store communicator by
	  reference.  Optimize exec_send_list, exec_recv_list to assume
	  that each processor already has only 1 or 0 entries in
	  command lists.
	* src/vsip/impl/par-services-mpi.hpp: Return communicators by
	  reference.
	
	* src/vsip/dense.hpp (get_local_block): Inline.
	* src/vsip/impl/setup-assign.hpp: Update dispatch to mirror
	  dispatch-assign.hpp.
	* src/vsip/impl/sal/fft.cpp (VSIP_IMPL_PROVIDE): Add space before
	  template closing '>' in macro (work around for ICC bug).
	* src/vsip/impl/sal/elementwise.hpp: Add synthetic vsadd
	  (scalar-vector add) and vsmul (scalar-vector multiply)
	  wrappers for complex<float> and complex<double>.
	* src/vsip/impl/sal/eval_elementwise.hpp: Use them.
	* src/vsip/impl/extdata.hpp (mem_required, xfer_required): Fix to
	  take flexible access into account.
	  (xfer_required): New helper function.
	* src/vsip/impl/par-support.hpp (global_from_local_index):
	  Fix bug, should get subblock from map, not block.
	* src/vsip/impl/simd/eval-generic.hpp: Fix bug, using wrong
	  evaluator tag: was Intel_ipp_tag, should be Simd_tag.
	* src/vsip/impl/subblock.hpp (Sliced2_block_base::impl_data):
	  Fix syntax error.
	* src/vsip/impl/fast-transpose.hpp: Avoid using non-portable
	  GCC vector intrinsics.
	* src/vsip/impl/ipp.cpp: Guard execution of IPP calls with
	  (length > 0).  IPP does not like 0 length operations.
	* tests/extdata-runtime.cpp: Add coverage to test mem_required
	  and xfer_required for flexible access.
	* benchmarks/copy.cpp: Extend to cover parallel copy cases.
	* benchmarks/vmul.cpp: Extend to cover distributed data cases.
	* benchmarks/vmul_sal.cpp: Fix strides for zvzsmlx.
	
2006-07-19  Don McCoy  <don@codesourcery.com>

	* configure.ac: Removed path to vendor/fftw/lib from LDFLAGS as these
	  are now copied over to the lib/ directory.
	* benchmarks/GNUmakefile.inc.in: Updated makefile to specify vsip
	  library using -L and -l (as is done in examples/).

2006-07-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/layout.hpp: Throw exception if using get_imag_ptr
	  on a non-complex pointer.
	* src/vsip_csl/test.hpp: Use YYYY-MM-DD format for date.  
	  (test_assert): Qualify namespace for test_assert_fail function.
	* tests/matlab_bin_file_test.cpp: Fix broken include.
	
2006-07-15  Assem Salama <assem@codesourcery.com>
	
	* tests/matlab_bin_file_test.cpp: New file. This file tests the low
	  level Matlab_bin_formatter interface.
	* src/vsip/tensor.hpp: Added the extent method to operator on a tensor
	  view.
	* src/vsip/impl/layout.hpp: Added get_real_ptr and get_imag_ptr.
	* src/vsip_csl/matlab_bin_formatter.hpp: Fixed compile error.

2006-07-14  Don McCoy  <don@codesourcery.com>
	
	* src/vsip/impl/profile.hpp: Renamed Scope_enable class to Profile.
	* src/vsip_csl/error_db.hpp:  Moved from tests directory for use
	  with benchmarking and examples as well.
	* src/vsip_csl/load_view.hpp: Likewise.
	* src/vsip_csl/output.hpp: Likewise.
	* src/vsip_csl/ref_conv.hpp: Likewise.
	* src/vsip_csl/ref_corr.hpp: Likewise.
	* src/vsip_csl/ref_dft.hpp: Likewise.
	* src/vsip_csl/ref_matvec.hpp: Likewise.
	* src/vsip_csl/save_view.hpp: Likewise.
	* src/vsip_csl/test.hpp: Likewise.
	* src/vsip_csl/test-precision.hpp: Likewise.
	* tests/*.cpp: Updated to use headers in src/vsip_csl/ and to
	  use the 'vsip_csl' namespace.
	* tests/parallel/*.cpp: Likewise.
	* tests/regressions/*.cpp: Likewise.
	* tests/solver-common.hpp: Updated to specify vsip_csl:: for
	  Precision_traits<>.  Moved compare_view() to...
	* tests/solver-svd.cpp: here.
	* vendor/GNUmakefile.inc.in: Fixed error in cleaning FFTW.
	* benchmarks/hpec_kernel/svd.cpp: Corrected path to 
	  vsip_csl/test-precision.hpp.
	* examples/fft.cpp: Added comments, improved readability.
	* examples/GNUmakefile.inc.in: Added a 'clean' target.

2006-07-12  Don McCoy  <don@codesourcery.com>

	* src/vsip/profile.cpp: Modified the event() function to store the 
	  'value' when in 'accumulate' mode.
	* src/vsip/impl/ops_info.hpp: Copied from benchmarks directory so that 
	  it could be used for profiling function calls.
	* src/vsip/impl/signal-conv.hpp: Added call to log events when in the 
	  various operator() functions.
	* src/vsip/impl/signal-corr.hpp: Likewise.
	* src/vsip/impl/fft.hpp: Likewise.
	* src/vsip/impl/profile.hpp: Added third member to Accume_entry 
	  struct in order to store operation count (passed in through the
	  event class through the 'value' parameter).  Added Scope_enable
	  class as an external interface for enabling the profilier.
	* examples/fft.cpp: New file.  Demonstrates profiling capability
	  for a simple fft.
	* examples/GNUmakefile.inc.in: Simplified build targets so that
	  it would accept 'make examples' in order to build all of them.
	  It also will build any .cpp file dropped into that directory, 
	  without having to explicitly add the new target.

2006-07-11  Assem Salama <assem@codesourcery.com>
	
	* src/vsip_csl/matlab.hpp: New file. This file has commonly used types
	  and structures used in reading in Matlab .mat files.
	* src/vsip_csl/matlab_bin_formatter.hpp: New file. This file imlements
	  << and >> operators for Matlab .mat files.
	* src/vsip_csl/matlab_text_formatter.hpp: New file. This file
	  implements << operators for Matlab .m files.

2006-06-11  Jules Bergmann  <jules@codesourcery.com>

	(Applied Stefan's 6/14 patch for FFTW build cleanup)
	* configure.ac: Copy fftw3.h into src when using builtin fft.
	  Remove unused build_fftw3 variable.
	* vendor/GNUmakefile.inc.in: Copy fftw3 libraries into libs
	  directory.  Install fftw3.h from src directory.
	
2006-07-07  Don McCoy  <don@codesourcery.com>

	* benchmarks/GNUmakefile.inc.in: Renamed 'bench' target to 'benchmarks'.  Cleaned
	  up the section that removes tests with missing dependencies.
	* benchmarks/make.standalone: Added functionality from make.standalone from
	  the benchmarks/hpec_kernel/ subdirectory.  Added 'benchmarks' and 'hpec_kernel' 
	  targets for consistency with targets in GNUmakefiles.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in:  Added 'hpec_kernel' target.
	* benchmarks/hpec_kernel/make.standalone: Removed.
	* benchmarks/hpec_kernel/firbank.cpp: Used helper class of Fir objects to 
	  make memory allocation exception-safe.  Added comments.
	* src/vsip_csl/output.hpp: Added operator<< overloads for vsip::impl::Length
	  and vsip::impl::Index.
	* benchmarks/conv.cpp: Repointed to headers in src/vsip_csl/ rather than tests/.
	* benchmarks/copy.cpp: Likewise.
	* benchmarks/corr.cpp: Likewise.
	* benchmarks/dot.cpp: Likewise.
	* benchmarks/fftm.cpp: Likewise.
	* benchmarks/fir.cpp: Likewise.
	* benchmarks/mcopy.cpp: Likewise.
	* benchmarks/mcopy_ipp.cpp: Likewise.
	* benchmarks/mpi_alltoall.cpp: Likewise.
	* benchmarks/prod.cpp: Likewise.
	* benchmarks/prod_var.cpp: Likewise.
	* benchmarks/qrd.cpp: Likewise.  Also provided third template parameter for
	  vsip::impl::Qrd_impl (it used to default to Lapack).
	* benchmarks/sumval.cpp: Likewise.
	* benchmarks/vmmul.cpp: Likewise.
	* benchmarks/vmul_c.cpp: Likewise.

2006-06-16  Don McCoy  <don@codesourcery.com>

	* benchmarks/hpec_kernel/cfar.cpp: Reorganized such that the three
	  different algorithms are now partially specialized base classes.
	  This eliminates some redundant code and helps highlight the 
	  important parts of the benchmark.  Fixed the verification routine 
	  to work in serial as well as parallel.  Changed the array holding 
	  the number of targets found in each range cell to a Vector to
	  avoid a potential memory leak.  Other minor cleanup.

2006-06-16  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip_csl/png.hpp: New file.
	* src/vsip_csl/png.cpp: New file.
	* src/vsip_csl/GNUmakefile.inc.in: Add png.cpp.
	* examples/png.cpp: New file.
	* examples/GNUmakefile.inc.in: Add png.cpp demo.

2006-06-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/block-traits.hpp (Is_leaf_block): New trait
	  to determine if block is a leaf in an expression
	* src/vsip/impl/eval_dense_expr.hpp (Redim_block::impl_stride):
	  Fix bug when original block is 3-dimensional.
	* src/vsip/impl/ipp.cpp: Add wrappers for IPP abs, square, square-root,
	  and exponent.
	* src/vsip/impl/ipp.hpp: Add dispatch for square and square-root.
	  Explicitly request 1-dim Ext_data access to handle multi-dim
	  expressions from eval_dense_expr.
	* src/vsip/impl/metaprogramming.hpp (Type_if): New struct,
	  forwards type only if bool parameter is true.  Used for SFINAE.
	* src/vsip/impl/sal/elementwise.hpp: Prefix coverage labels with
	  "SAL_".
	* src/vsip/impl/sal/eval_elementwise.hpp: Use Type_if and
	  Is_leaf_block to enable evaluators.  This disambiguates the
	  (VV)V and V(VV) evaluators for expressions like (VV)(VV).
	  Explicitly request 1-dim Ext_data access to handle multi-dim
	  expressions from eval_dense_expr.
	* src/vsip/impl/sal/eval_util.hpp (Ext_wrapper): Add layout
	  policy template parameter.
	
2006-06-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/sal/elementwise.hpp: Fix bug with synthetic
	  complex scalar-vector multiply.
	* tests/coverage_binary.cpp: Extend coverage to catch bug.
	* tests/coverage_common.hpp: Likewise.

2006-06-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/domain-utils.hpp (next): Add dimension-order template
	  parameter.  Add overload so that existing users of next() continue
	  to work.
	* tests/index_traversal.cpp: New file, tests for next() with
	  different dimension orders.

2006-06-14  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Include <complex>, not <cmath>, in complex test.
	* src/vsip/impl/setup-assign.hpp: Fix function return type.

2006-06-13  Stefan Seefeld  <stefan@codesourcery.com>

	* vendor/GNUmakefile.inc.in: Tentatively remove symbolic link
	before (re-)generating it.

2006-06-12  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/context-installed.pre.in: Adjust to changes in the 
	testing harness.

2006-06-09  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/hpec_kernel/cfar.cpp: Fix cfar_verify to work in
	  parallel: have each processor verify their own results, then use
	  parallel reduction to get total count.  Fix vector and hybrid
	  versions to process local view only.
	* benchmarks/hpec_kernel/cfar_c.cpp: Likewise.

2006-06-08  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/hpec_kernel/cfar.cpp (t_cfar_by_hybrid): New
	  implementation of CFAR algorithm using GCC vector extensions.
	  to process multiple vectors in parallel.
	* benchmarks/hpec_kernel/cfar_c.cpp: New file, C implementations
	  of CFAR (plain elementwise impl, and SIMD impl).
	
2006-06-08  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/hpec_kernel/cfar.cpp:
	  (t_cfar_base): Raise mu to 100, change to error on false-postive,
	  false-negative OK.
	  (t_cfar_by_slice): Change multi-op expressions to +=/-= form.
	  Break large indexbool expression into smaller expressions for
	  dispatch.  Make cube dim-order a template parameter, use
	  <2, 0, 1> as default.
	  (t_cfar_by_vector): Reset sum to zero for each vector, reuse
	  single vector from cpow for storing sq, use vec.get(i) instead
	  of vec(i).

2006-06-08  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/vmul.cpp: Add documentation for benchmark cases.
	* src/vsip/impl/subblock.hpp: Fix bug in how dimension-order for
	  a Sliced_block is determined.
	
2006-06-08  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--disable-eval-dense-expr): New option to disable
	  evaluation of dense matrix and tensor expressions as vector
	  expressions.
	* src/vsip/impl/adjust-layout.hpp (Adjust_layout_dim): New class
	  to adjust the dimensiion of a layout policy.
	* src/vsip/impl/dispatch-assign.hpp: Remove hard-coded loop
	  fusion for tensor expression, use Serial_dispatch_helper.
	* src/vsip/impl/eval_dense_expr.hpp: New file, evaluator that
	  transforms dense matrix and tensor expressions into vector
	  expressions, that can then be handled by math library
	  evaluators from IPP, SAL, etc.
	* src/vsip/impl/expr_serial_dispatch.hpp: Move declarations
	  for LibraryTagList and Serial_dispatch_helper to ...
	* src/vsip/impl/expr_serial_dispatch_fwd.hpp: New file, ... here.
	* src/vsip/impl/expr_serial_evaluator.hpp: Add loop fusion
	  evaluator for tensor expressions.
	* src/vsip/impl/metaprogramming.hpp (Bool_type): Add value member.
	
2006-06-08  Don McCoy  <don@codesourcery.com>

	* benchmarks/hpec_kernel/cfar.cpp: Added new algorithm that
	  processes the data cube one range-vector at a time.  Corrected
	  a bug in the verification code that prevented it from checking all 
	  targets that it found.  Adjusted the sensitivity (mu) constant and
	  the distribution of the background noise in order to avoid missing
	  or finding extra targets.
	* src/vsip_csl/test-precision.hpp: moved from tests directory.

2006-06-06  Stefan Seefeld  <stefan@codesourcery.com>

	* synopsis.py.in: Add missing INT_CPPFLAGS variable.

2006-06-05  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/vmul_sal.cpp: Add benchmark case for SAL
	  complex svmul (calls cvcsmlx and zvzsmlx).
	* src/vsip/impl/coverage.hpp: Fix broken ifdef.
	* src/vsip/impl/sal/eval_elementwise.hpp: Add evaluators for
	  bop2(A, bop1(B, C)) that map to bop2(bop1(B, C), A).  Fixes
	  issue #117.
	
2006-06-05  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Moved some build logic from here...
	* vendor/GNUmakefile.inc.in: ...to here.
	* GNUmakefile.in: Define abs_srcdir.

2006-06-02  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/QMTest/vpp_database.py: Remove DejaGNU dependency.
	* tests/context.in: Likewise.
	* src/vsip/impl/static_assert.hpp: Work around VC++ bug.
	* src/vsip/impl/domain-utils.hpp: Work arounf VC++ bug.
	* configure.ac: Detect png.h.

2006-06-01  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/conv.cpp: Add complex cases.
	* benchmarks/maxval.cpp: New file, benchmark for maxval reduction.
	* benchmarks/sumval.cpp: Add benchmark case using random data
	* benchmarks/vma.cpp: New file, benchmark for multiply-add.
	* benchmarks/vma_sal.cpp: New file, benchmark for SAL multiply-add.
	* benchmarks/vmagsq.cpp: New file, benchmark for magsq() fcn.
	* benchmarks/vmul_c.cpp: Update to work when Dense stores complex
	  split-format.
	* benchmarks/vmul_sal.cpp: Likewise.
	
	* src/vsip/impl/block-traits.hpp (Is_scalar_block): New trait
	  to detect Scalar_blocks.
	* src/vsip/impl/coverage.hpp: New file, macros for producing
	  coverage information.
	* src/vsip/impl/dispatch-assign.hpp: Remove vector copy logic.
	* src/vsip/impl/expr_scalar_block.hpp (Is_scalar_block): Specialize
	  for Scalar_block.
	* src/vsip/impl/expr_serial_dispatch.hpp: Add Copy_tag.
	* src/vsip/impl/expr_serial_evaluator.hpp: Add evaluator to
	  replace vector copy logic removed from dispatch-assign.hpp.
	  Remove general evaluator for Mercury_sal_tag (unnecessary due to
	  general general evaluator, plus competes with copy evaluator
	  for Mercury).
	* src/vsip/impl/extdata.hpp: Make stride() and size() member functions
	  const.  Add const variant of data() member function.
	* src/vsip/impl/fns_scalar.hpp (recip, rsqrt): Divide from T(1)
	  instead of 1.
	* src/vsip/impl/reductions-idx.hpp: Move reduction functors into
	  reduction_functors file.  Add Mercury_sal_tag to dispatch lists.
	* src/vsip/impl/reductions.hpp: Likewise.  Generalize parallel
	  evaluators to more efficiently handle Global_maps.
	* src/vsip/impl/reductions_functors.hpp: New file, reduction functors
	  from reductions.hpp and reductions-idx.hpp.  Makes it easier to
	  dispatch reductions to other libraries (such as SAL).
	* src/vsip/impl/sal.cpp: Remove sal wrapper functions.  Replace
	  with new wrappers in sal/
	* src/vsip/impl/sal.hpp: Move sal wrapper function decls and
	  inline wrappers to sal/{elementwise,reductions}.hpp.  Move
	  serial expression evaluators to sal/{eval_*}.hpp.
	* src/vsip/impl/sal/bridge_util.hpp: New file.  Utilities so
	  that sal wrapper functions can be convienently overloaded.
	* src/vsip/impl/sal/elementwise.hpp: New file, SAL wrapper
	  functions for element-wise functionality.
	* src/vsip/impl/sal/eval_elementwise.hpp: New file, evaluators
	  for serial elementwise expressions.
	* src/vsip/impl/sal/eval_reductions.hpp: New file, evaluators
	  for reduction functions.
	* src/vsip/impl/sal/eval_util.hpp: New file, common bits
	  for SAL evaluators.
	* src/vsip/impl/sal/reductions.hpp: New file, SAL wrappers for
	  reduction functions.
	* src/vsip/impl/simd/simd.hpp (intptr_t): Add typedef when on
	  mercury (ifdef _MC_EXEC).
	* tests/expr-coverage.cpp: Removed file, replaced with ...
	* tests/coverage_binary.cpp: New file, coverage testing for
	  binary expressions.
	* tests/coverage_comparison.cpp: New file, coverage testing for
	  comparison expressions.
	* tests/coverage_ternary.cpp: New file, coverage testing for
	  ternary expressions.
	* tests/coverage_unary.cpp: New file, coverage testing for
	  unary expressions.
	* tests/coverage_common.hpp: New file, common bits for coverage_
	  tests.

	* examples/mercury/mcoe-setup.sh: Add exception option.  Disable
	  lapack.
	
2006-06-01  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/sal/fft.hpp: Explicitely disable long double support.
	* src/vsip/impl/ipp/fft.hpp: Likewise.

2006-05-31  Mark Mitchell  <mark@codesourcery.com>

	* src/vsip/map.hpp (Map_subdomain::project): Fix typo.
	
	* configure.ac: Create the src/vsip/impl/simd directory.

2006-05-30  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/simd/simd.hpp (Simd_traits::alignment_required):
	  New const static member to indicate of SIMD type requires alignment.
	  (Simd_traits::alignment): New static const member to indicate
	  required SIMD alignment in bytes.
	  (Simd_traits::alignment_of): New static member function that
	  returns alignment of address.  If alignment is 0, address is
	  properly aligned.
	* src/vsip/impl/simd/rscvmul.hpp: Use alignment_required and
	  alignment_of.
	* src/vsip/impl/simd/vmul.hpp: Likewise.

	* VERSIONS (V_1_1): Document tag for 1.1 release.
	* doc/quickstart/quickstart.xml: Fix typos in Mercury configuration
	  notes.
	* scripts/package.py: Disable configuration of lapack when building
	  documentation.
	* scripts/release.sh: Bump version to 1.1.

2006-05-25  Don McCoy  <don@codesourcery.com>

	* benchmarks/hpec-kernel: Removed obsolete directory.
	* benchmarks/loop.hpp: Modified calibration routine to allow
	  it to complete with a wider variety of circumstances.  Removed 
	  class-name qualifier from the m_value() member function 
	  declaration (non-portable).  Removed unreachable 'break' 
	  statements in same function.
	* benchmarks/hpec_kernel/cfar.cpp: New file.  Implements the 
	  HPEC Constant False Alarm Rate Detection kernel-level benchmark.
	* benchmarks/hpec_kernel/firbank.cpp: Fixed an instance where a
	  non-constant value specifies an array size (non-portable).  Also
	  eliminated a sign-change warning on r/wiob_per_point() members and
	  a warning on an initialized, but unused, variable in the ops()
          member function.
	* benchmarks/hpec_kernel/svd.cpp: New file.  Implements the
	  HPEC Singular-Value Decomposition kernel-level benchmark.
	* src/vsip/impl/extdata.hpp: Changed definition of 
	  vsip::impl::cost(Block, LP) to be inlined.  
	* src/vsip_csl/output.hpp: Removed definition to write a Point to a
	  stream.

2006-05-15  Jules Bergmann  <jules@codesourcery.com>
	
	* src/vsip/impl/fft.hpp: Add include for vsip/impl/profile.
	
2006-05-15  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fft.hpp: Add impl_performance() and associated profiler
	functionality.

2006-05-14  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Define appropriate VSIP_IMPL_FFT_USE_ macros when
	  using builtin FFT.
	* src/vsip/signal-window.cpp: Add GHS instantiation pragmas
	  for split-complex.
	* src/vsip/impl/fft/dft.hpp: Wall cleanup (unused parameters).
	* src/vsip/impl/fft/no_fft.hpp: Likewise.
	* src/vsip/impl/fftw3/fft.hpp: Likewise.
	* src/vsip/impl/fftw3/fft_impl.cpp: Likewise.
	* src/vsip/impl/ipp/fft.cpp: Likewise.
	* src/vsip/impl/ipp/fft.hpp: Likewise.
	* src/vsip/impl/sal/solver_svd.hpp: Wall cleanup (unused parameters),
	  remove non-inline/non-template function from header.
	
2006-05-14  Jules Bergmann  <jules@codesourcery.com>

	* README.mcoe: New file, release notes for Mercury/MCOE systems.
	* src/vsip/impl/fftw3/fft_impl.cpp: Fix typo.
	* src/vsip/impl/ipp/fft.cpp (fftm): Use rows/cols passed to
	  by_reference and in_place fftm functions to determine number
	  of FFTs to perform.
	* tests/solver-common.hpp: Add missing include for iostream.
	
	* doc/quickstart/quickstart.xml: Fix missing tag.
	
2006-05-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/rt_extdata.hpp: Fix buggy use of uninitialized value
	  when deallocating storage.
	* src/vsip/impl/fftw3/fft_impl.cpp (queury_layout): Set
	  dimension-order to row-major for 2D and 3D cases.  Add checks
	  for data layout.
	* src/vsip/impl/ipp/fft.cpp: Throw unimplemented exception for
	  2D real->complex and complex->real FFTs.
	* src/vsip/impl/sal/fft.cpp (Fftm_impl): Use rows/cols passed to
	  by_reference and in_place fftm functions to determine number
	  of FFTs to perform.
	* src/vsip/impl/sal/fft.hpp (Is_fftm_avail): Type trait to disable
	  SAL's FFTM evaluator for unsupported types.
	* tests/fft.cpp: General cleanup.  Refactor implementation ifdefs
	  into functionality ifdefs.
	
2006-05-14  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fft/dft.hpp: Add 3D support.
	* src/vsip/impl/fftw3/fft_impl.cpp: Complete 3D support.
	* tests/fft_be.cpp: Add 3D tests.
	* src/vsip/impl/ipp/fft.cpp: Remove debug output.
	* src/vsip/impl/fft/no_fft.cpp: Remove debug output.
	

2006-05-13  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Check if long double is supported before attempting
	  to configure builtin FFT with long doule.  Add missing export
	  for --with-fftw3-cflags..
	* doc/quickstart/quickstart.xml: Bump version to 1.1.  Update
	  Mercury configuration section.
	* examples/mercury/mcoe-setup.sh: Update to include test levels
	  and FFT backends.
	* scripts/config: Prefer -march to -mtune for binary packages
	  (other than 32-bit generic).
	* src/vsip/impl/layout.hpp: Improve runtime layout efficiency.
	* src/vsip/impl/rt_extdata.hpp: Improve runtime layout efficiency.
	* src/vsip/impl/fftw3/fft.cpp: Use VSIP_IMPL_USE_<type> macros
	  to determine types provided by FFTW3. 
	* src/vsip/impl/fftw3/fft_impl.cpp: Use VSIP_IMPL_THROW.
	* src/vsip/impl/sal/solver_qr.hpp: Add missing member initializer
	  for copy constructor.

	* src/vsip/impl/expr_serial_dispatch.hpp: Remove include of iostream.
	* src/vsip/impl/sal.hpp: Likewise.
	* src/vsip/impl/fft/util.hpp: Likewise.
	* src/vsip/impl/fft/workspace.hpp: Likewise.
	
	* benchmarks/fft.cpp: Add cases with different Fft NumberOfTimes
	  template parameter.
	* benchmarks/fftm.cpp: Move NumberOfTimes to global.
	
2006-05-13  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fftw3/fft.hpp: Fix signature of forward-declared create()
	* src/vsip/impl/ipp/fft.hpp: Remove declarators of unused parameters.
	* src/vsip/impl/sal/fft.cpp: Likewise.
	* src/vsip/impl/sal/fft.cpp: Various FFT fixes for cases we hadn't tested 
	before.
	* tests/fft_be.cpp: Fix axis parameter in fftm tests.
	
2006-05-13  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--with-lapack): Make default to probe.
	  (--with-test-level): New option, sets VSIP_IMPL_TEST_LEVEL.
	* src/vsip/matrix.hpp: Dispatch scalar-view operations as
	  expressions, instead of with explicit for loop.
	* src/vsip/signal-window.cpp: Add instantiate pragmas for GreenHills.
	* src/vsip/vector.hpp (VSIP_IMPL_ELEMENTWISE_SCALAR_NOFWD): Undefine
	  macro after use.
	* src/vsip/impl/aligned_allocator.hpp: Include acconfig.hpp.
	* src/vsip/impl/distributed-block.hpp (Block_layout): Specialize
	  for Distributed_block.
	* src/vsip/impl/equal.hpp (almost_equal): Inline function.
	* src/vsip/impl/expr_scalar_block.hpp (Is_par_same_map): Fix
	  specialization for Scalar_blocks to not require const. Unlike
	  other expression blocks, scalar blocks are usually not const.
	* src/vsip/impl/extdata.hpp (is_aligned_to): Inline function.
	* src/vsip/impl/par-expr.hpp (Par_expr_block): Have layout of
	  reorg block better match source block (complex format in
	  particular).
	* src/vsip/impl/solver-covsol.hpp: Use qrd_nosaveq since Q is
	  not needed.
	* src/vsip/impl/solver-llsqsol.hpp: Use Qrd::covsol by default
	  since not all Qrd_impl's do full QR (qrd_saveq).
	* src/vsip/impl/sal/solver_lu.hpp: Use new SAL LUD functions by
	  default.
	* src/vsip/impl/sal/solver_svd.hpp: Fix order of member initializers.
	  Add missing return statements.
	* tests/extdata-output.hpp: Handle Scalar_block.
	* tests/solver-covsol.cpp: Disable tests for unsupported types.
	* tests/solver-llsqsol.cpp: Likewise.
	* tests/solver-lu.cpp: Disable tests for types not supported by
	  SVD since it is used to check LU.
	* tests/solver-qr.cpp: Remove default argument values.
	* tests/solver-svd.cpp: Disable tests for unsupported types and
	  shapes.
	
2006-05-10  Don McCoy  <don@codesourcery.com>

	* doc/quickstart/quickstart.xml: Updated options for --enable-fft= and
	  --with-lapack to reflect recent additions.

2006-05-11  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fftw3/fft.hpp: Forward-declare fftw::create() 
	specializations.
	* src/vsip/impl/fftw3/fft.cpp: Rename classes to avoid ghs confusion.
	* src/vsip/impl/fftw3/fft_impl.cpp: Likewise.

	* tests/fft_be.cpp: Conditionalize the use of the backends on
	their actual availability. Introduce scaling.

	* src/vsip/impl/sal/fft.hpp: Add forward declaration of all
	specializations of sal::create().

2006-05-11  Jules Bergmann  <jules@codesourcery.com>
	
	* scripts/release.sh: Update paths for solaris snapshot.
	
2006-05-11  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/solver_common.hpp: Remove duplicate defns.
	* src/vsip/impl/fft.hpp (Fft::operator()): Use separate template
	  template types for input and output views.

2006-05-11  Jules Bergmann  <jules@codesourcery.com>

	Allow ATLAS to build without Fortran:
	* vendor/GNUmakefile.inc.in: Only build ATLAS' libf77blas if
	  USE_FORTRAN_LAPACK defined.
	* vendor/atlas/configure.ac (--disable-fortran): New option,
	  disables Fortran API checks and disables building of Fortran
	  ATLAS libs through BUILD_FORTRAN_LIBS AC_SUBST.
	* vendor/atlas/Make.ARCH.in (BUILD_FORTRAN_LIBS): Use it.
	* vendor/atlas/makes/Make.bin: Separate targets for non-Fortran
	  and Fortran libs.  Fortran targets disabled by !BUILD_FORTRAN_LIBS.
	
	Update FFTW3 to build for GreenHills/MCOE/PowerPC:
	* vendor/fftw/kernel/cycle.h (getticks): Add tick counter for
	  GreenHills/PowerPC combination.
	* vendor/fftw/libbench2/timer.c
	* vendor/fftw/libbench2/Makefile.in: Make $OBJEXT correct.
	* vendor/fftw/tests/Makefile.in: Likewise.
	* vendor/fftw/tools/Makefile.in: Likewise.
	
2006-05-09  Assem Salama <assem@codesourcery.com>
	
	* src/vsip/impl/solver-qr.hpp: Modified this file to only have the qrd
	  class. The lapack implementation is now in lapack/solver_qr.hpp.
	* src/vsip/impl/solver-svd.hpp: Modified this file to only have the svd
	  class. The lapack implementation is now in lapack/solver_svd.hpp.
	* src/vsip/impl/lapack/solver_svd.hpp: New file. This file now contains
	  lapack implementation of SVD.
	* src/vsip/impl/sal/solver_svd.hpp: New file. This file contatins SAL
	  implementaiton of SVD.
	* src/vsip/impl/solver_common.hpp: Modifed this file to add svd and qr
	  class declarations. Also, added types for Is_qrd_impl_avail and 
	  Is_svd_impl_avail.

2006-05-10  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Increment version number to 1.1 .
	* doc/GNUmakefile.inc.in: Split 'clean' target into 'clean' and
	  'mostlyclean'.

	* src/vsip/impl/sal/fft.hpp: Require minimum block size for SAL
	  backend.

	* scripts/package: Moved to...
	* scripts/package.py: ...this. Replaced '--with-fft' by '--enable-fft'.
	* scripts/config: Likewise.

	* src/vsip/impl/fft.hpp: Let workspace pre-allocate buffers.
	* src/vsip/impl/fft/workspace.hpp: Likewise.
	* src/vsip/impl/fft/dft.hpp: Fix 1D c->r dft computation.
	* tests/fft_be.cpp: Likewise.
	
2006-05-09  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Fix generation of VSIP_IMPL_FFTM3 macro, and add support
	for more FFT backends.
	* src/vsip/impl/fft.hpp: Add support for 2D and M FFTs.
	* src/vsip/impl/fft/workspace.hpp: Likewise.
	* src/vsip/impl/layout.hpp: Likewise.
	* src/vsip/impl/fft/backend.hpp: Likewise.
	* src/vsip/impl/fft/dft.hpp: New backend.
	* src/vsip/impl/fft/no_fft.hpp: New (dummy) backend.
	* src/vsip/impl/ipp/fft.cpp: New backend.
	* src/vsip/impl/fftw3/fft_impl.cpp: Various bugfixes.
	* src/vsip/impl/sal/fft.cpp: Likewise.
	* tests/fft_be.cpp: Provide better test coverage.
	
2006-05-09  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/block-copy.hpp: Remove assertions on complex_format
	  when value_type is non-complex.
	* src/vsip/impl/rt_extdata.hpp: Ignore complex format when
	  checking if non-compelx data can be directly accessed.
	* src/vsip/impl/rt_extdata.hpp: Test accessing non-complex data
	  in split format.

2006-05-08  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Add AC_SUBST for VSIP_IMPL_FFTW3.
	* src/vsip/impl/solver-qr.hpp: Move Qrd_impl into lapack and sal
	  solver_qr files.  Dispatch to appropriate Qrd_impl.
	* src/vsip/impl/solver_common.hpp: Define Is_qrd_impl_avail,
	  Is_svd_impl_avail, and Qrd_impl classes.
	* src/vsip/impl/lapack/solver_qr.hpp: New file, implements Qrd
	  using Lapack (based on old solver-qr.hpp).
	* src/vsip/impl/sal/solver_qr.hpp: New file, implements Qrd using
	  SAL.
	* tests/solver-qr.cpp: Update to use Choose_qrd_impl to avoid
	  testing unimplemented functionality.  Added coverage for
	  non-full-QR cases (i.e. for qrd_nosaveq and qrd_saveq1).
	  Loosened error bounds for SAL Qrd, pending better QR error
	  model.
	
2006-05-07  Don McCoy  <don@codesourcery.com>

	* GNUmakefile.in: Added hpec-kernel and vsip_csl directories 
	  to the makefile include list.
	* benchmarks/firbank.cpp: Moved to benchmarks/hpec-kernel.
	* benchmarks/hpec_kernel/GNUmakefile.inc.in: New file.  Makefile 
	  for use when building from source.
	* benchmarks/hpec_kernel/firbank.cpp: Moved from benchmarks.
	* benchmarks/hpec_kernel/make.standalone: New file.  Stand-alone
	  makefile for post-install use.
	* src/vsip_csl/GNUmakefile.inc.in: New file.  Makefile for building
	  extensions library.  Adds install target for copying vsip_csl
	  headers alongside the standard vsip headers.

2006-05-07  Don McCoy  <don@codesourcery.com>

        * benchmarks/ops_info.hpp: Added operations count information for
          square and divide for complex and real numbers.
        * benchmarks/vdiv.cpp: New file.  Implements virtually the same
          tests as for vmul.cpp - a mix of real and complex inputs, in-
          place, as well as split- vs interleaved-format.

2006-05-07  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/sal/solver_lu.hpp: Corrected an error in the
	  initialization of the reciprocals vector in the copy constructor.

2006-05-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/rt_extdata.hpp: Make data, stride, size, and
	  cost member functions const.
	* tests/rt_extdata.cpp: Extend test coverage to Vector and
	  Tensor views.

2006-05-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/extdata.hpp: Redefine SYNC_IN_NOPRESERVE in
	  terms of SYNC_NOPRESERVE_impl.
	* src/vsip/impl/rt_extdata.hpp: Force copy when SYNC_IN_NOPRESERVE.
	* tests/rt_extdata.cpp: Test SYNC_IN_NOPRESERVE.
	
2006-05-07  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/sal/solver_lu.hpp: Added support for
	  double by using older SAL functions matlud, vrecip and 
	  matfbs.  A compile-time switch enables a choice between
	  the new and the old functions.  The new ones support
	  transpose options (A' x = b) but only work for single-
	  precision values.  When using the old set of functions,
	  an exception will be thrown if the transpose option is
	  anything but 'mat_ntrans'.
	
2006-05-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/rt_extdata.hpp (block_layout): New function,
	  construct Rt_layout corresponding to a block.  Fix bug with
	  hard-coded dimensions.
	* tests/rt_extdata.cpp: Test block_layout.

2006-05-06  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Allow multiple FFT backends.
	* GNUmakefile.in: Likewise.
	* src/vsip/impl/fft.hpp: Enhancements to the FFT dispatcher framework.
	* src/vsip/impl/fft/dft.hpp: New backend.
	* src/vsip/impl/fft/no_fft.hpp: New backend.
	* src/vsip/impl/ipp/fft.hpp: New backend.
	* src/vsip/impl/ipp/fft.cpp: New backend.
	* src/vsip/impl/sal/fft.hpp: Various bug fixes.
	* src/vsip/impl/sal/fft.cpp: Likewise.
	* src/vsip/impl/fftw3/fft.hpp: Likewise.
	* src/vsip/impl/fft/util.hpp: Likewise.
	* src/vsip/impl/fft/workspace.hpp: Likewise.
	* tests/error_db.hpp: Add required header.
	* tests/fft_be.cpp: New FFT backend tests.

2006-05-06  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/block-copy.hpp: Add run-time block copy.
	* src/vsip/impl/extdata.hpp: Fix typo in comment.
	* src/vsip/impl/layout.hpp: Add run-time layout definitions.
	* src/vsip/impl/rt_extdata.hpp: New file, implements run-time
	  external data access (Rt_ext_data).
	* tests/rt_extdata.cpp: New file, unit-tests for rt_extdata.
	
2006-05-02  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Add --with-lapack=acml option to use AMD Core Math
	  Library (ACML) for LAPACK.
	* src/vsip/impl/lapack.hpp: Add support for ACML.
	* src/vsip/impl/solver-cholesky.hpp: Use Choose_solver_impl for
	  dispatch.
	* src/vsip/impl/solver-lu.hpp: Likewise.
	* src/vsip/impl/solver_common.hpp (Choose_solver_impl): New dispatch
	  class for selecting a solver implementation.
	* src/vsip/impl/lapack/solver_cholesky.hpp (Is_lud_impl_avail):
	  Specialize for Lapack tag.
	* src/vsip/impl/lapack/solver_lu.hpp (Is_lud_impl_avail):
	  Specialize for Lapack tag.
	* src/vsip/impl/sal/solver_cholesky.hpp: Fix order of member
	  initialization.
	* src/vsip/impl/lapack/acml_cblas.hpp: New file, cblas wrappers
	  for ACML's dot-product functions.
	* tests/solver-cholesky.cpp: Only test Chold for types implemented
	  by a backend.
	* tests/solver-lu.cpp: Only test LU for types implemented by a
	  backend.
	
2006-05-02  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/GNUmakefile.inc.in: Update libvsip location.
	* benchmarks/dot.cpp: Fix Wall warning.
	* benchmarks/mcopy_ipp.cpp: Likewise.

2006-05-01  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add support for multiple FFT backends.
	* GNUmakefile.in: Likewise.
	* src/vsip/GNUmakefile.inc.in: Likewise.
	* src/vsip/signal-window.cpp: Use new FFT implementation.
	* src/vsip/signal.hpp: Likewise.
	* src/vsip/impl/fft.hpp: New FFT implementation.
	* src/vsip/impl/fft/backend.hpp: Likewise.
	* src/vsip/impl/fft/factory.hpp: Likewise.
	* src/vsip/impl/fft/util.hpp: Likewise.
	* src/vsip/impl/fft/workspace.hpp: Likewise.
	* src/vsip/impl/signal-fft.hpp: Removed old FFT implementation.
	* src/vsip/impl/fft-core.hpp: Likewise.
	* src/vsip/fft-double.cpp: Likewise.
	* src/vsip/fft-float.cpp: Likewise.
	* src/vsip/fft-ldouble.cpp: Likewises.
	* src/vsip/impl/equal.hpp: Add new helper functions.
	* src/vsip/impl/allocation.hpp: Likewise.
	* src/vsip/impl/metaprogramming.hpp: Likewise.
	* src/vsip/impl/fftw3/fft.cpp: New FFTW3 backend.
	* src/vsip/impl/fftw3/fft.hpp: Likewise.
	* src/vsip/impl/fftw3/fft_impl.cpp: Likewise.
	* src/vsip/impl/sal/fft.hpp: Likewise.
	* src/vsip/impl/sal/fft.cpp: Likewise.
	* examples/GNUmakefile.inc.in: Store libraries in $(builddir)/lib.
	* tests/context.in: Likewise.
	
	
2006-04-29  Jules Bergmann  <jules@codesourcery.com>

	* lib/GNUmakefile.inc.in: Remove quotes around for list.
	* scripts/releash.sh (-P): New option, applies patch after CVS
	  checkout.
	
2006-04-28  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Add support for Intel MPI.
	* lib/GNUmakefile.inc.in: Use placeholder entry after wildcard
	  variable to avoid passing an empty list to /bin/sh 'for'.
	  Solaris /bin/sh doesn't like them.
	* scripts/config: Don't build long-double FFTW on SPARC.
	* scripts/fix-pkg-config-prefix.sh: Use test "=" for portability.
	* scripts/release.sh: Fix /bin/sh portability issues for Solaris.
	* src/vsip/map.hpp (impl_num_patches): Handle sb == no_subblock.

2006-04-28  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Make sure src/vsip/impl subdirectories exist.
	  Necessary to build synopsis documentation.
	* doc/quickstart/quickstart.xml: Fix ending tag typo.
	* scripts/config: Use --with-lapack=fortran-builtin for linux
	  configurations.  Add configurations for sparc/solaris.
	
2006-04-28  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in (hdr): Include headers from fft, lapack, sal,
	  ipp, fftw3 subdirectories of src/vsip/impl.
	* configure.ac: Add tidying up MPI installation prefix in .pc file
	  using fix-pkg-config-prefix.sh script.  Use script for IPP and MKL
	  tidy up instead of fix-intel-pkg-config.sh.
	* doc/quickstart/quickstart.xml: Document new set-prefix.sh usage,
	  cover setting prefix for MPI too.
	* scripts/set-prefix.sh: Generalize to handle other prefixes besides
	  IPP and MKL, in particular MPI.
	* src/vsip/GNUmakefile.inc.in: Install headers from fft, lapack, sal,
	  ipp, fftw3 subdirectories of src/vsip/impl.
	* src/vsip/map.hpp (impl_subblock_domain): Handle sb == no_subblock.
	* src/vsip/impl/aligned_allocator.hpp: Avoid calling alloc_align
	  when size == 0, return NULL pointer instead.
	* tests/make.standalone: Add -I. to CXXFLAGS to handle tests in
	  subdirectories.
	* tests/output.hpp (operator<<): New overload for vsip::impl::Length.
	* tests/parallel/expr.cpp (test_distributed_expr): Use correct map
	  to check if local processor has a subblock.
	* vendor/GNUmakefile.inc.in: Install libF77.

2006-04-26  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--with-lapack): Support both CLAPACK and Fortran
	  LAPACK.  Use CLAPACK and libF77 when option is 'builtin'.  
	  Use Fortran LAPACK and libg2c when option is 'fortran-builtin'.
	  Substitute USE_FORTRAN_LAPACK and USE_BUILTIN_LIBF77.
	  (--disable-builtin-lapack): Remove option.
	* src/vsip/map.hpp (impl_global_from_local_index): Fix Wall warning.
	* tests/convolution.cpp: Fix invalid reference to rand when
	  TEST_LEVEL == 0.
	* vendor/GNUmakefile.inc.in: Allow either Fortran LAPACK or
	  C LAPACK to be built, depending on USE_FORTRAN_LAPACK AC_SUBST.
	  Build LibF77 if USE_BUILTIN_LIBF77 AC_SUBST is set.
	* vendor/atlas/configure.ac: Use test "=" instead "==" to improve
	  portability.
	  (CCFLAGS_OPT and MMFLAGS_OPT): New SUBST to pass known good
	  optimization flags for specific architecture-compilers.
	* vendor/atlas/Make.ARCH.in: Use CCFLAGS_OPT and MMFLAGS_OPT.
	* vendor/clapack/F2CLIBS/libF77/GNUmakefile.in: New file, makefile
	  for libF77.
	* vendor/clapack/F2CLIBS/libF77/f2c.h: Make integer typedef consistent
	  with SRC/f2c.h
	* vendor/clapack/F2CLIBS/libF77/sig_die.c: Remove call to f_exit.
	  Only necessary if Fortran I/O (libI77) is being used.
	
2006-04-26  Don McCoy  <don@codesourcery.com>

        * tests/fft_ext/fft_ext.cpp: Removed argument processing
          logic as it was not needed at this time.  Left options
          structures in place in case we revert to a simplified
          parsing method in the future.

2006-04-26  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fns_scalar.hpp: Fix forward declaration of hypotf().

	* configure.ac: Add tests for hypotf and logf, which don't exist
	on Solaris.
	* src/vsip/impl/fns_scalar.hpp: Use hypotf only if available.
	* src/vsip/impl/signal-fft.hpp: Use log instead of logf.

2006-04-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/fast-transpose.hpp: Use VSIPL++ types length_type
	  and stride_type instead of unsigned.  Fixes bug with negative
	  strides when size(unsigned) != sizeof(stride_type).
	  Fix broken non-unit-stride transpose.
	* tests/regressions/transpose-mirror.cpp: New file, regression
	  test for transposes with negative stride.
	* tests/regressions/transpose-nonunit.cpp: New file, regression
	  test for transposes with non-unit stride.
	
	* src/vsip/impl/solver-cholesky.hpp: Use VSIP_IMPL_HAVE_SAL to
	  determine we should use SAL solvers.
	* src/vsip/impl/solver-lu.hpp: Likewise.

2006-04-13  Assem Salama <assem@codesourcery.com>

	* src/vsip/impl/solver-lu.hpp: Removed Lud_impl from this file and put
	  it in sal/solver_lu.hpp and lapack/solver_lu.hpp. This class has a
	  new tag for implementation. The implementation is chosen using
	  Choose_lud_impl.
	* src/vsip/impl/solver-cholesky.hpp: Removed Chold_impl form this file
	  and put it in sal/solver_cholesky.hpp and lapack/solver_cholesky.hpp.
	  The implementation is chosen using Choose_chold_impl.
	* src/vsip/impl/sal/solver_lu.hpp: New file. This file
	  implements a Lud_impl class using the SAL library. It also
	  has the overloaded functions sal_mat_lud_dec and sal_mat_lud_sol.
	* src/vsip/impl/sal/solver_cholesky.hpp: New file. This file implements
	  a Chold_impl class using the SAL library. It also has the overloaded
	  functions sal_mat_chol_dec and sal_mat_chol_sol.
	* src/vsip/impl/lapack/solver_lu.hpp: New file. This file
	  implements a Lud_impl class using the LAPACK library.
	* src/vsip/impl/lapack/solver_cholesky.hpp: New file. This file
	  implements a Chold_impl class using using the LAPACK library.
	* src/vsip/impl/solver_common.hpp: New file. This file constains common
	  things that the solvers will need. It contains structs for 
	  Is_lud_Impl_avail and Is_chold_impl_avail. It also contains the
	  struct Lapack_tag and enum mat_uplo.

2006-04-13  Don McCoy  <don@codesourcery.com>

	* benchmarks/loop.hpp: Modified sweep routine to generate a linear 
	  range of values.  Works with the -center option as well.
	* benchmarks/main.cpp: Added -linear SCALE and -center VALUE options.

2006-04-13  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUMakefile.in: Fix rule to allow 'sdist' to be run from 
	within $srcdir.

2006-04-12  Don McCoy  <don@codesourcery.com>

	* benchmarks/loop.hpp: Added secs_per_pt metric calculation.
	* benchmarks/main.cpp: Added new option -lat to show latency,
	  which is just the inverse of pts_per_sec.  In other words,
	  it displays the average time consumed per point computed.

2006-04-12  Don McCoy  <don@codesourcery.com>

	* benchmarks/benchmarks.hpp: Added view_equal() cases for
	  vectors and matrices needed for compiling a debug version
	  linked to other library implementations.
	* benchmarks/fft.cpp: Updated to use benchmarks.hpp.  Fixed
	  instances of () to .get() when extracting values from views.
	* benchmarks/firbank.cpp: Fixed one remaining instance of
	  parallel-related code needed also for compiling the debug
	  version against the reference implementation.

2006-04-11  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/solver-svd.hpp: Document flop counts.

2006-04-11  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/loop.hpp: Add '-single' mode, runs a single benchmark
	  size with a loop count of 1.  Add centered sweep that scales
	  problem size so that 2^10 ~ desired size.
	* benchmarks/main.cpp: Add option processing for '-single' mode.
	* benchmarks/mpi_alltoall.cpp: Add alltoallv case.  Extend
	  persistent case to handle separate source/destination processor
	  cliques.  Add ordering of sends, ability to move local copy out
	  of timing.
	* src/vsip/impl/expr_serial_evaluator.hpp: Fix Wall warnings.
	* src/vsip/impl/fast-transpose.hpp: Fix ifdef check for 3DNow
	  (__amd64__ != AMD processor).
	* tests/plainblock.hpp (Plain_block): Make direct data interface
	  public.
	
2006-04-03  Assem Salama <assem@codesourcery.com>
	
	* src/vsip/dense.hpp: Converted this file to use Index and Length
	  instead of Point.
	* src/vsip/matrix.hpp: Same as above.
	* src/vsip/vector.hpp: Same as above.
	* src/vsip/impl/block-copy.hpp: Same as above.
	* src/vsip/impl/extdata.hpp: Same as above.
	* src/vsip/impl/fast-block.hpp: Same as above.
	* src/vsip/impl/lvalue-proxy.hpp: Same as above.
	* src/vsip/impl/par-assign.hpp: Same as above.
	* src/vsip/impl/par-chain-assign.hpp: Same as above.
	* src/vsip/impl/par-foreach.hpp: Same as above.
	* src/vsip/impl/layout.hpp: Same as above. Had to change index
	  index functions to take Index instead of Point.
	* src/vsip/domain.hpp: Added operators ==,-,and + for Index.
	* src/vsip/impl/domain-utils.hpp: Added extent functions that return
	  Length instead of point.
	* src/vsip/impl/par-util.hpp: Changed the foreach_point function to
	  work on Index instead of Point.
	* src/vsip/impl/point-fcn.hpp: Removed this file from cvs. The use of
	  Point is deprecated. We now use Index and Length.
	* src/vsip/impl/point.hpp: Removed this from cvs. We now use Length and
	  Index instead of Point.
	* tests/output.hpp: Changed the << operator to operate on an Index.
	* tests/appmap.cpp: Converted this test to use Length and Index.
	* tests/fast-block.cpp: Same as appmap.cpp
	* tests/us-block.cpp: Same as above.
	* tests/user_storage.cpp: Same as above.
	* tests/util-par.hpp: Same as above.
	* tests/view.cpp: Same as above.
	* tests/vmmul.cpp: Same as above.
	* tests/parallel/block.cpp: Same as above.
	* tests/parallel/expr.cpp: Same as above.
	* tests/parallel/subviews.cpp: Same as above.

2006-04-03  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in (hdr): Add SIMD headers in src/vsip/impl/simd.
	* scripts/package (--version): New option that sets a specific
	  version (--snapshot is equiv to --version=YYYYMMDD).
	* src/vsip/impl/expr_serial_evaluator.hpp: Optimize simple matrix
	  copy to use memcpy or explicit loop when possible.
	* src/vsip/impl/fast-transpose.hpp: New transpose_unit implementation
	  that uses SIMD transpose kernels when possible.

2006-04-03  Don McCoy  <don@codesourcery.com>

	* benchmarks/fastconv.cpp: Updated to use benchmarks.hpp.  Separated
	  out parallel-dependent code to allow it to compile against the
	  reference implementation.
	* benchmarks/loop.hpp: Moved references to parallel-related namespaces
	  into the code blocks separated by the PARALLEL_LOOP define.

2006-04-03  Don McCoy  <don@codesourcery.com>

	* benchmarks/benchmarks.hpp: Updated to reflect new location of 
	  test.hpp (see below).  
	* benchmarks/firbank.cpp: New file. Implements FIR Filter Bank
	  benchmark, one of the MIT/LL PCA Kernel Benchmarks.  Demonstrates
	  two algorithms, time-domain convolution and "fast" convolution
	  based on Fourier transforms.  Optionally supports using external
	  data files where the computed result is compared to the given
	  output file.  Works with the reference implementation of the
	  library for single processor execution only.
	* src/vsip_csl/test.hpp: Moved from tests/ directory and into the 
	  'vsip_csl' namespace.
	* src/vsip_csl/output.hpp: Likewise.
	* src/vsip_csl/load_view.hpp: Likewise.  Changed Load_view to
	  accept only constant filenames.

2006-03-29  Assem Salama <assem@codesourcery.com>

	* src/vsip/impl/lapack.hpp: Included rest of blas functions in the
	  VSIP_IMPL_USE_CBLAS directive. The new groups are trsm, gemv, gemm,
	  and ger.
	* vendor/clapack/SRC/blaswrap.h: Changed this header file to optionaly
	  include cblaswr.h if NO_INLINE_WRAP is not defined. This allows us to
	  inline the wrapper functions. When this define is not defined, we
	  define INLINE to inline and include cblaswr.h
	* vendor/clapack/SRC/cblaswr.c: Took out all of the functions in this
	  file and moved them to cblaswr.h. When they were moved, we added an
	  INLINE infront of each function. This define can be defined as
	  inline or just empty. If NO_INLINE_WRAP is defined, we define INLINE
	  to empty and include cblaswr.h.
	* vendor/clapack/SRC/make.inc.in: Added the flag -DNO_INLINE_WRAP to
	  CFLAGS. The default is to not inline the blas wrappers. We have
	  noticed slightly better performance on smaller vectors when the blas
	  wrappers are not inlined.
	* vendor/clapack/SRC/cblaswr.h: New file. This file has all of the
	  functions that were in cblaswr.c. The functions have INLINE perpeneded
	  to them.

2006-03-29  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/GNUmakefile.inc.in (src_vsip_cxx_sources): Add rscvmul.cpp.
	* src/vsip/impl/simd/eval-generic.hpp: Allow vmul evaluator to work
	  if destination aliases one of the inputs.  Add evaluators for
	  rscvmul cases.
	* src/vsip/impl/simd/rscvmul.cpp: New file, generic SIMD impl of
	  rscvmul (real scalar, complex vector, element-wise multiply).
	* src/vsip/impl/simd/rscvmul.hpp: New file, generic SIMD impl of
	  rscvmul (real scalar, complex vector, element-wise multiply).
	* src/vsip/impl/simd/simd.hpp (Alg_rscvmul): New algorithm tag.
	* src/vsip/impl/simd/vmul.hpp: Use regular store instead of
	  stream_store.  Performance is better for in-cache vector sizes.
	
2006-03-28  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (CLAPACK_NOOPT): New substitution, non-optimized
	  version of CFLAGS.  Used to pass -m32/-m64 flags.
	* vendor/clapack/SRC/make.inc.in: Use CLAPACK_NOOPT for non-optimized
	  files.
	* tests/parallel/replicated_data.cpp: Remove debug code.
	* scripts/release.sh: Fix getopts handling of -s option (was
	  expecting OPTARG).

2006-03-24  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/dense.hpp: Rename implementation par support functions
	  with impl_ prefix.
	* src/vsip/impl/distributed-block.hpp: Likewise.
	* src/vsip/map.hpp: Rename implementation par support functions
	  with impl_ prefix.
	  (impl_patch_from_global_index, impl_dim_patch_from_index): New
	  functions to compute patch from global index.
	  (Is_global_map):  Specialize trait for Map class.
	* src/vsip/parallel.hpp: Include par-support.hpp.
	* src/vsip/support.hpp (no_index): New constant value.
	* src/vsip/impl/block-copy.hpp: Fix handling of distributed blocks.
	* src/vsip/impl/block-traits.hpp (Is_par_same_map): Describe what
	  it means to be "same map".
	* src/vsip/impl/dispatch-assign.hpp: Move map traits into
	  map-traits.hpp.
	* src/vsip/impl/dist.hpp: Consistent names for impl par support
	  functions.
	  (impl_subblock_from_index): Implement function for Cyclic_dist.
	  (impl_local_from_global_index): Likewise.
	* src/vsip/impl/global_map.hpp: Rename implementation par support
	  functions with impl_ prefix.  Specialize map traits.
	* src/vsip/impl/local_map.hpp: Likewise.
	* src/vsip/impl/layout.hpp: Add assertions that indices are valid.
	* src/vsip/impl/map-traits.hpp (Is_global_map, Is_local_only,
	  Is_global_only): Define general traits for maps.
	* src/vsip/impl/par-assign.hpp: Update use of implementation par
	  support functions.  Remove unnecessary assertions.
	* src/vsip/impl/par-chain-assign.hpp: Likewise.
	* src/vsip/impl/par-util.hpp: Move parallel support functions
	  [view.support.fcn] to ...
	* src/vsip/impl/par-util.hpp: New file, ... here.
	* src/vsip/impl/replicated_map.hpp: New file, implement
	  Replicated_map class.
	* src/vsip/impl/subblock.hpp: Rename implementation par support
	  functions with impl_ prefix.
	  (Sliced_block): Recognize special index 'no_index' to indicate
	  empty slice.  Use this for get_local_block when local view is
	  empty.
	* src/vsip/impl/sv_block.hpp: New file, block with std::vector as
	  storage.  Intended for distributed implementation use only.
	* tests/appmap.cpp: Update test coverage for parallel support
	  functions, including impl_{subblock,patch}_from_global_index.
	* tests/replicated_map.cpp: New file, unit tests for Replicated_map.
	* tests/util-par.hpp: Update use of parallel support functions.
	* tests/parallel/block.cpp: Likewise.
	* tests/parallel/expr.cpp: Likewise.
	* tests/parallel/fftm.cpp: Likewise.
	* tests/parallel/subviews.cpp: Likewise.
	* tests/parallel/user-storage.cpp: Likewise.
	* tests/parallel/corner-turn.cpp: New test, simple corner-turn.
	* tests/parallel/replicated_data.cpp: New file, unit tests for 
	  views distributed with Replicated_map.
	* tests/regressions/localview_of_slice.cpp: New file, regression
	  test for local view of a sliced block.
	
2006-03-24  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/loop.hpp: Fix macro typo.  Fix Wall warnings.
	  Use different loop variables for nested loops.

2006-03-23  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/QMTest/vpp_database.py: Make 'parallel_service' a global
	resource.

2006-03-22  Stefan Seefeld  <stefan@codesourcery.com>

	* scripts/package: Rename variable to avoid naming collision.

2006-03-22  Assem Salama <assem@codesourcery.com>

	* CVSROOT/modules: Modified the line for clapack to only pull out SRC
	  directory	
	* vendor/clapack/SRC/make.inc.in: New file. This file was added because
	  clapack checkout only contains the SRC. This was done because we
	  don't need the other directories that clapack comes with.
	* vendor/clapack/SRC/cblaswr.c: New file. This file used to be in
	  vendor/clapack/blas/WRAP. This file was moved into SRC so that we can
	  just checkout SRC.
	* vendor/clapack/SRC/crotg.c: New file. This file also used to be in
	  vendor/clapack/blas/WRAP. This file was moved so that we just use
	  SRC directory
	* vendor/clapack/SRC/zrotg.c: New file. This file used to be in
	  vendor/clapack/blas/WRAP. It is now in SRC directory
	* vendor/clapack/SRC/GNUmakefile.in: Modified makefile to include the
	  new c files in the compile.
	* vendor/GNUmakefile.inc: Modified this makefile to make CLAPACK from
	  SRC directory.
	* configure.ac: Added an option to configure to allow user to override
	  CFLAGS for CLAPACK. The option is called --with-clapack-cflags. If
	  this option is not specified, the normal CFLAGS gets assigned to
	  CLAPACK_CFLAGS.

2006-03-22  Jules Bergmann  <jules@codesourcery.com>

	* VERSIONS (V_060306, V_060307): Document tags used for preview
	  release to LM.
	* configure.ac (--with-mpi-prefix, --with-mpi-prefix64): Don't
	  clobber value of --enable-mpi.
	* doc/quickstart/quickstart.xml: Fix typo in recommended Mercury/
	  Greenhills flags.
	* examples/example1.cpp: Add missing include for vsip/math.hpp
	* examples/mercury/mcoe-setup.sh: Use "=" instead of "==" for
	  test.  "=" is more portable.
	* src/vsip/support.hpp: Remove unnecessary Vector forward decl.
	* src/vsip/vector.hpp: Remove include for vsip/math.hpp.
	* src/vsip/impl/distributed-block.hpp: Fix typo in header guard.
	* src/vsip/impl/lvalue-proxy.hpp (operator=): Pass complex value
	  as const reference.

2006-03-21  Assem Salama <assem@codesourcery.com>

	* vendor/clapack: New directory, contains 'clapack' module, this was
	  done using CVSROOT/modules.
	* CVSROOT/modules: added a line to automatically checkout CLAPACK when
	  vpp is checked out
	* vendor/GNUmakefile.inc: to make CLAPACK instead of LAPACK. Also added
	  a command for clean to also clean out CLAPACK when make clean
	  is invoked
	* vendor/clapack/SRC/GNUmakefile.in: New file, allows configure to make
	  this directory. This file is derived from the clapack Makefile in the
	  directory.
	* vendor/clapack/make.inc.in: New file, allows configure to make a new
	  directory and substitute appropriate values for CFLAGS and such.
	* vendor/clapack/SRC/f2c.h: modified typedef of integer. integer used to
	  be defined as 64 bits. Original FORTRAN code had integer defined
	  for 32 bits.

2006-03-20  Don McCoy  <don@codesourcery.com>

	* configure.ac: added #define for VSIP_IMPL_SOURCERY_VPP.
	* benchmarks/benchmarks.hpp: new file.  encapsulates resources 
	  needed to run benchmarks.  provides some resources for 
	  linking against the reference implementation.
	* benchmarks/loop.hpp: used macros to make parallel-specific
	  code work when linking against serial-only implementations.
	* benchmarks/main.cpp: change to use benchmarks.hpp instead
	  of several separate includes.
	* benchmarks/make.standalone: Fixed a bug where it would
	  not recognize that PREFIX was set on the command line.
	  Fixed include paths and build targets.
	* benchmarks/vmul.cpp: change to use benchmarks.hpp instead
	  of several separate includes.  removed implementation-
	  specific functionality where possible and used the new
	  SOURCERY_VPP macro where not.

2006-03-15  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/*: Move various tests into subdirectories.
	* tests/context.in: Adjust to let compiler find headers from tests/.
	* tests/context-installed.pre.in: Likewise.

2006-03-10  Stefan Seefeld  <stefan@codesourcery.com>

	* scripts/package: Add 'describe' command to report config options.
	* tests/GNUmakefile.inc.in: Allow users to set a 'run_id' annotation.

2006-03-09  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Fix MPI config logic.

2006-03-08  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/GNUmakefile.inc.in: Copy images into the html tutorial
	unconditionally.

2006-03-07  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Probe for MPI by default.

2006-03-07  Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/corr.cpp: Remove unused function/classes.  Add
	  mem_per_points() function.
	* benchmarks/dot.cpp: Add mem_per_points() function.
	* benchmarks/fastconv.cpp: Likewise.
	* benchmarks/fft_ext_ipp.cpp: Likewise.
	* benchmarks/fftm.cpp: Likewise.
	* benchmarks/fir.cpp: Likewise.
	* benchmarks/mcopy_ipp.cpp: Likewise.
	* benchmarks/prod.cpp: Likewise.
	* benchmarks/prod_var.cpp: Likewise.
	* benchmarks/sumval.cpp: Likewise.
	* benchmarks/vmmul.cpp: Likewise.
	* benchmarks/vmul_sal.cpp: Likewise.
	
2006-03-06  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--with-alignment): New option to set
	  VSIP_IMPL ALLOC_ALIGNMENT.
	  Extend std::abs test to cover long double.
	  (VSIP_IMPL_HAVE_COMPLEX_LONG_DOUBLE) define if stdlib supports
	  complex<long double>.
	  Check if acosh is provided.
	* examples/mercury/mcoe-setup.sh: New file, example setup for
	  mercury.
	* src/vsip/dense.hpp (vsip::impl::dense_complex_type): New typedef.
	* src/vsip/signal-window.cpp (acosh): provide definition when
	  stdlib doesn't.
	  (pragma) Add instantiation pragmas for GHS.
	* src/vsip/impl/aligned_allocator.hpp (VSIP_IMPL_ALLOC_ALIGNMENT):
	  Remove hard-coded definition, use acconfig version.
	* src/vsip/impl/eval-sal.hpp (VSIP_IMPL_SAL_USE_MAT_MUL):
	  Don't use mat_mul at all when defined (even if no alternative
	  exists).  Have dot-product to check if complex formats are the same.
	* src/vsip/impl/expr_scalar_block.hpp (Scalar_block): Provide
	  3-dim specialization.
	* src/vsip/impl/extdata.hpp (is_aligned_to): new function overloads
	  to generalize alignment check.
	* src/vsip/impl/fft-core.hpp (Ipp_DFT_base::create_plan2): Fix
	  reversed use of rows and columns.
	  (create_ipp_plan): Likewise, cleanup.
	  (destroy): Fix IPP backend effective dimension used to destroy
	  plan.
	* src/vsip/impl/fns_elementwise.hpp: Make operator functions
	  inline.
	* src/vsip/impl/layout.hpp (Storage): provide alloc_align based
	  allocation and deallocation.
	* src/vsip/impl/point.hpp: Make generic get/put functions inline.
	* src/vsip/impl/sal.hpp: Add support for split complex convolution.
	* src/vsip/impl/signal-conv-sal.hpp: Likewise.
	* src/vsip/impl/signal-conv-common.hpp: Add generic routines for
	  split complex convolution.
	* src/vsip/impl/signal-fft.hpp: Make small utility functions inline.
	* tests/convolution.cpp: Test complex convolution when
	  VSIP_IMPL_TEST_LEVEL == 0.
	* tests/counter.cpp: Make test work when not using exceptions.
	* tests/fft.cpp: Use DFT for reference 2D FFT.  Limit tests run
	  when VSIP_IMPL_TEST_LEVEL == 0.
	* tests/fftm-par.cpp: Disable real-complex tests (mistakenly
	  enabled in previous patch).
	* tests/matvec.cpp: Disable long double modulation test if
	  library does not support long double.
	* tests/ref_dft.hpp: Fix DFT to work for real to complex.
	* tests/test.hpp (VSIP_IMPL_TEST_LEVEL): Guard definition to allow
	  override from command line.
	* tests/make.standalone: Add REMOTE variable for running test,
	  fix executable path.
	* doc/quickstart/quickstart.xml: New section on Mercury configuration.

2006-03-04  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--with-mpi-prefix64): New option, similar to
	  --with-mpi-prefix, that searches include64, bin64, and lib64
	  instead.  Useful for 64-bit Intel MPI library.
	* src/vsip/impl/signal-fft.hpp: Allocate ref-counted Fft_core
	  with 'noincrement' to prevent memory leak.
	* src/vsip/impl/sal/fft.hpp: Fix Wall signed/unsigned warning.
	* tests/fft.cpp: Cleanup, move reference dft into ref_dft.hpp.
	  Use error_db from error_db.hpp.
	* tests/fftm-par.cpp: Cleanup, move reference dft into ref_dft.hpp,
	  use error_db from error_db.hpp, disable non-power-of-2 FFTs
	  when using SAL.
	* tests/fftm.cpp: Likewise.
	* tests/random.cpp: Deallocate vsip_randstate.
	* tests/ref_dft.hpp: New file, reference implementation of
	  DFT and DFTM.
	* tests/window.cpp: Disable test of non-power-of-2 Chebychev
	  window when using SAL FFT.

2006-03-03  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/profile.hpp: added members zero() and ticks()
	  for the case where no timer is used.

2006-03-03  Jules Bergmann  <jules@codesourcery.com>

	* autogen.sh: Doctor generated configure file to ignore extra
	  files generated by GreenHills compiler when detecting object
	  and executable exentions.
	* configure.ac: New '--with-simd=TYPE' option to enable use of
	  SIMD extensions.  Search for ippm library.
	
	* apps/sarsim/histcmp.c: Define min() macro.
	* apps/sarsim/util_io.c: Fix signed/unsigned warnings.
	
	* benchmarks/conv.cpp: Remove unnecessary code.  Add mem_per_point
	  function.
	* benchmarks/conv_ipp.cpp:  Add mem_per_point() function.
	* benchmarks/copy.cpp: Likewise.
	* benchmarks/fft_ipp.cpp: Likewise.
	* benchmarks/qrd.cpp: Likewise.
	* benchmarks/vmul_c.cpp: Likewise.
	* benchmarks/vmul_ipp.cpp: Likewise.
	* benchmarks/fastconv.cpp: Add in-place phase fast convolution
	  variants.  Add mem_per_point function.  Make std::log() calls
	  with float argument.
	* benchmarks/fft.cpp: Add variants with scale != 1.0 to stress
	  scaling performance.  Add mem_per_point function.
	* benchmarks/loop.hpp: Add "left-hand side" metrics (either
	  points or memory size in bytes).  Option to show time.  Add
	  sweep mode.
	* benchmarks/main.cpp: Likewise.
	* benchmarks/mcopy.cpp: Extend benchmark functionality.
	* benchmarks/mcopy_ipp.cpp: New benchmark for IPP matrix copy
	  and transpose.
	* benchmarks/mpi_alltoall.cpp: New benchmark for MPI alltoall
	  functionality.
	* benchmarks/vmul.cpp: Add cases for vector subviews, real-complex
	  vector multiply, and real-complex scalar-view multiply.
	
	* doc/csl-docbook/GNUmakefile.inc: Robustify installation of HTML.
	* src/vsip/GNUmakefile.inc.in: Add simd sources.
	* src/vsip/support.hpp: Don't define noinline attribute for Greenhills.
	* src/vsip/vector.hpp: Send scalar op= through dispatch.
	* src/vsip/impl/distributed-block.hpp: Fix GCC 4.1 Wall warnings.
	* src/vsip/impl/eval-sal.hpp: Fix Op_list_3 usage, fix Wall warnings.
	* src/vsip/impl/expr_serial_dispatch.hpp: Hooks for dispatch to SIMD.
	* src/vsip/impl/expr_serial_evaluator.hpp: Hold view extents in const
	  variable.
	* src/vsip/impl/lvalue-proxy.hpp: Remove unnecessary implicit
	  conversion operator when deriving from std::complex<>.
	* src/vsip/impl/par-chain-assign.hpp: Add profile events.
	* src/vsip/impl/par-foreach.hpp: Fix submatrix typenames.
	* src/vsip/impl/sal.cpp: Add wrappers for real*complex cases.
	* src/vsip/impl/sal.hpp: Extend coverage of vector multiply
	  to mixed types and scalar-view cases.
	* src/vsip/impl/signal-conv-sal.hpp: Fixed Wall warnings.
	
	* src/vsip/impl/simd/eval-generic.hpp: New file, dispatch 
	  evaluators for generic SIMD routines.
	* src/vsip/impl/simd/simd.hpp: New file, SIMD definitions.
	* src/vsip/impl/simd/vmul.cpp: New file, SIMD vector-multiply impl.
	* src/vsip/impl/simd/vmul.hpp: New file, SIMD vector-multiply decls.

	* tests/test.hpp: Define VSIP_IMPL_TEST_LEVEL.
	* tests/convolution.cpp: Reduce compilation time when
	  VSIP_IMPL_TEST_LEVEL is 0.
	* tests/extdata-subviews.cpp: Likewise.
	* tests/scalar-view.cpp: Likewise.
	* tests/regr_transpose.cpp: New file, regression test for
	  greenhills tail-recursion optimization defect.

2006-03-01  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: Avoid unnecessary copies (temporary fix).
	* src/vsip/impl/sal/fft.hpp: Add missing bridges and fix some existing ones.
	* tests/fft.cpp: Fix typo.
	* tests/QMTest/vpp_database.py: Fix typo.

2006-02-27  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/fft.cpp: Add tests for complex split format.
	* src/vsip/impl/allocation.hpp: Make alloc_align type-safe.
	* src/vsip/impl/aligned_allocator.hpp: Adjust accordingly.
	* apps/sarsim/sarsim.hpp: Likewise.
	* apps/sarsim/mit-sarsim.cpp: Likewise.
	* apps/sarsim/chk-simd-48-4: Fix path.
	* apps/sarsim/chk-simd-8-4: Likewise.
	* apps/sarsim/chk-sims-48-4: Likewise.
	* apps/sarsim/chk-sims-8-4: Likewise.
	* src/vsip/impl/signal-fft.hpp: Use temporary buffer in SAL backend.
	* src/vsip/impl/sal/fft.hpp: Likewise.

2006-02-23  Don McCoy  <don@codesourcery.com>

        * src/vsip/profile.cpp: corrected cases where 'stamp_type'
	  data members are treated as integers.
	* src/vsip/impl/profile.hpp: added members zero() and ticks()
	  to handle above cases.

2006-02-17  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add support for sal-fft.
	* src/vsip/impl/fft-core.hpp: Likewise.
	* src/vsip/impl/signal-fft.hpp: Likewise.
	* src/vsip/impl/sal/fft.hpp: Likewise.
	* tests/fft.cpp: Temporarily mask all tests that sal-fft is known
	not to support, when building with sal-fft.

2006-02-16  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Emit variable PAR_SERVICE.
	* vsipl++.pc.in: Publish it.
	* tests/GNUmakefile.inc.in: Propagate it...
	* tests/context-installed.pre.in: ...here.
	* tests/context.in: Use it.
	* tests/QMTest/vpp_database.py: Define new ParallelService resource.
	* tests/QMTest/classes.qmc: Declare it.

2006-02-14  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--enable-mpi=mpipro): Configure for MPI/Pro on
	  MCOE.
	* benchmarks/loop.hpp: Force use of double to accumulate
	  intermediate product for {pts,ops,iob}/sec metrics.  Avoid
	  wrap around on 32-bit machines with large sample times.

2006-02-03  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--with-complex=FORMAT): New option to set complex
	  format used by dense.
	* src/vsip/complex.hpp (recttopolar): Avoid using lvalues.
	* src/vsip/dense.hpp: Use VSIP_IMPL_PREFER_SPLIT_COMPLEX to set
	  VSIP_IMPL_DENSE_CMPLX_FMT.  Only use Lvalue_proxy is dense block
	  is split-complex (result of Is_split_block trait).
	* src/vsip/impl/adjust-layout.hpp: New file, classes to manipulate
	  layout policies and check for equivalence between them.
	* src/vsip/impl/block-copy.hpp (Block_fill): Remove separate
	  template parameter for value being filled, use block::value_type.
	* src/vsip/impl/block-traits.hpp (Is_split_block): New trait, value
	  true if block is both Cmplx_split_fmt and has complex value type.
	* src/vsip/impl/dispatch-assign.hpp: Use Is_split_block, avoid
	  static cast on vector assignment.
	* src/vsip/impl/eval-blas.hpp: Check that blocks are interleaved
	  before dispatching to BLAS.
	* src/vsip/impl/extdata-local.hpp: New file, extend Ext_data class
	  to reorganize distributed data to be local.
	* src/vsip/impl/extdata.hpp (Ext_data::element_type): New typedef,
	  type of element pointed to by ptr_type.
	* src/vsip/impl/layout.hpp: Add support for Any_type, used by
	  adjust-layout.hpp.
	* src/vsip/impl/par-chain-assign.hpp: Handle assignments with
	  split-complex.
	* src/vsip/impl/par-services-mpi.hpp (Chain::stitch): New overload for
	  pair<void*, void*>.
	* src/vsip/impl/par-services-none.hpp: Likewise.
	* src/vsip/impl/signal-conv-ext.hpp: Use Ext_data_local instead
	  of Working_view_holder.
	* src/vsip/impl/signal-corr-ext.hpp: Likewise.
	* src/vsip/impl/signal-fft.hpp (Fft_aligned): Insure block has
	  Cmpl_inter_fmt.
	* src/vsip/impl/signal-histo.hpp: Fix return type of operator().
	* src/vsip/impl/signal-iir.hpp: Use non-lvalue operations.
	* src/vsip/impl/solver-cholesky.hpp: Insure that internal storage
	  and Ext_data accesses use Cmplx_inter_fmt.
	* src/vsip/impl/solver-lu.hpp: Likewise.
	* src/vsip/impl/solver-qr.hpp: Likewise.
	* src/vsip/impl/solver-svd.hpp: Likewise.
	* src/vsip/impl/solver-toepsol.hpp: Likewise.
	* src/vsip/impl/subblock.hpp: Use storage_type::offset to generalize
	  offset computation for both split and interleaved.
	* src/vsip/impl/us-block.hpp: New file, block that layers on top
	  of a user pointer.  Similar to Dense user-defined storage, but
	  with control over split/interleaved format, and without admit/
	  release.
	* tests/corr-2d.cpp: Fix VERBOSE output on failure.
	* tests/correlation.cpp: Initialize vsipl object.
	* tests/dense.cpp: Avoid testing impl_ref if Dense is storing
	  complex in split-format.
	* tests/extdata-local.cpp: New file, unit tests for Ext_data_local.
	* tests/extdata-subviews.cpp: Update to work with split-complex.
	* tests/lvalue-proxy.cpp: Extend coverage for both operations
	  and types of values proxied.
	* tests/solver-cholesky.cpp: Update to work with complex Lvalue_proxys.
	  Move Is_positive implementation to ...
	* tests/solver-common.hpp: ... here. 
	* tests/solver-lu.cpp: Distribute matrices used in checking solver.
	* tests/solver-qr.cpp: Update to work with complex Lvalue_proxys.
	* tests/solver-toepsol.cpp: Likewise.
	* tests/test.hpp (equal): Add cases for comparing two Lvalue_proxy's.
	* tests/us-block.cpp: New file, unit tests for Us_block.
	* tests/util.hpp (create_view): Provide default value for map argument.
	* tests/ref-impl/vector-const.cpp: Avoid assignment from vector of
	  float to vector int, causes warning.

2006-02-02  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/lvalue-proxy.hpp: Specialize Lvalue_proxy's of
	  complex<T> to derive from complex<T> so that template deduction
	  works for complex<T> operators.  Refactor dimensional specializations
	  into single class.
	* tests/lvalue-proxy.cpp: Extend coverage to proxies of additonal
	  types (including complex types).  Extend coverage of operations
	  using proxies.
	* tests/regr_complex_proxy.cpp: New test, covers condition that
	  prevented proxy objects from working with complex operators.
	* tests/test.hpp: Update Lvalue_proxy template parameters.

2006-02-01  Don McCoy  <don@codesourcery.com>

        * benchmarks/vmul_sal.cpp: New file, SAL element-wise
          vector multiply (including in-place).

2006-01-31  Don McCoy  <don@codesourcery.com>

	* doc/quickstart/quickstart.xml: corrected example makefile.
	* examples/makefile.standalone.in: corrected actual example.

2006-01-26  Jules Bergmann  <jules@codesourcery.com>

	* README.bin-pkg: Update architectural requirements for 32-bit
	  vs em64t/amd64.
	* VERSIONS: Document tags for 1.0 release.
	* benchmarks/loop.hpp: Add option to show loop count.
	* benchmarks/main.cpp: Likewise.
	* benchmarks/make.standalone: Add rule to build static benchmarks.
	* benchmarks/vmul.cpp: Add cases for split-complex.
	* benchmarks/vmul_c.cpp: New file, benchmark C vmul.
	* src/vsip/support.hpp (VSIP_IMPL_NOINLINE): Define attribute.
	* tests/expr-coverage.cpp: Add multiply coverage, add split-complex
	  coverage.
	* tests/test-storage.hpp: Support split-complex storage.

2006-01-24  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Add 'libs' target.
	* tests/GNUmakefile.inc.in: Add $(tests_ids) to fine-tune
	test execution.

2006-01-22  Don McCoy  <don@codesourcery.com>

	* README: Minor update in configuration instructions.

2006-01-22  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/tutorial/api.xml: Last-minute fixes for the 1.0 release.
	* doc/tutorial/optimization.xml: Likewise.
	* doc/tutorial/src/azimuth.hpp: Avoid overflowing boxes.
	* doc/tutorial/src/complex_mult.hpp: Liewise.
	* doc/tutorial/src/complex_mult2.hpp: Likewise.
	* doc/tutorial/src/corner_turn.hpp: Likewise.
	* doc/tutorial/src/dense1.hpp: Likewise.
	* doc/tutorial/src/dense2.hpp: Likewise.
	* doc/tutorial/src/dense3.hpp: Likewise.
	* doc/tutorial/src/domain.hpp: Likewise.
	* doc/tutorial/src/domain2.hpp: Likewise.
	* doc/tutorial/src/elementwise.hpp: Likewise.
	* doc/tutorial/src/elementwise2.hpp: Likewise.
	* doc/tutorial/src/layout.hpp:Likewise.
	* doc/tutorial/src/matrix.hpp: Likewise.
	* doc/tutorial/src/process.hpp: Likewise.
	* doc/tutorial/src/range.hpp: Likewise.
	* doc/tutorial/src/real_imag.hpp: Likewise.
	* doc/tutorial/src/subview.hpp: Likewise.
	* doc/tutorial/src/tensor.hpp: Likewise.
	* doc/tutorial/src/tensor2.hpp: Likewise.
	* doc/tutorial/src/user_block.hpp: Likewise.
	* doc/tutorial/src/view.hpp: Likewise.
	* doc/tutorial/src/view_block.hpp: Likewise.

2006-01-22  Jules Bergmann  <jules@codesourcery.com>

	* README.bin-pkg: Correct IPP version number.
	* doc/quickstart/quickstart.xml: Add titles for all examples.

2006-01-22  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (with-fftw3-cflags): New options to pass CFLAGS
	  for builtin FFTW3.  Avoid passing CFLAGS to FFTW3 unless
	  asked.
	  (with-atlas-tarball): New option to use ATLAS tarball for
	  builtin LAPACK.
	* scripts/config: Enable profile timer.  Provide explicit
	  cflags for i686 builtin FFTW (probing while cross-compiling
	  doesn't find right flags).
	* tests/matvec-prod.cpp: Add large matrix-multiply test to
	  cover ATLAS' mainline case (small matrix-multiplies are
	  handled by cleanup code).
	* vendor/atlas/tune/blas/gemv/mvsearch.c (compiler): Fix missing
	  pointer dereference.

2006-01-20  Jules Bergmann  <jules@codesourcery.com>

	* VERSIONS: Document V_1_0 tag for 1.0 release.
	* benchmarks/GNUmakefile.inc: Rule to generate static executables.
	* doc/quickstart/quickstart.xml: Bump version to 1.0, copyright
	  to 2006.
	* scripts/config: Document.  Add options for P4SSE2, EM64T and AMD64
	  targets.
	* scripts/release.sh: Add -T cvs_tag option.
	* scripts/set-prefix.sh: Add -v option to enable verbose output.

2006-01-20  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/csl-docbook/GNUmakefile.inc: Use '+=' instead of ':=' during
	variable definition to preserve potential prior parameters.
	* doc/GNUmakefile.inc.in: Set 'use.svg' to '0' during tutorial.pdf 
	generation (to work around a svg issue with inkscape).

2006-01-19 Jules Bergmann  <jules@codesourcery.com>

	* vendor/atlas/configure.ac: Use configure's detection of GCC
	  for compiler family check.

2006-01-19 Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in: Install set-prefix.sh and README.bin-pkg.
	* README.bin-pkg: New file, readme and release notes for
	  binary package.
	* doc/quickstart/quickstart.xml: Document use of set-prefix.sh
	  command to update pkg-config prefixes for Sourcery VSIPL++,
	  IPP, and MKL.
	* scripts/fix-intel-pkg-config.sh: New file, utility script to
	  post-process .pc files so that IPP and MKL prefixes are stored
	  as variables.
	* configure.ac: ... use fix-intel-pkg-config.sh.  Generate
	  cc.sh wrapper for ATLAS instead of using gcc-m32.sh/gcc-m64.sh.
	* scripts/release.sh: Update IPP and MKL paths.  New option to
	  specify distdir.
	* scripts/set-prefix.sh: New file, script to modify prefixes
	  in pkg-config files after library installation. 
	* benchmarks/make.standalone: New file, stand-alone makefile for 
	  benchmarks.
	* tests/make.standalone: New file, stand-alone makefile for tests.

2006-01-19  Don McCoy  <don@codesourcery.com>

	* doc/quickstart/quickstart.xml: Changed tags on urls for the sake
	  of consistency.  Corrected section on installing binary packages.
	  Added headings to sections on building applications in addition
	  to referencing the new makefile for building examples.
	* examples/GNUmakefile.inc.in: Copies new makefile during install.
	* examples/makefile.standalone.in: New file.  This gets installed
	  as share/sourceryvsipl++/Makefile - allowing the user an easy
	  way to build the example program.

2006-01-19  Stefan Seefeld  <stefan@codesourcery.com>

	* scripts/package: Support 'host' and 'cvstag' options.
	* scripts/config: Likewise.

2006-01-18 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (LAPACK_NOOPT): New substitution to pass -m32/-m64
	  to LAPACK for building without optimization.
	* vendor/lapack/make.inc.in (NOOPT): use LAPACK_NOOPT.
	* lib/GNUmakefile.inc.in: Check for .a files before trying to
	  instal them.

2006-01-18 Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in (subdirs): Move tests near the end of the list so
	  that it sees the fully initialized $(libs).
	* configure: Pass compilers and flags to ATLAS and FFTW configure
	  so they see '-m32'.  Use wrapper script (gcc-m32.sh == gcc -m32)
	  for ATLAS since it does not always use CFLAGS.
	* scripts/config: Use -m32 for cross compilation instead of
	  host/build/target triplet.  Hardcode mkl-arch.  Pass -m32 in
	  CFLAGS, FFLAGS, and LDFLAGS.
	* scripts/release.sh: Use --no-maintainer-mode when building
	  binary packages.  Don't put GC_DIR in LD_LIBRARY_PATH twice.
	* vendor/atlas/bin/gcc-m32.sh: New file, wrapper for 'gcc -m32'.
	* vendor/atlas/bin/gcc-m64.sh: New file, wrapper for 'gcc -m64'.
	* vendor/atlas/tune/blas/gemv/mvsearch.c: Use $(GOODGCC) instead
	  of hardcoded gcc.
	* vendor/fftw/configure: Fix broken test when only one of $target or
	  $build is defined.

2006-01-18  Don McCoy  <don@codesourcery.com>

	* doc/quickstart/quickstart.xml: Added section regarding
	  the installation of binary packages.  Changed reference
	  platform to RHEL 4.  Added LAM 7.0.6 to the list of 
	  packages VSIPL++ is tested against.

2006-01-18  Stefan Seefeld  <stefan@codesourcery.com>

	* scripts/config: Minor adjustments to changes on the build machine.

	* doc/csl-docbook/GNUmakefile.inc: Fix pdf installation.
	
	* scripts/package: Add '--no-maintainer-mode' flag to suppress
	(re-)generation of documentation.
	* doc/GNUmakefile.inc.in: Small fixes for doc2src and install-html 
	targets.

2006-01-18 Jules Bergmann  <jules@codesourcery.com>

	* scripts/config: Don't use -W -Wall for release (which has -DNDEBUG).
	* scripts/release.sh: Add missing paths for IPP and MKL.

2006-01-18  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/ipp.cpp: Prevent compiler from eliminating function 
	argument.

2006-01-17 Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in: Exclude _darcs directories from source package.
	* configure.ac: Pass host, build, and target to ATLAS and FFTW
	  sub-configures.  Pass configure options to ATLAS configure
	  (via atlas-cfg-opt).
	* scripts/release.sh: New meta-script to automate release process.
	* scripts/config: Specify ATLAS options when cross-compiling.
	  Move IPP and MKL paths to variable.
	
	* vendor/atlas/configure.ac (--with-isa, --with-int-type,
	  --with-string-convention): New configure options.
	  Setting values avoids probing, which breaks cross-compiling.
	* vendor/atlas/tune/blas/gemm/emit_mm.c: Use $(GOODGCC) in
	  generatd makefile rather than gcc.  Avoids breakage when
	  cross-compiling.
	
	* src/vsip/impl/block-traits.hpp (Is_sized_block): New trait for
	  blocks where size matters.
	* src/vsip/impl/expr_scalar_block.hpp (Is_sized_block): Speciialize it.
	* src/vsip/impl/expr_binary_block.hpp: Use Is_sized_block to
	  determine if lhs/rhs block size is relevant.
	* tests/par_expr.cpp: Additional test case, same block distribution
	  over all processors for all operands.

2006-01-16 Jules Bergmann  <jules@codesourcery.com>

	* tests/conv-2d.cpp: Initialize/finalize the library with vsipl obj.
	* tests/corr-2d.cpp: Likewise.

2006-01-12  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Fix handling of --with-mpi-prefix.

2006-01-11 Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/dense.hpp (get_local_block): overload for const Dense.
	* src/vsip/random.hpp: Return matrices with Local_or_global_map.
	* src/vsip/impl/expr_binary_block.hpp (Distributed_local_block):
	  Add specialization for non-const expression block.
	* src/vsip/impl/expr_ternary_block.hpp: Likewise.
	* src/vsip/impl/expr_unary_block.hpp: Likewise.

2006-01-11  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/GNUmakefile.in.in: Add rule to install reference manual.
	* scripts/package: Fix typo.
	* scripts/config: Add package configuration file.

2006-01-11 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Check if -lblas is necessary for generic lapack.
	* src/vsip/map.hpp (impl_subblock_from_global_index): New par
	  support function to convert from global index to subblock.
	* src/vsip/map_fwd.hpp: Add forward decls for Global_map and
	  Local_or_global_map.
	* src/vsip/math.hpp: Include global_map.hpp.
	* src/vsip/impl/view_traits.hpp (Is_const_view_type): New trait.
	* src/vsip/matrix.hpp (Is_const_view_type): New trait.
	* src/vsip/tensor.hpp: Likewise.
	* src/vsip/vector.hpp: Likewise.
	* src/vsip/par-services.cpp (procesor_set): Memoize processor
	  set returned from communicator pvec.
	* src/vsip/parallel.hpp: Add headers for map and working-view.
	  Move processor_set decl to ...
	* src/vsip/impl/par-util.hpp: ... to here.
	* src/vsip/random.hpp: Change return type to have Local_or_global_map.
	* src/vsip/impl/block-traits.hpp (Choose_peb): New trait to
	  choose the appropriate Par_expr_block variant when evaluating
	  parallel expressions.
	* src/vsip/impl/dispatch-assign.hpp: Update check for legal
	  mixing local/global blocks.
	* src/vsip/impl/distributed-block.hpp: Implement distribute get/put.
	  Forward direct data interface calls.
	* src/vsip/impl/expr_scalar_block.hpp: Add traits and functions
	  necessary for parallel expressions.
	* src/vsip/impl/general_dispatch.hpp: Change usage of Op_list_3
	  to not hard-code assumption of which args are blocks.  Add
	  Parallel_tag.
	* src/vsip/impl/eval-blas.hpp: Update to new Op_list_3 usage.
	* src/vsip/impl/matvec.hpp: Likewise.
	* src/vsip/impl/global_map.hpp: Implement processor_begin/end
	  and impl_local_from_global_index.
	* src/vsip/impl/metaprogramming.hpp (Int_type): Utility to convert
	  integral value to type.
	* src/vsip/impl/par-chain-assign.hpp: Reorder allocations/deallocations
	  to have mirrored order.
	* src/vsip/impl/par-expr.hpp: Extend Par_expr_block to have multiple
	  impl tags.  Add variant of Par_expr_block to directly reuse block.
	* src/vsip/impl/par-services-mpi.hpp: Add additional MPI datatypes.
	  New broadcast and allreduce communicator functions.  Memoize pvec.
	* src/vsip/impl/par-services-none.hpp: New broadcast and allreduce
	  communicator functions.  Memoize pvec.
	* src/vsip/impl/reductions-idx.hpp: Apply general dispatch treatment.
	* src/vsip/impl/reductions.hpp: Likewise.  Provide an evaluator for
	  reductions on
	* src/vsip/impl/reductions-types.hpp: New file, enumeration of
	  reductions.
	* src/vsip/impl/signal-conv-common.hpp: Use assign_local and woring
	  view to work correctly with distributed arguments.
	* src/vsip/impl/signal-conv-ext.hpp: Likewise.
	* src/vsip/impl/solver-lu.hpp: Likewise.
	* src/vsip/impl/solver-qr.hpp: Likewise.
	* src/vsip/impl/solver-svd.hpp: Likewise.
	* src/vsip/impl/vector-iterator.hpp: New file, iterate over values
	  in a vector.
	* src/vsip/impl/working-view.hpp: New file, helpers for converting
	  between distributed and local views.
	* tests/convolution.cpp: Add distributed cases.
	* tests/reductions.cpp: Likewise.
	* tests/solver-lu.cpp: Likewise.
	* tests/solver-qr.cpp: Likewise.
	* tests/solver-toepsol.cpp: Likewise.
	* tests/distributed-getput.cpp: New test for distributed get/put.
	* tests/expression.cpp: Add map include.
	* tests/par_expr.cpp: Add coverage for expressions with scalars.
	* tests/ref_conv.hpp: New file, reference implementation of conv.
	* tests/solver-common.hpp: In-place version of test_ramp.
	* tests/test-storage.hpp (Create_map): create maps of given type
	  and dimension.  Add map parameter to Storage classes.
	* tests/test.hpp: Make TEST_STRING work with cygwin.

2006-01-10 Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in: Include lib/GNUmakefile.inc
	* configure.ac (with-g2c-copy): New option to copy libg2c.a into
	  libdir.
	* lib/GNUmakefile.inc.in: New file, install libs from libdir.

2006-01-10  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Add (packagesuffix) variable.
	* tests/GNUmakefile.inc.in: expect qmtest to exit with 0 or 2.
	* scripts/package: Use a config file for package layout info.

2006-01-09 Jules Bergmann  <jules@codesourcery.com>

	* tests/GNUmakefile.inc.in (check): Fix dependency on libs.
	* vendor/GNUmakefile.inc.in (install): Add dependency to vendor_LIBS.

2006-01-07  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Revert Nathan's change from 2005-12-26 as as that
	causes build failures due to MPI misconfiguration.
	* src/vsip/impl/par-services-mpi.hpp: Likewise.
	* GNUmakefile.in: Add 'mostlyclean' target.
	* doc/GNUmakefile.inc.in: Make more rules dependent on $(srcdir) != '.'.
	* tests/GNUmakefile.inc.in: Rename 'check-installed' to 'installcheck'
	for standard conformance.
	* vendor/GNUmakefile.inc.in: Make 'install' dependent on libs.
	* scripts/package: Do a 'mostlyclean' before each new config build.

2006-01-06  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Allow (suffix) to be set during configuration.
	* GNUmakefile.in: Honor (suffix) variable from configure, and better
	handle binary package creation.
	* doc/GNUmakefile.inc.in: Make doc2src dependent on doc.
	* vsipl++.pc.in: Allow (suffix) to be set during configuration.
	* scripts/package: New packaging driver script.

2006-01-05  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Make $(objects) and $(deps) lazy variables.
	* tests/GNUmakefile.inc.in: Cleanup.

2006-01-04  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Test for synopsis.
	* vsipl++.pc.in: Use PACKAGE_VERSION instead of VERSION.
	* GNUmakefile.in: Add new targets 'sdist' and 'bdist',
	and add support for $(DESTDIR).
	* doc/GNUmakefile.inc.in: Add new 'doc2src' target and generally
	enhance documentation generation.
	* doc/Doxyfile.in: Build reference into doc/reference/reference.
	* src/vsip/GNUmakefile.inc.in: Use $(DESTDIR).
	* vendor/GNUmakefile.inc.in: Likewise.
	* examples/GNUmakefile.inc.in: Likewise.
	
2005-12-28  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile.in (PACKAGE_TARNAME): New variable.
	(PACKAGE_VERSION): Likewise.
	(pkgdatadir): Likewise.
	(datarootdir): Likewise.
	(docdir): Use it.
	(htmldir): New variable.
	(pdfdir): Likewise.
	(pdf_manuals): Likewise.
	(html_manuals): Likewise.
	(doc): Depend on html, pdf.
	(html): New target.
	(pdf): Likewise.
	(install): Depend on install-pdf, install-html.
	(install-pdf): New target.
	(install-html): Likewise.
	* configure.ac (AC_INIT): Set PACKAGE_TARNAME, correct
	PACKAGE_NAME.
	* doc/GNUmakefile.in: Adjust for improvements to csl-docbook,
	toplevel GNUmakefile.
	* examples/GNUmakefile.inc.in (examples/example1$(EXEEXT)): Depend
	on $(libs).
	(install): Use $(pkgdatadir).
	* src/vsip/GNUmakefile.inc.in (libs): Make it a variable, not a
	target.
	* vendor/GNUmakefile.inc.in (libs): Likewise.
	
2005-12-26  Nathan Myers  <ncm@codesourcery.com>

	* configure.ac, src/vsip/impl/par-services-mpi.hpp: find native MPI
	  installations, correctly extract build options using C-only libs.

2005-12-23  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/GNUmakefile.inc.in: Add new check-installed target.
	* tests/context-installed.pre.in: New context file for testing
	installed packages.

2005-12-23  Nathan Myers  <ncm@codesourcery.com>
	
	* configure.ac, vendor/GNUmakefile.inc.in: Add configure options
	  --disable-fft-double etc., and arrange not to build/install/clean
	  built-in FFTW3 libs so disabled.

2005-12-23  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/GNUmakefile.inc.in: Fix typo.

2005-12-22  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Define and use 'suffix' during installation.
	* vsipl++.pc.in: Process during configuration and post-process during
	installation to set suffix variable.
	* src/vsip/GNUmakefile.inc.in: Use suffix variable for the final
	library name.

2005-12-21  Don McCoy  <don@codesourcery.com>

	* configure.ac: added --with-fft=none option.

2005-12-21  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/fft-core.hpp: mention long double in comments
	* src/vsip/fft-ldouble.cpp: new file, long-double element FFTs
	* tests/fft.cpp, tests/fftm.cpp: add tests for long double.
	* tests/fft.cpp: typo; test variant data organizations & axes
	  with float, double or long double, whichever is first found 
	  to be supported.

2005-12-21  Nathan Myers  <ncm@codesourcery.com>

	* configure.ac, vendor/GNUmakefile.inc.in: fix "make clean"
	  for fftw libs, other cleanup, install in $(libdir).

2005-12-21 Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/main.cpp: Add sanity check if library is configured
	  with usable profile timer.
	* benchmarks/mcopy.cpp: Add plainblock case.
	* benchmarks/prod.cpp: Add plainblock case.
	* benchmarks/prod_var.cpp: Renumber benchmark cases from (not 0).
	* benchmarks/vmul.cpp: Add scalar*vector case.
	* src/vsip/dense.hpp: Implement 2-arg and 3-arg get/put directly
	  instead of abstracting through Point. 
	* src/vsip/impl/dispatch-assign.hpp: Use Serial_dispatch for
	  matrices.  Decompose tensor assignment to matrix when dimension
	  ordering consistent.
	* src/vsip/impl/expr_serial_dispatch.hpp: Add transpose tag to
	  LibraryTagList.
	* src/vsip/impl/expr_serial_evaluator.hpp: Add general loop-fusion
	  matrix expression evaluator.  Add matrix transpose evaluator.
	* src/vsip/impl/fast-transpose.hpp: New file, cache-oblivious
	  transpose algorithm.
	* src/vsip/impl/ipp.cpp: Add wrappers for IPP scalar-view add, sub,
	  mul, div.
	* src/vsip/impl/ipp.hpp: Add evaluators for IPP scalar-view add, sub
	  mul, div.
	* src/vsip/impl/profile.hpp: Define DefaultTime::valid to indicate
	  if profile timer is enabled.
	* src/vsip/impl/vmmul.hpp: Add general evaluator for vector-matrix
	  multiply.  Decomposes into individual vector-vector or scalar-vector
	  multiplies.
	* tests/matvec-prod.cpp: Remove unnecessary include.
	* tests/scalar-view.cpp: New file, coverage tests for scalar-view
	  operators (+, -, *, /).

2005-12-21 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Don't build builtin FFTW3 when asked to use another
	  FFT library than FFTW3.

2005-12-21  Nathan Myers  <ncm@codesourcery.com>

	* configure.ac, vendor/fftw/simd/sse.c, vendor/fftw/simd/sse2.c:
	  enable using SSE/SSE2 on x86-64.
	* vendor/GNUmakefile.inc.in: improve build status reports.
	* configure.ac, GNUmakefile.in, tests/context.in:
	  rearrange -I, -L so compiler will find internal includes & libs
	  first, installed ones second, environment ones last.

2005-12-20  Stefan Seefeld  <stefan@codesourcery.com>

	* synopsis.py.in: Additional code not yet part of the last (0.8) release.

2005-12-20  Nathan Myers  <ncm@codesourcery.com>

	* configure.ac: Integrate FFTW3 configure.
	* vendor/GNUmakefile.inc.in: Integrate FFTW3 build and install.

2005-12-20  Don McCoy  <don@codesourcery.com>

	* GNUmakefile.in: moved variables for detecting libraries to here.
	* configure.ac: create additional output varibles for same.
	* benchmarks/GNUmakefile.inc.in: modified to remove tests that are
	  dependent on libraries that are not available.  fixed 'bench' to
	  only build those tests.  deleted debugging target.
	* benchmarks/dot.cpp: corrected evaluator tag for vector-vector 
	  dot product.
	* src/vsip/GNUmakefile.inc.in: moved variables to top-level makefile.
	* vendor/lapack/make.inc: removed.

2005-12-20 Jules Bergmann  <jules@codesourcery.com>

	Add missing conversions for Lvalue_proxy.  Fixes issue #51.
	* src/vsip/impl/lvalue-proxy.hpp: Add operator= specializations
	  for lvalues of complex.
	* tests/test.hpp: Add equal specialization for Lvalue_proxies.

	* tests/*.{hpp,cpp}: Use test_assert() instead of assert().
	* tests/output.hpp: Move definitions into vsip namespace.
	* src/vsip/impl/signal-fir.hpp: Fix Wall warnings.

2005-12-19 Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/signal.hpp: Include signal-iir.
	* src/vsip/impl/signal-iir.hpp: New file, direct implementation of
	  IIR filter.
	* tests/iir.cpp: New file, unit tests for IIR filter.

	* src/vsip/impl/signal-fir.hpp: Move obj_state enum to ...
	* src/vsip/impl/signal-types.hpp: ... here.

2005-12-19 Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/fastconv.cpp: Add new case using out-of-place FFT to
	  perform in-place FFTM.  Parallel this case and single-loop case.
	* benchmarks/fftm.cpp: New file, benchmarks for Fftm.
	* benchmarks/loop.hpp: Print case number to output.
	* benchmarks/main.cpp: Likewise.
	* benchmarks/vmmul.cpp: New file, benchmarks for vector-matrix mul.
	* benchmarks/vmul_ipp.cpp: Add benchmarks for in-place element-wise
	  vector multiply.
	* src/vsip/impl/dist.hpp: Add constructor taking number of subblocks.

2005-12-19  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Generate vsipl++.pc during installation.
	* vsipl++.pc.in: Adjust template to be used during installation.

2005-12-14  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile.in (maintainer_mode): New variable.  Do not define
	documentation variables in maintainer mode.
	(subdirs): Remove doc/tutorial.
	* configure.ac (maintainer-mode): New variable.
	(cpu_mhz): Fix typo in help string.
	* doc/GNUmakefile.inc.in: Build the tutorial here too.
	* doc/tutorial/tutorial.css: Remove.
	* doc/tutorial/GNUmakefile.inc.in: Likewise.

2005-12-14  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/tutorial/images/corner-turn.png: New file.
	* doc/tutorial/images/corner-turn.svg: New file.
	* doc/tutorial/src/corner-turn.hpp: New file.
	* doc/tutorial/src/user_block.hpp: New file.
	* doc/tutorial/optimization.xml: New file.
	* doc/tutorial/tutorial.css: Highlight remarks.
	* doc/tutorial/overview.xml: Center images.
	
2005-12-13 Jules Bergmann  <jules@codesourcery.com>

	* benchmarks/GNUmakefile.inc.in: Use EXEEXT and OBJEXT.
	* benchmarks/loop.hpp: Add missing include, use parallel.hpp
	  instead of impl/global_map.
	* src/vsip/impl/setup-assign.hpp: Make Holder_base destructor
	  inline.
	* tests/test.hpp: Fix test_assert to work with Greenhills.

2005-12-12  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile.in: Rely on csl-docbook/GNUmakefile.inc for DocBook
	rules.
	* doc/tex.dsl: Remove.
	* doc/wraptex: Likewise.

2005-12-12 Jules Bergmann  <jules@codesourcery.com>

	Implement 2-D correlation.
	* src/vsip/impl/signal-corr-common.hpp: Extend Is_corr_impl_avail
	  to include dimension.  Compute unbiased scaling factor directly
	  rather than by accumulation.  Implement 2-D correlation.
	* src/vsip/impl/signal-corr-ext.hpp: Implement 2-D correlation.
	* src/vsip/impl/signal-corr-opt.hpp: Update Is_corr_impl_avail.
	* src/vsip/impl/signal-corr.hpp: Implement 2-D correlation.
	* tests/corr-2d.cpp: New file, tests for 2-D correlation.
	* tests/correlation.cpp: Move common functionality into error_db
	  and ref_corr headers.
	* tests/error_db.hpp: New file, common impl of error_db function.
	* tests/ref_corr.hpp: New file, reference implementation of 1-D
	  and 2-D correlation.
	* tests/test.hpp (test_assert): New macro for assertions, not
	  disabled by NDEBUG.

	* src/vsip/impl/fns_scalar.hpp: Add scalar ite.
	* src/vsip/impl/fns_elementwise.hpp: Add element-wise ite.

2005-12-12  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Adjust for more robust 'install' target.
	* doc/tutorial/GNUmakefile.inc.in: Robustify 'install' target.
	* src/vsip/GNUmakefile.inc.in: Likewise.
	* doc/csl-docbook/xsl/html/csl.xsl: Remove debug output.

2005-12-06  Don McCoy  <don@codesourcery.com>

	* src/vsip/signal-window.cpp: replaced ramp, clip and frequency
	  swap inline code with library functions.
	* src/vsip/signal-window.hpp: deleted unneeded function
	  impl::frequency_swap().

2005-12-06 Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Fix typo.  Bump version to 0.95.

2005-12-05 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (CPPFLAGS): Add -I for ATLAS include directory.

2005-12-05 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Use with-lapack=PKGS to set lapack_trypkg.
	  Fix bug in determining my_abs_top_srcdir.

2005-12-05 Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Document configure options.
	* src/vsip/parallel.hpp: Put processor_set decl in vsip namespace.
	* tests/ref-impl/selgen.cpp: Use clip/invclip API in current spec.

2005-12-05  Don McCoy  <don@codesourcery.com>

	* src/vsip/signal.hpp: new header for histograms.
	* src/vsip/impl/signal-histogram.hpp: implements Histogram class
	  [signal.histo].
	* tests/histogram: new tests for above.

2005-12-05  Don McCoy  <don@codesourcery.com>

	* src/vsip/signal.hpp: added new header for freqswap.
	* src/vsip/impl/signal-freqswap.hpp: implements frequency
	  swapping functions [signal.freqswap].
	* tests/freqswap.cpp: tests for above.

2005-12-05 Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/support.hpp: Correct return type in declaration of
	  num_processors().  Move processor_set() declaration to ...
	* src/vsip/parallel.hpp: ... here.
	
2005-12-05 Jules Bergmann  <jules@codesourcery.com>

	Fix issue #96
	* src/vsip/impl/eval-blas.hpp: Perform row-major outer product
	  without changing input vectors.

2005-12-05 Jules Bergmann  <jules@codesourcery.com>

	Update parallel support functions to match parallel specification
	version 0.9.
	* src/vsip/map.hpp: Include global_map.  Change map interface
	  to match par spec version 0.9.
	* src/vsip/impl/global_map.hpp: Likewise.
	* src/vsip/impl/local_map.hpp: Likewise.
	* src/vsip/par-services.cpp: Add processor_set and local_processor
	  PSF functions.
	* src/vsip/support.hpp: Remove subblock_type.  Add distribution_type
	  other.
	* src/vsip/impl/dist.hpp: Add impl_global_from_local_index
	  members.  Use index_type instead of subblock_type.
	* src/vsip/impl/distributed-block.hpp: Remove subblocks_begin/end.
	  PSF name changes.
	* src/vsip/impl/view_traits.hpp: Add local() member function to views.
	* src/vsip/dense.hpp: Use index_type instead of subblock_type.
	* src/vsip/impl/expr_generator_block.hpp: Likewise.
	* src/vsip/impl/subblock.hpp: Likewise
	* src/vsip/impl/par-assign.hpp: PSF name changes.
	* src/vsip/impl/par-chain-assign.hpp: Likewise.
	* src/vsip/impl/par-expr.hpp: Likewise.
	* src/vsip/impl/par-foreach.hpp: Add in-place variation.  PSF name
	  changes.
	* src/vsip/impl/par-util.hpp: PSF name changes and updates.
	* src/vsip/impl/setup-assign.hpp: PSF name changes.

	Update tests to match parallel spec.
	* tests/appmap.cpp: PSF name changes.
	* tests/distributed-block.cpp: Likewise.
	* tests/distributed-subviews.cpp: Likewise.
	* tests/distributed-user-storage.cpp: Likewise.
	* tests/map.cpp: Likewise.
	* tests/par_expr.cpp: Likewise.
	* tests/util-par.hpp: Likewise.
	* tests/vmmul.cpp: Likewise.

	* benchmarks/loop.hpp: Support for parallel benchmarks.
	* benchmarks/fastconv.hpp: New file, benchmark for fast convolution.
	* benchmarks/mcopy.hpp: New file, benchmark for matrix copy.
	* benchmarks/prod_var.hpp: New file, benchmark for prod() variations.

2005-12-04 Jules Bergmann  <jules@codesourcery.com>

	* autogen.sh: check if vendor/atlas/autogen.sh is present before
	  running.
	* configure.ac: Always pull in IPP image-processing library
	  when IPP enabled.  Fix typo: with-atlas-libdir should enable
	  lapack.  Fix -I.../vendor/atlas/include for INT_CPPFLAGS to
	  be correct when srcdir is relative.
	* src/vsip/matrix.hpp (view_domain): New function, return domain
	  of view.
	* src/vsip/tensor.hpp: Likewise.
	* src/vsip/impl/ipp.cpp (conv_full_2d, conv_valid_2d): New
	  functions, wrappers for 2-D IPP convolutions.
	* src/vsip/impl/ipp.hpp: Likewise.
	* src/vsip/impl/signal-conv-common.hpp (Is_conv_impl_avail):
	  Add template parameter for convolution dimension.
	  (conv_kernel): New function overload for 2D kernels.
	  (conv_full, conv_same, conv_min): New functions, generic
	  2D convolutions for different regions of support.
	  (conv_same_edge): New function, perform edge portion of
	  same-support convolution.
	  (conv_same_example): New function, example of using
	  conv_min and conv_same_edge to perform conv_same.
	* src/vsip/impl/signal-conv-ext.hpp: Implement 2-D convolution.
	* src/vsip/impl/signal-conv-ipp.hpp: Likewise.
	* src/vsip/impl/signal-conv-sal.hpp: Update Is_conv_impl_avail.
	* src/vsip/impl/signal-conv.hpp: Likewise.
	* tests/conv-2d.cpp: New file, unit tests for 2-D convolution.
	
	* src/vsip/impl/eval-blas.hpp: Fix Wall warnings.
	* src/vsip/impl/matvec.hpp: Likewise.
	
2005-12-02 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Cleanup handling of lapack options by
	  merging --enable-lapack functionality into --with-lapack.

2005-12-01 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (with-mkl-arch): New option to set MKL arch library
	  sub-directory.  Default is to deduce arch based on host_cpu.
	  (--disable-cblas): New option to disable use of CBLAS API and
	  use fortran BLAS API instead.  Default is to use CBLAS API,
	  which avoids problems with calling fortran functions from C++.
	  (--with-g2c-path): New option to specify path for libg2c.a.
	  (VSIP_IMPL_FORTRAN_FLOAT_RETURN): New AC_DEFINE for the C
	  return type of a fortran real function.
	  (--with-mkl-prefix): Change behavior, previously PATH was
	  the library directory, now it is the prefix above library
	  and include directories.  Old help string was correct.
	* GNUmakefile.in: Substitute INT_CPPFLAGS.
	* tests/context.in: Likewise.
	* src/vsip/impl/lapack.hpp: Support CBLAS API.
	* vendor/GNUmakefile.inc.in: Install ATLAS cblas header.
	* vendor/lapack/make.inc.in: Substitute FFLAGS.

2005-12-01 Jules Bergmann  <jules@codesourcery.com>

	Integrate ATLAS and LAPACK into VSIPL++ source tree.
	* autogen.sh: process configure.ac in vendor/atlas directory.
	* configure.ac: Configuration support for builtin lapack library.
          (disable-builtin-lapack): New option to disable
	  consideration of builtin lapack (ATLAS).
	  (--with-lapack): New option to specify lapack library(libraries)
	  to consider.
	* GNUmakefile.in (LDFLAGS): Add internal ld flags (@INT_LDFLAGS@).
	  (libs): New target for libraries necessary to build executables.
	* src/vsip/GNUmakefile.inc.in (libs): Add dependency to
	  src/vsip/libvsip.a
	* examples/GNUmakefile.inc.in: Add dependency to 'libs' target.
	* tests/GNUmakefile.inc.in (check): Add dependency to libs.
	* tests/context.in (cxx_options): Add internal ld flags (@INT_LDFLAGS@)
	* vendor/GNUmakefile.inc.in: New file, brige from VSIPL++
	  integrate makefile to ATLAS and LAPACK build/make.

	Autoconf for ATLAS.
	* vendor/atlas/autogen.sh: New file, generate vendor/atlas
	  configure scripts.
	* vendor/atlas/configure.ac: New file, autoconf script for ATLAS.
	* vendor/atlas/csl-scripts/convert-makefile.pl: New file, convert
	  ATLAS makes/Make.xxx files to CSL Makefile.in files.
	* vendor/atlas/csl-scripts/create-makeinc.pl: New file, create
	  per-directory Make.inc files.
	* vendor/atlas/csl-scripts/convert.sh: New file, wrapper around
	  convert-makefile.pl and create-makeinc.pl.  Called by autogen.sh.
	* vendor/atlas/GNUmakefile.in: New file, top-level makefile for
	  ATLAS.
	* vendor/atlas/Make.ARCH.in: New file, template Make.ARCH file.
	* vendor/atlas/bin/ATLrun.sh.in: New file, script to run executable.

	* vendor/atlas/tune/blas/gemm/tfc.c: Fix bug causing heap
	  corruption.

	Misc. changes to build atlas out of the source directory
	and prevent compiler warnings.
	* vendor/atlas/makes/Make.bin: Support build dir different from
	  source dir.
	* vendor/atlas/tune/blas/gemm/emit_mm.c: Increase string size to
	  avoid overrun.  Support build dir different from source dir.
	* vendor/atlas/bin/atlas_install.c: Assert that defaults are found.
	* vendor/atlas/bin/atlas_tee.c: Add missing include.
	* vendor/atlas/bin/atlas_waitfile.c: Likewise.
	* vendor/atlas/bin/ccobj.c: Likewise.
	* vendor/atlas/include/contrib/ATL_gemv_ger_SSE.h: Likewise.
	* vendor/atlas/src/auxil/ATL_buildinfo.c: Likewise.
	* vendor/atlas/tune/blas/gemm/usercomb.c: Likewise.
	* vendor/atlas/tune/blas/gemv/gemvtune.c: Likewise.
	* vendor/atlas/tune/blas/ger/ger1tune.c: Likewise.
	* vendor/atlas/tune/blas/gemv/mvsearch.c: Add missing include,
	  automatically rerun if variation exceeds tolerance.
	* vendor/atlas/tune/blas/ger/r1search.c: Likewise.
	* vendor/atlas/tune/blas/gemm/ummsearch.c: Support build dir
	  different from source dir.
	* vendor/atlas/tune/blas/gemm/userindex.c: Likewise.
	* vendor/atlas/tune/blas/level1/asumsrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/axpbysrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/axpysrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/copysrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/cpscsrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/dotsrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/iamaxsrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/nrm2srch.c: Likewise.
	* vendor/atlas/tune/blas/level1/rotsrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/scalsrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/setsrch.c: Likewise.
	* vendor/atlas/tune/blas/level1/swapsrch.c: Likewise.
	* vendor/atlas/tune/sysinfo/masearch.c: Add missing headers.
	  Put missing headers in generated programs.

	Fit LAPACK into autoconf build.
	* vendor/lapack/make.inc.in: LAPACK make include template.
	* vendor/lapack/SRC/GNUmakefile.in: New file, Makefile
	  template for LAPACK.

2005-11-30  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/matvec.hpp: added modulate function [math.matvec.misc].
	* tests/matvec.cpp: new tests for same.

2005-11-28  Don McCoy  <don@codesourcery.com>

	* configure.ac: corrected macro for detecting presence of SAL
	* src/vsip/impl/sal.hpp: added convolution function overloaded
	  for float and complex<float>.
	* src/vsip/impl/signal-conv-sal.hpp: new file.  implements 
	  convolution using Mercury SAL library.
	* src/vsip/impl/signal-conv.hpp: searches for SAL tag when
	  choosing convolution functions.
	* tests/convolution.cpp: added new tests for support of 
	  non-unit stride data.

2005-11-28 Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/extdata.hpp (is_direct_ok): Merge if statements to
	  avoid GHS warnings about unreachable statements.
	* configure.ac: Set configure's internal variables for object and
	  executable extenions.
	
2005-11-22  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/complex.hpp: Fix for ghs.

2005-11-17  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fns_elementwise.hpp: Fix for ghs.
	* src/vsip/complex.hpp: Add missing functions.
	* tests/complex.cpp: Test them.

2005-11-16  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/QMTest/vxworks.py: New infrastructure for cross-testing.

	* src/vsip/support.hpp: Qualify call to fatal_exception()
	* src/vsip/impl/fns_userelt.hpp: Fix use of 
	std::pointer_to_unary_function
	* tests/util-par.hpp: Replace use of cbrt(x) by exp(log(x)/3)
	
2005-11-15  Don McCoy  <don@codesourcery.com>

	* tests/matvec-prod.cpp: added tests for special cases such
	  as split complex layout and subviews (different strides).
	* src/vsip/impl/eval-sal.hpp: new file.  dispatch routines
	  for matrix/vector products, outer and gemp.
	* src/vsip/impl/matvec-prod.hpp: include eval-sal.hpp.
	* src/vsip/impl/matvec.hpp: include eval-sal.hpp and math-enum.hpp.
	* src/vsip/impl/sal.hpp: added new overloaded translation 
	  functions for matrix/vector products, outer and gemp.

2005-11-14  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/map.hpp: Change case ordering in switch statement to always have
	a return value.
	* src/vsip/support.hpp: Enable __attribute__((__noreturn__)) for ghs.
	* src/vsip/impl/dist.hpp: Remove obsolete dummy return statements.

2005-11-11  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fns_elementwise.hpp: Enable unary operators only for
	view types.
	* tests/vector.cpp: Add missing tests for unary operators.

2005-11-11 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (VSIP_IMPL_FIX_MISSING_ABS): New define, set if
	  missing std::abs overloads for float and double.
	* src/vsip/impl/fns_scalar.hpp (mag, magsq): Use abs_detail::abs
	  instead of std::abs.  Set abs_detail::abs based on
	  VSIP_IMPL_FIX_MISSING_ABS.
	* src/vsip/impl/general_dispatch.hpp: When dispatch fail, throw
	  exception rather than assert.
	* tests/test.hpp: Use vsip::mag instead of std::abs.
	
2005-11-11  Don McCoy  <don@codesourcery.com>

	* tests/sal-assumptions.cpp: corrected unconditional dependency on SAL.

2005-11-11  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/vector.hpp: Work around ghs bug.
	* doc/csl-docbook/xsl/html/csl.xsl: Fix tutorial building outside the
	source tree.

2005-11-10  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/tutorial/*: New tutorial sources.
	* GNUmakefile.in: Build it.
	* doc/csl-docbook/xsl/html/csl.xsl: Fine tune xslt parameters.
	* configure.ac: Allow to explicitely set object and executable extensions.
	* src/vsip/map.hpp: Add missing exception-specifiers.
	* src/vsip/impl/fns_scalar.hpp: Include <cstdlib> to work around ghs issue.
	
2005-11-10  Don McCoy  <don@codesourcery.com>

	* tests/matvec-prod.cpp: Re-arranged tests to avoid running tests
	  repeatedly with the same ordering.  Added tests for vector-matrix
	  and matrix-vector products.
	* tests/matvec.cpp: added test for outer().
	* tests/ref_matvec.hpp: modified ref::outer() to conjugate complex
	  values.  Added vector-vector product to use for matrix-matrix
	  product.  Added v-m and m-v products as well.
	* src/vsip/impl/eval-blas.hpp: Added evaluators for BLAS outer,
	  m-v prod, v-m prod and general matrix multiply (gemm).  Fixed
	  a bug in the runtime check for m-m prod that only affected
	  col-major cases.
	* src/vsip/impl/general_dispatch.hpp: Added operation tags for
	  m-v and v-m products.  New implementation tag for SAL.  New
	  wrapper classes for operand lists of 3 and 4 arguments along
	  with the corresponding dispatch classes.
	* src/vsip/impl/lapack.hpp: Included prototypes for gemv and ger
	  BLAS functions with overloaded wrappers for calling them.
	* src/vsip/impl/matvec-prod.hpp: Added generic evaluators for
	  m-v and v-m products.  Added dispatch functions for same.
	* src/vsip/impl/matvec.hpp: Same as above for outer and gemp.

2005-11-02 Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/block-copy.hpp: Extend Block_fill to handle
	  distributed blocks and 1-dim blocks.
	* src/vsip/impl/block-traits.hpp: Add Is_par_reorg_ok trait.
	* src/vsip/impl/dispatch-assign.hpp: Use Is_par_reorg_ok to determine
	  if parallel expression can be reorganized.
	* src/vsip/impl/dist.hpp: Add missing body for Whole_dist constructor.
	* src/vsip/impl/distributed-block.hpp: Implement release and find
	  for Distributed_block.
	* src/vsip/impl/expr_binary_block.hpp: Specialize Is_par_reorg_ok
	  for binary expressions.
	* src/vsip/impl/expr_ternary_block.hpp: Define parallel traits
	  and functions (Distributed_local_block, get_local_block,
	  Combine_return_type, apply_combine, apply_leaf, Is_par_same_map,
	  and Is_par_reorg_ok).
	* src/vsip/impl/expr_unary_block.hpp: Likewise.
	* src/vsip/impl/global_map.hpp: Specialize Is_global_only and
	  Map_equal for Global_maps.
	* src/vsip/impl/local_map.hpp: Specialize Is_local_only and
	  Is_global_only for Local_maps.
	* src/vsip/impl/map-traits.hpp: New file, traits for maps.
	* src/vsip/impl/subblock.hpp (Diag_block): Use size() to compute
	  size(1, 0).
	* src/vsip/impl/vmmul.hpp: Use expression template block to evaluate
	  vmmul.
	* src/vsip/map.hpp: Add map_equiv, like op== but only requires
	  processors match upto number of subblocks.  Use for Map_equal.
	* src/vsip/vector.hpp: Use Block_fill for scalar assignment.
	* tests/distributed-subviews.cpp (dump_map): Move from ...
	* tests/util-par.hpp: ... to here.
	* tests/util-par.hpp: Update dump_view to single subblock per
	  processor.  Fix Check_identity to work with negative k.
	* tests/extdata-output.hpp: Recognize Global_map, Local_map, and
	  Local_or_global_map.
	* tests/par_expr.cpp: Extend coverage to parallel expressions with
	  unary and ternary operators.
	* tests/vmmul.cpp: Add coverage for parallel vmmul cases.

2005-10-31  Stefan Seefeld  <stefan@codesourcery.com>

	* synopsis.py.in: New synopsis driver script.
	* GNUmakefile.in: Add rules for ref manual generation via synopsis.
	* configure.ac: Fix typo in help string.
	* src/vsip/impl/subblock.hpp: Adjust code to make it synopsis-parsable.
	* tests/QMTest/vpp_database.py: Fix typo.
	
2005-10-28 Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/lapack.hpp: Treat FORTRAN functions returning
	  complex values as subroutines.

2005-10-27  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/ipp.cpp, sal.cpp: remove inglorious #ifdefs, defer
	  to src/vsip/GNUmakefile.in.inc.
	* src/vsip/impl/signal-fir.hpp: document FIR driver control flags,
	  remove FIXME for logged spec bug.

2005-10-25  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/ipp.cpp, src/vsip/impl/signal-fir.hpp:
	  Use native C++ FIR code for all types and modes not supported 
	  by IPP FIR.  Confine Intel ipp*.h includes to ipp.cpp where
	  users' code will not be exposed to them.

2005-10-24  Nathan Myers  <ncm@codesourcery.com>

	* configure.ac: fix help for "--enable-profile-timer".
	* src/vsip/impl/sal.cpp: #if out if SAL not configured.
	* src/vsip/impl/signal-fir.hpp: robustify assertions; make copy-ctor
	  copy output size, fix overload ambiguity copying state_ member; 
	  make op= return *this; make reset() clear state more thoroughly. 
	* tests/fir.cpp: test copy ctor more thoroughly.
	* benchmarks/fir.cpp: new.
	* benchmarks/loop.hpp: quiet printf-format warnings.

2005-10-14  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/ipp.hpp: Explicitely test for Cmplx_inter_fmt as IPP
	doesn't support Cmplx_split_fmt.
	* doc/Doxyfile: Transformed into...
	* doc/Doxyfile.in: ...this to generate the correct path to the sources
	during configure.
	* doc/GNUmakefile.inc.in: Use the generated Doxyfile.

2005-10-14  Don McCoy  <don@codesourcery.com>

	* configure.ac (--enable-sal, --with-sal-include, --with-sal-lib):
	  New options to add support for SAL.
	* src/vsip/GNUmakefile.inc.in: conditionally added sal.cpp.
	* src/vsip/impl/expr_serial_dispatch.hpp: added mercury SAL tag.
	* src/vsip/impl/expr_serial_evaluator.hpp: likewise.
	* src/vsip/impl/sal.cpp: new file, wrappers for +-*/ incl. for
	  real, complex and complex-split types.
	* src/vsip/impl/sal.hpp: likewise.
	* tests/elementwise.cpp: new tests for external libraries providing
	  elementwise funtions.
	* tests/sal-assumptions.cpp: verifies assumptions regarding complex
	  split layout when using SAL library.

2005-10-13  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fir.hpp: use IPP FIR support where available.
	* tests/fir.cpp: forgive FFT noise on big samples.

2005-10-12 Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (--with-atlas-prefix, --with-atlas-libdir): New
	  options to specify ATLAS prefix and/or libdir.  Add support to use
	  ATLAS for BLAS and LAPACK.  Change trypkg search order for mkl7
	  and mkl5.

2005-10-12 Jules Bergmann  <jules@codesourcery.com>

	Implement General_dispatch (similar to Serial_expr_dispatch),
	Use for dot- and matrix-matrix products.
	* configure.ac (VSIP_IMPL_HAVE_BLAS, VSIPL_IMPL_HAVE_LAPACK):
	  Define if if BLAS/LAPACK libraries present.
	* src/vsip/impl/eval-blas.hpp: New file, BLAS evaluators for
	  dot-product and matrix-matrix product.
	* src/vsip/impl/general_dispatch.hpp: New file, generalized
	  dispatch of functions to various implementations.
	* src/vsip/impl/lapack.hpp: Add dot-product and matrix-matrix
	  product functions.  Mover error handler xerbla_ into lapack.cpp
	* src/vsip/impl/matvec.hpp: Use general dispatch for dot products.
	  Provide default generic evaluator.
	* src/vsip/impl/matvec-prod.hpp: Use general dispatch for
	  matrix-matrix products.  Provide default generic evaluator.
	* src/vsip/impl/signal-conv-common.hpp (Generic_tag, Opt_tag: Change 
	  to forward decls.
	* src/vsip/lapack.cpp: New file, contains xerbla_.
	* tests/matvec-dot.cpp: New file, tests for dot() and cvjdot().
	* tests/matvec-prod.cpp: Extend to cover different dimension-orders.
	  (row-major and col-major).  Move reference routines to ref_matvec.
	* tests/ref_matvec.hpp: New file, reference matvec routines.
	* tests/test-random.hpp (randv): New function, fill a vector
	  with random values.
	* tests/extdata-output.hpp: Optionally use typeid, handle const
	  types, provide more details for Dense, and handle Unary_expr_block
	  type.

	* benchmarks/dot.cpp: New file, benchmark for dot product.
	* benchmarks/prod.cpp: New file, benchmark for matrix-matrix products.

2005-10-09  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fir.hpp: support Fir<>::impl_performance()
	  command "count".
	* tests/fir.cpp: add tests for accessors, default template arg.

2005-10-09  Nathan Myers  <ncm@codesourcery.com>

	Implement FIR filter, all modes.
	* src/vsip/impl/signal-fir.hpp, tests/fir.cpp: New.
	* src/vsip/signal.hpp: Include new impl/signal-fir.hpp.

2005-10-06  Jules Bergmann  <jules@codesourcery.com>

	Implement 1-D correlation.
	* src/vsip/impl/signal-conv-common.hpp (Opt_tag): Add optimized
	  implementation tag.
	* src/vsip/impl/signal-corr-common.hpp: New file, common routines
	  and decls for correlation.
	* src/vsip/impl/signal-corr-ext.hpp: New file, generic correlation
	  implementation using Ext_data interface.
	* src/vsip/impl/signal-corr-opt.hpp: New file, optimized correlation
	  implementation using FFT overlap-add.
	* src/vsip/impl/signal-corr.hpp: New file, correlation class.
	* src/vsip/signal.hpp: Include signal-corr.hpp.
	* src/vsip/impl/signal-types.hpp (bias_type): New type for correlation.
	* src/vsip/matrix.hpp: Pass view by value to op-assign operators.
	* src/vsip/tensor.hpp: Likewise.
	* src/vsip/vector.hpp: Likewise.
	* src/vsip/impl/domain-utils.hpp (normalize): New functions to
	  normalize a domain to offset=0, stride=1, and length=same.
	* src/vsip/impl/metaprogramming.hpp (Complex_of): Convert a type
	  to complex.
	* tests/correlation.cpp: New file, unit tests for correlation.
	* benchmarks/corr.cpp: New file, benchmark correlation cases.

2005-10-05  Jules Bergmann  <jules@codesourcery.com>

	Support symmetric convolution kernels.
	* src/vsip/impl/signal-conv-common.hpp (conv_kernel): Build
	  convolution kernel from symmetry and coefficients.
	  (VSIP_IMPL_CONV_CORRECT_MIN_SUPPORT_SIZE): control whether
	  convolution minimum support output size should be defined
	  to not require elements outsize of input vector or follow spec.
	  (conv_output_size): Use ^ when computing output size.
	  (conv_min): Use safe algorithm when ^ indicates to follow spec.
	* src/vsip/impl/signal-conv-ext.hpp: Use conv_kernel to apply
	  symmetry to coefficients.
	* src/vsip/impl/signal-conv-ipp.hpp: Likewise.
	* tests/convolution.cpp: Generalize test to symmetric kernels
	  and to decimations other than 1.
	
	* tests/matvec.cpp: Fix Wall warning.

2005-10-03  Don McCoy  <don@codesourcery.com>
	
	* src/vsip/impl/matvec.hpp: added outer product, gemp,
	  gems and cumsum.
	* tests/matvec.cpp: added tests for gemp, gems and
	  cumsum which are not covered in ref-impl tests.
	
2005-10-03  Jules Bergmann  <jules@codesourcery.com>

	Work arounds for ICC 9.0 compilation errors.
	* src/vsip/selgen.hpp: Determine clip and invclip return type
	  through helper classes.
	* src/vsip/impl/fns_elementwise.hpp: Use single function and
	  operator^().  Have functor distinguish bxor and lxor cases.
	* src/vsip/impl/fns_userelt.hpp: For function object overloads of
	  unary, binary, and ternary functions, determine return values
	  through helper classes. (Fixes issue #53).

2005-09-30  Jules Bergmann  <jules@codesourcery.com>

	Implement LU linear system solver.
	* src/vsip/impl/solver-lu.hpp: New file, LU solver.
	* src/vsip/solvers.hpp: Include solver-lu.
	* src/vsip/impl/lapack.hpp: Add LAPACK routines for LU solver
	  (getrf and getrs).
	* tests/solver-lu.cpp: New file, unit tests for LU solver.

	* tests/load_view.hpp: New file, load view utility.
	* tests/save_view.hpp: New file, save view utility.

	* src/vsip/impl/solver-cholesky.hpp: Use stride to determine
	  leading dimension.

2005-09-30  Jules Bergmann  <jules@codesourcery.com>

	Implement toeplitz linear system solver.
	* src/vsip/solvers.hpp: Include solver-toepsol.
	* src/vsip/impl/fns_scalar.hpp: Implement impl_conj, impl_real,
	  and impl_imag functions that work with both scalar and complex.
	* src/vsip/impl/fns_elementwise.hpp: Likewise.
	* src/vsip/impl/solver-toepsol.hpp: New file, toeplitz solver.
	* tests/solver-toepsol.cpp: New file, test for toeplitz solver.

2005-09-28  Don McCoy  <don@codesourcery.com>
	
	* src/vsip/impl/matvec-prod.hpp: added prod3, prod4,
	  prodh, prodj and prodt.
	* tests/matvec-prod.cpp: added tests for same.
	
2005-09-28  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/fft-core.hpp: Make IPP FFT work for 2D FFT. 
	  Make unimplemented IPP driver functions report failure.
	* src/vsip/signal-fft.hpp: Initialize scale member early enough 
	  for IPP create_plan use.
	* tests/fftm.cpp: Enable tests for complex->real, real->complex.
	* tests/fft.cpp: Add comprehensive testing:
	   (2D, 3D) x ((cx->cx fwd, inv), ((re->cx, cx->re) x (all axes))) 
	   x (Dense/row-major, Dense/column-major, Fast_block)
	   x (single,double) x (in-place, by_reference, by_value) 
	   x (unscaled, arbitrary-scaled, scaled by N)
	Tested with gcc-3.4/em64t/IPP and gcc-4.0.1/x86/FFTW3.

2005-09-28  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/block-traits.hpp (View_block_storage):
	  Add 'With_rp' template typedef to specify ref-count policy.
	* src/vsip/impl/extdata.hpp: Use View_block_storage::With_rp to
	  apply ref-count policy for block being held.

2005-09-27  Nathan Myers  <ncm@codesourcery.com>

	* tests/extdata-fft.cpp, tests/fft.cpp, tests/fftm-par.cpp,
	  tests/fftm.cpp: #if out tests that depend on FFT where FFT
	  is not enabled; add tests for double-precision; return 0
	  at end of main().

2005-09-27  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: fix compilation/instantiation typo
	  in 2D by-value FFT.
	* src/vsip/impl/fft-core.hpp: fix IPP FFT scaling-request flag.

2005-09-27  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/dense.hpp: Remove redundant header inclusion.
	* src/vsip/impl/expr_functor.hpp: Add missing header inclusion.
	* src/vsip/impl/matvec.hpp: Add missing header inclusions.
	* src/vsip/impl/view_traits.hpp: Fix view forward-declarations.
	* src/vsip/vecor.hpp: Add generic get/put functions.
	* src/vsip/matrix.hpp: Likewise.
	* src/vsip/tensor.hpp: Likewise.
	* tests/test.hpp: Add view_equal functions.
	* src/vsip/selgen.hpp: Implement [selgen] functions.
	* tests/selgen.cpp: Test them.

2005-09-27  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Add -lpthread for MKL 5.x.
	* src/vsip/solvers.hpp: Include solver-svd.
	* src/vsip/impl/lapack.hpp: Add LAPACK routines for SVD (gebrd,
	  orgbr/ungbr, sbdsqr).  Replace assertions on LAPACK info with
	  exceptions.
	* src/vsip/impl/matvec.hpp: Add trans_or_herm() function.
	* src/vsip/impl/metaprogramming.hpp: Add Bool_type to encapsulate
	  a bool as a type.
	* src/vsip/impl/solver-svd.hpp: New file, implement SVD solver.
	* src/vsip/impl/subblock.hpp (Diag::size): Check block_d argumment.
	* tests/solver-common.hpp: Add compare_view functions.  Define
	  perferred tranpose for value type (regular or conjugate) in
	  Test_traits.
	* tests/solver-svd.cpp: New file, unit tests for SVD solver.

2005-09-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/math.hpp: Include expr_generator_block.hpp
	* src/vsip/selgen.hpp: New file, implement ramp.
	* src/vsip/impl/expr_generator_block.hpp: New file, generator
	  expression block.
	* tests/selgen-ramp.cpp: New file, tests for ramp().

2005-09-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/vmmul.hpp: New file, implements vmmul.
	* src/vsip/math.hpp: Inlcude vmmul.hpp.
	* tests/vmmul.cpp: New file, unit tests for vmmul.

	* apps/sarsim/sarsim.hpp: Align frame buffers.  Report signal
	  processing object performance.
	* benchmarks/conv.cpp: Make kernel length a command-line parameter.
	* benchmarks/fft.cpp: Benchmark in-place vs out-of-place FFTs.
	* src/vsip/parallel.hpp: New file, single header to pull in
	  parallel bits.
	* src/vsip/vector.hpp: Have op-assigns go through dispatch
	  when possible.
	* src/vsip/impl/par-foreach.hpp: New file, implement parallel
	  foreach.
	* src/vsip/impl/signal-conv.hpp: Add 'time' query to impl_perf.
	* src/vsip/impl/signal-fft.hpp: Likewise.
	* src/vsip/impl/solver-covsol.hpp: Throw computation error
	  if decomposition fails.
	* src/vsip/impl/subblock.hpp (get_local_block): Properly handle
	  a Subset_block with a by-value superblock.
	* tests/extdata-output.hpp: Specializations for subblocks and
	  layout.

2005-09-26  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fns_elementwise.hpp: Define binary operator^.
	* tests/view_operators.cpp: Test it.

2005-09-23  Jules Bergmann  <jules@codesourcery.com>

	* VERSIONS: New file, describes varius CVS tagged versions of
	  the software.  Recorded V_0_9 tag.

2005-09-21  Don McCoy  <don@codesourcery.com>
	
	Corrections to pass fft_ext tests.
	* src/vsip/signal-window.cpp: cleaned up an unneeded type
	* tests/window.cpp: added conditional directive for FFT.
	* tests/fft_ext/fft_ext.cpp: cleaned up so that it will
	  deduce the fft type from the first two letters of filename.
	  Also now runs on single and double precision by default.

2005-09-21  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/ipp.cpp (vsub, vdiv): Swap operands (IPP operands in
	  in "reverse" order).
	* src/vsip/impl/ipp.hpp (Serial_evaluator_base): Check that all
	  operands have the same type.
	
	* src/vsip/profile.cpp (No_time::clocks_per_sec): Define it when
	  VSIP_IMPL_PROFILE_TIMER == 0.

	* configure.ac: Make MPI, IPP, FFTW2, FFTW3, LAPACK, MKL, and
	  profile timer disabled by default.  Make --with-ipp-suffix
	  optional.
	* src/vsip/impl/signal-window.cpp: Remove unused variable, use
	  index_type to iterate over blackman indices.
	* src/vsip/impl/signal-fft.hpp: Move definition of member scale_
	  outside #if to allow compilation with no FFT engines defined.

2005-09-20  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/QMTest/vpp_database.py: Make qmtest properly scan
	  subdirectories.

2005-09-19  Don McCoy  <don@codesourcery.com>
	
	Implemented functions from [signal.windows]
	* src/vsip/signal.hpp: includes impl/signal-window.hpp.
	* src/vsip/impl/signal-window.hpp: new file.
	* src/vsip/signal-window.cpp: new file.
	* tests/window.cpp: new unit tests.

2005-09-19  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/fft-core.hpp: minor format cleanup, documentation
	  improvements.

2005-09-19  Nathan Myers  <ncm@codesourcery.com>

	* configure.ac: replace all --enable-fftw* and --enable-ipp-fft with
	  --with-fft={fftw3,fftw2-float,fftw2-double,fftw2-generic,ipp}.
	  Enable building with fftw2-double.  Add --with-ipp-suffix, and 
	  require it if using IPP.

2005-09-19  Don McCoy  <don@codesourcery.com>

	Added support for dot, trans and kron functions in [math.matvec]
	* src/vsip/math.hpp: included impl/matvec.hpp
	* src/vsip/impl/matvec.hpp: new file
	* tests/matvec.cpp: new file 

2005-09-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/copy_chain.cpp, src/vsip/domain.hpp,
	  src/vsip/impl/fft-core.hpp, src/vsip/impl/global_map.hpp,
	  src/vsip/impl/local_map.hpp, src/vsip/impl/signal-conv.hpp,
	  src/vsip/impl/signal-fft.hpp, tests/distributed-subviews.cpp,
	  tests/expression.cpp, tests/extdata-matadd.cpp,
	  tests/extdata-subviews.cpp, tests/extdata.cpp, tests/fft.cpp,
	  tests/fftm-par.cpp, tests/fftm.cpp, tests/initfini.cpp,
	  tests/solver-cholesky.cpp, tests/solver-common.hpp,
	  tests/solver-llsqsol.cpp, tests/solver-qr.cpp,
	  tests/static_assert.cpp, tests/tensor_subview.cpp,
	  tests/fft_ext/fft_ext.cpp: Cleanup.

2005-09-18  Jules Bergmann  <jules@codesourcery.com>

	* tests/tensor-tranpose.cpp (USE_TRANSPOSE_VIEW_TYPEDEF): Work
	  around conflicting GCC/ICC requirements for 'typename' keyword.
	  (HAVE_TRANSPOSE): remove it.
	* tests/test-precision.hpp: Make temporaries volatile to avoid
	  ICC FP optimization that artificially increases precision
	  while measuring precision.

2005-09-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: Fix signatures to allow temporary
	  views as destinations for Fft and Fftm.
	* tests/regr_fft_temp_view.cpp: New file, regression for above bug.

2005-09-17  Nathan Myers  <ncm@codesourcery.com>

	* tests/fftm-par.cpp: robustify against mysterious behavior
	  in sethra lam mpi.
	
2005-09-17  Mark Mitchell  <mark@codesourcery.com>

	* doc/quickstart/quickstart.xml: Mention FFTW, IPP, MKL, and
	ATLAS.

	* scripts/src-release: Add -v parameter.
	* GNUmakefile.in: Adjust default HTML rule.
	* doc/GNUmakefile.inc.in: Do not conditionalize manual
	generation. 

	* configure.ac (XEP): Just look for "xep".
	* GNUmakefile.in (XSLTPROCFOFLAGS): Fix typo.
	(%.pdf): Do not use -out with XEP.

	* GNUmakefile.in (JADE): Define to empty.
	(PDFJADETEX): Likewise.
	(XSLTPROCFLAGS): Rename to ...
	(XSLTPROCFOFLAGS): ... this.
	(%/html/index.html): Rename to ...
	(%.html): ... this.
	(%.fo): Use XLSTPROCFOFLAGS.
	(%.pdf): Provide rule to copy from the srcdir.
	(%.html): Likewise.
	(GNUmakefile): Add more dependencies.
	* configure.ac (JADE): Don't check for it.
	(PDFJADETEX): Likewise.
	* doc/GNUmakefile.inc.in (install): Handle chunked HTML files.
	
	* GNUmakefile.in (DOCBOOK_DTD): Remove.
	(%/html/index.html): New rule.
	* configure.ac: Remove conflicts.

	* doc/quickstart/quickstart.xml: Add version variable.
	Use it throughout.  Adjust formatting.  Remove FIXMEs.

2005-09-17  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/fft-core.hpp: '-Wall' cleanup.
	* tests/fft_ext/fft_ext.cpp: Likewise.

2005-09-17  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Fix typo.

2005-09-17  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: fix a real->complex FFTM
	  stride bug detected by ref-impl/fft-coverage.hpp.

2005-09-16  Jules Bergmann  <jules@codesourcery.com>
	
	* src/vsip/impl/aligned_allocator.hpp (VSIP_IMPL_ALLOC_ALIGNMENT):
	  Macro for default alignment.
	* src/vsip/impl/signal-conv-common.hpp: Use accumulation trait.
	* src/vsip/complex.hpp: Cleanup.
	* src/vsip/matrix.hpp: Cleanup.
	* src/vsip/tensor.hpp: Cleanup.
	* src/vsip/vector.hpp: Cleanup.
	* src/vsip/impl/block-copy.hpp: Cleanup.
	* src/vsip/impl/extdata.hpp: Cleanup.
	* src/vsip/impl/lvalue-proxy.hpp: Cleanup.
	* src/vsip/impl/par-assign.hpp: Cleanup.
	* src/vsip/impl/par-chain-assign.hpp: Cleanup.
	* src/vsip/impl/par-expr.hpp: Cleanup.
	* src/vsip/impl/par-services-mpi.hpp: Cleanup.
	* src/vsip/impl/reductions.hpp: Cleanup.
	* src/vsip/impl/refcount.hpp: Cleanup.
	* src/vsip/impl/signal-conv-ext.hpp: Cleanup.
	* src/vsip/impl/signal-conv-ipp.hpp: Cleanup.
	* src/vsip/impl/solver-qr.hpp: Cleanup.
	* src/vsip/impl/subblock.hpp: Cleanup.
	
2005-09-16  Jules Bergmann  <jules@codesourcery.com>

	Implement distributed user-storage.
	* src/vsip/impl/distributed-block.hpp: User-storage functionality,
	  pass admit, release through to subblock.
	* src/vsip/dense.hpp: Add user-storage constructor for distributed
	  blocks.
	* tests/distributed-user-storage.cpp: Unit tests for distributed
	  user-storage.

	* src/vsip/impl/copy_chain.hpp (append_offset): New member function,
	  append a chain, with an offset to each member.
	* src/vsip/copy_chain.cpp (append_offset): Implement it.
	* src/vsip/impl/par-chain-assign.hpp: Build send and recv lists
	  relative to the base address of the subblock.  Offset those lists
	  when message is sent.  Allows chain to be used even if location of
	  storage changes, necessary for distributed user-storage blocks.
	  Use dimension-ordering when building chain.  Clear req_list.
	* src/vsip/impl/par-services-mpi.hpp (Chain_builder::add): Take
	  offset instead of address for new chain element.
	* src/vsip/impl/par-services-none.hpp (Chain_builder::add): Likewise.

	* src/vsip/map.hpp (impl_local_only, impl_global_only): Delineate
	  local vs global maps.
	* src/vsip/impl/global_map.hpp (Local_or_global_map): New map
	  for blocks that can be local or global, depending on how used.
	* src/vsip/impl/local_map.hpp: Add constructor taking a
	  Local_or_global_map.
	
	* src/vsip/impl/par-expr.hpp (Par_expr_block): Add missing block
	  bits: dim, inc/decrement_count.
	* src/vsip/impl/par-util.hpp: Add parallel support functions to
	  get domain of local subblock and number of patches.

	* src/vsip/impl/setup-assign.hpp: New file, implements early
	  binding of serial and parallel assignments.

	* tests/util.hpp (create_view): Add variant for user-storage views.
	 
	
2005-09-16  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/QMTest/vpp_database.py: Reimplement the test database.
	* tests/QMTest/classes.qmc: Adjust to new extension classes.

	* src/vsip/impl/fns_elementwise.hpp: Fix (work around)
	issues with elementwise operator implementation.

	* src/vsip/impl/ipp.hpp: Add support for binary
	elementwise operators *, /, +, and -.
	* src/vsip/impl/ipp.cpp: Likewise.

	* src/vsip/impl/expr_binary_block.hpp: Cleanup.
	* src/vsip/impl/expr_unary_block.hpp: Cleanup.
	* src/vsip/impl/expr_scalar_block.hpp: Cleanup.
	* tests/fns_scalar.cpp: Cleanup.

2005-09-15  Nathan Myers  <ncm@codesourcery.com>

	* configure.ac: add --enable-ipp-fft
	* src/vsip/impl/fft-core.hpp: add IPP FFT driver
	* src/vsip/impl/signal-fft.hpp: adapt to IPP driver details

2005-09-15  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fns_elementwise.hpp: Implement unary / binary operators.
	* tests/view_operators.cpp: Test them.

2005-09-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/dispatch-assign.hpp (Tag_serial_assign): Cast
	  value on assignment.

2005-09-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/length.hpp (extent): Take dim as explicit template
	  parameter.
	* src/vsip/impl/expr_binary_operators.hpp: Pass explicit dim template
	  parameter to extent.
	* src/vsip/impl/expr_functor.hpp: Fix scalar_blocks to be constructed
	  from extent, pass explicit dimension.
	* src/vsip/impl/fns_scalar.hpp: Fix expoavg to avoid promotion to
	  double.
	* tests/expr-coverage.cpp: Generalize coverage to scalar-view
	  expressions.
	* tests/test-storage.hpp: Support for testing scalar-view expressions.

2005-09-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/random.hpp (Rand_base<complex<T>>::randu): Force order
	  of real and imag randu calls.
	
2005-09-15  Jules Bergmann  <jules@codesourcery.com>

	Use View_block_storage trait for expression blocks.
	* src/vsip/impl/block-traits.hpp: Add By_value_block_storage
	  and By_reference_block_storage trait bases.
	  (View_block_storage) Use By_reference_block_storage as default.
	  (Expr_block_storage) Remove.
	* src/vsip/impl/expr_binary_block.hpp: Use View_block_storage to
	  determine storage.
	* src/vsip/impl/expr_scalar_block.hpp: Likewise.
	* src/vsip/impl/expr_ternary_block.hpp: Likewise.
	* src/vsip/impl/expr_unary_block.hpp: Likewise.
	* src/vsip/impl/subblock.hpp: Modify View_block_storage traits.
	* apps/sarsim/cast-block.hpp: Likewise.
	* tests/expr-coverage.cpp: New file, coverage testing of expressions.
	* tests/regr_subview_exprs.cpp: New file, regression test for
	  expressions using row subview of matrix.
	* tests/test-storage.hpp: Add additional storage types.
	
2005-09-15  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile.in (DOCBOOK_DTD): Remove.	
	Use OpenJade to generate PDF if XEP is not available.
	* configure.ac (DOCBOOK_DTD): Remove.
	* doc/quickstart/quickstart.xml: Use DocBook 4.2.
	
	* GNUmakefile.in (XEP): New variable.
	(XSLTPROC): Likewise.
	(docbook_xsl): New internal variable.
	(docbook_pdf): Likewise.
	(docbook_html): Likewise.
	(docbook_dsssl): Likewise.
	(%.fo): New rule.
	(%.html): Likewise.
	(%.pdf): Likewise.
	* configure.ac: Check for XEP and XSLTPROC.
	* doc/GNUmakefile.inc.in (doc_pdf_manuals): New variable.
	(doc_html_manuals): Likewise.
	(doc_manuals): Define in terms of previous variables.
	(doc): Revise.
	* doc/gpl.xml: Remove.
	* doc/opl.xml: Likewise.

2005-09-14  Don McCoy  <don@codesourcery.com>
	
	Implemented random generator class.
	* src/vsip/random.hpp: New file, implements Rand class.
	* tests/random.cpp: new unit tests.

2005-09-13  Jules Bergmann  <jules@codesourcery.com>

	Use lvalue factory to determine const_View lvalue type and
	use const_reference_type from Lvalue_factory_type (closes issue #54).
	* src/vsip/matrix.hpp: Use Lvalue_factory_type to deterine
	  const_Matrix::operator() return value.  Use factory 
	  const_reference_type for Matrix and const_Matrix.
	* src/vsip/tensor.hpp (const_Tensor): Likewise.
	* src/vsip/vector.hpp (const_Vector): Likewise.
	* src/vsip/impl/lvalue-proxy.hpp: Add const_reference_type typedef.
	* tests/lvalue-proxy.cpp: Add const_reference_type to PseudoBlock.
	* tests/regr-const_view_at_op.cpp: New file, regression test
	  for const_View operator().
	
2005-09-13  Jules Bergmann  <jules@codesourcery.com>

	Implement generic matrix/vector products.
	* src/vsip/math.hpp: Include matvec-prod.
	* src/vsip/impl/matvec-prod.hpp: New file, implements generic
	  matrix-matrix, matrix-vector, and vector-matrix products.
	* tests/matvec-prod.cpp: New file, unit tests for matvec products.

	Reorganize common test utilities for random numbers and precision.
	* tests/test-precision.hpp: New file, compute precision of datatype.
	* tests/test-random.hpp: New file, generate random matrix.
	* tests/solver-common.hpp: Remove above functionality.
	* tests/solver-cholesky.hpp: Include new files.
	* tests/solver-covsol.hpp: Likewise.
	* tests/solver-llsqsol.hpp: Likewise.
	* tests/solver-qr.hpp: Likewise.
	
2005-09-12  Jules Bergmann  <jules@codesourcery.com>

	* apps/sarsim/sarsim.hpp: Optimizations: perform range processing
	  in cube_in_ with explicit corner-turn before azimuth processing.
	  Move frame shift into azimuth processing loop.

2005-09-12  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/matrix.hpp: Reverse formatting changes.

2005-09-12  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/dispatch-assign.hpp: Avoid Tag_serial_assign for
	  blocks with split storage.
	* src/vsip/impl/signal-conv-ext.hpp (impl_performance): Make const.
	* src/vsip/impl/signal-conv-ipp.hpp: Likewise.
	* src/vsip/impl/signal-conv.hpp: Likewise.

2005-09-10  Jules Bergmann  <jules@codesourcery.com>

	* apps/sarsim/sarsim.hpp
	  (init_io, fini_io): New functions to move input and output out of
	  processing loop.
	  (cube_in_, cube_out_): Store input and output cubes separately.
	  (read_frame, write_frame): Read and write single frames.
	  (io_process): Perform multi-buffering of cube_in_ and cube_out_.
	* apps/sarsim/GNUmakefile: Add option to enable optimization.
	* apps/sarsim/histcmp.c: Add include for string.h.
	* apps/sarsim/mit-sarsim.cpp: Add -profile option.
	* apps/sarsim/sims-48-4: Pass through commandline.
	* apps/sarsim/sims-8-4: Likewise.
	* apps/sarsim/vis-sims-8-4: Pass -nframe to dat2xv.
	
2005-09-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/solver-cholesky.hpp: New file, implement Cholesky
	  factorization object.
	* src/vsip/solvers.hpp: Include solver-choleksy.
	* src/vsip/impl/lapack.hpp: Add veneers for cholesky factorization
	  and solver routines.
	* tests/solver-cholesky.cpp: New file, test cases for cholesky.

2005-09-10  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp, src/vsip/impl/fft-core.hpp:
	  fixes & cleanup for parallel fftm
	* tests/fftm.cpp: add fifth row/column to help catch alignment
	  and fencepost sensitivities.
	* tests/fftm-par.cpp: new; parallel complex-fftm tests.  

2005-09-09  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/matrix.hpp, src/vsip/tensor.hpp, src/vsip/vector.hpp,
	  src/vsip/impl/par-chain-assign.hpp, src/vsip/impl/subblock.hpp,
	  src/vsip/impl/dispatch-assign.hpp: Break #include loop.
	* src/vsip/impl/distributed-block.hpp: Make Distributed_block::
	  subblock() return the subblock number, not the subblock pointer.
	* src/vsip/impl/point-fcn.hpp: declare domain() functions inline
	  to prevent multiple-definitions link error.

2005-09-08  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Use mpicxx / mpiCC to determine MPI-related
	build flags.

2005-09-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: Fix compilation errors.

2005-09-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/solver-covsol.hpp: New file, implement covsol().
	* src/vsip/impl/solver-llsqsol.hpp: New file, implement llsqsol().
	* src/vsip/solvers.hpp: Include solver-{covsol,llsqsol}.hpp.
	* tests/solver-common.hpp: New file, common bits for solver tests.
	* tests/solver-covsol.cpp: New file, tests covsol().
	* tests/solver-llsqsol.cpp: New file, tests llsqsol().
	* tests/solver-qr.cpp: Use common bits from solver-common.

2005-09-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/lapack.hpp: Avoid preprocessor issue with Intel C++.

2005-09-07  Jules Bergmann  <jules@codesourcery.com>

	Use IPP to perform Convolution (when available/possible):
	* src/vsip/signal.hpp: Include signal-types and signal-conv.
	* src/vsip/impl/ipp.cpp (conv): Shims for IPP convolution functions.
	* src/vsip/impl/ipp.hpp (conv): Likewise.
	* src/vsip/impl/signal-conv-common.hpp: New file, common declarations
	  and functions for convolution.
	* src/vsip/impl/signal-conv-ext.hpp: Reorganize into
	  Convolution_impl class, meant to be derived from by Convolution.
	  Use functionality from signal-conv-common.
	* src/vsip/impl/signal-conv-ipp.hpp: New file, IPP implementation of
	  convolution.
	* src/vsip/impl/signal-conv.hpp: Common Convolution class, derives
	  implementation from Convolution_impl.
	* src/vsip/impl/signal-types.hpp: New file, contains common signal
	  types.
	* tests/convolution.cpp: Extend tests to cover different input sizes
	  and additional types.

	New benchmarks and updates.
	* benchmarks/copy.cpp: New file, benchmark view copy performance.
	* benchmarks/fft_ext_ipp.cpp: New file, benchmark performance of
	  IPP FFT using ext_data to access data in VSIPL++ block.
	* benchmarks/loop.hpp: Optionally dump profile info after each size.
	* benchmarks/main.cpp: Change test() to return success, profile flag.
	* benchmarks/conv.cpp: Select region of support to benchmark.
	* benchmarks/conv_ipp.cpp: Change test() to return success.
	* benchmarks/fft.cpp: Likewise.
	* benchmarks/fft_ipp.cpp: Likewise.
	* benchmarks/qrd.cpp: Likewise.
	* benchmarks/sumval.cpp: Likewise.
	* benchmarks/vmul.cpp: Likewise.

	Profile accumulate mode.
	* src/vsip/profile.cpp: Add profile mode to accumulate timer data
	  (provide an average for all events rather than a timeline).
	* src/vsip/impl/profile.hpp: Likewise.

	* configure.ac: Use -lpthreads for MKL 7.x
	
2005-09-02  Nathan Myers  <ncm@codesourcery.com>

	Add support for parallel FFTM on FFTW2, FFTW3; transpose FFT 
	and FFTM arguments where needed.

	* src/vsip/impl/fft-core.hpp: update to support parallel FFTM
	  for both FFTW2 and FFTW3.  Clean up explicit instantiations. 
	  Adapt to explicit use of decimation exponent in interface.
	* src/vsip/impl/signal-fft.hpp: map VSIPL++ "sd" and "dir"
	  arguments to sane axis and decimation exponent.  Use Dense 
	  blocks for temporaries until FFT drivers are adapted to
	  handle gaps in argument arrays.  Handle all necessary
	  transpositions for 2D, 3D Fft and Fftm.  Perform Fftm on 
	  local views of arguments, for parallel execution.  Let
	  FFT engines which can, do their own scaling.  Fix misuse
	  of temp storage in by_value forms of Fft and Fftm.
	* src/vsip/impl/local_map.hpp: make Is_par_same_map<> and
	  Map_equal<> work for local maps.
	* tests/fftm.hpp: robustify one test.

	Tested on PPC64/gcc-3.4/FFTW3, x86/gcc-4.0/FFTW2, 
	x86-64/gcc-4.0/FFTW3, x86-64/icc-8.1/FFTW3.  (Parallel FFTM,
	argument transposition not exercised yet: tests to come next.)

2005-09-01  Jules Bergmann  <jules@codesourcery.com>

	Fix bugs with Ext_data for split data and subviews to split data.
	* src/vsip/impl/extdata.hpp: Use storage_type to determine
	  pointer type.
	* src/vsip/impl/layout.hpp (Storage::offset): Shift pointer by
	  offset.
	* src/vsip/impl/subblock.hpp (Component_block::impl_stride): Use
	  complex_type to determine stride adjustment.
	  (Block_layout<Component_block>): Use complex_type to determine
	  if block maintains unit-stride.
	  (Subset_block::impl_data): Use storage_type::offset to adjust
	  pointer.
	* src/vsip/impl/fast-block.hpp: Add 3-dim specialization.
	* tests/extdata-subviews.cpp: Add test coverage for vectors
	  with split storage.
	* tests/regr_ext_subview_split.cpp: New file, regression test that
	  Ext_data access to real/imaginary subviews of split-complex data
	  is correct.

2005-09-01  Don McCoy  <don@codesourcery.com>

	* tests/fft_ext/*fftop_f*: moved to...
	* tests/fft_ext/data/*

2005-09-01  Don McCoy  <don@codesourcery.com>

	* tests/fft_ext/fft_ext.cpp: New file, fft on external
	  data files taken from C VSIPL test suite.
	* tests/fft_ext/*fftop_f*: New files, data for above.
	
2005-08-27  Nathan Myers  <ncm@codesourcery.com>

	* tests/tensor-transpose.cpp, src/vsip/tensor.hpp: 
	  insert "template" and "typename" where gcc-4 wants 'em.

2005-08-27  Jules Bergmann  <jules@codesourcery.com>

	Benchmarks for QR, FFT, convolution, and vector-multiply.
	* configure.ac: Set IPP search libs to ipps and ippsm7.
	* benchmarks/loop.hpp: Use ops_per_point to control gain.
	* benchmarks/main.cpp: Call defaults(), new "-param" option.
	* benchmarks/ops_info.hpp: New file, op count info.
	* benchmarks/conv.cpp: New file, vsip::Convolution benchmark.
	* benchmarks/conv_ipp.cpp: New file, IPP convolution benchmark.
	* benchmarks/fft.cpp: New file, vsip::Fft benchmark.
	* benchmarks/fft_ipp.cpp: New file, IPP FFT benchmark.
	* benchmarks/qrd.cpp: New file, vsip::qrd benchmark.
	* benchmarks/vmul.cpp: Use ops_info.hpp, set defaults.
	* benchmarks/vmul_ipp.cpp: New file, IPP vector-mult benchmark.
	* src/vsip/impl/metaprogramming.hpp (Is_complex): New trait.

	Function inlining.
	* src/vsip/impl/counter.hpp (Checked_counter::operator+=):
	  declare inline (avoid GCC -Winline warning).
	  (Checked_counter::operator-=): Likewise.
	* src/vsip/impl/domain-utils.hpp (block_domain): Inline.
	* src/vsip/impl/length.hpp (extent): Inline.
	  (total_size): New function.

	Non-blocked QR support.
	* src/vsip/impl/lapack.hpp: Add functions for non-blocked QR (geqr2).
	* src/vsip/impl/solver-qr.hpp (Qrd_impl): Support non-blocked QR.

2005-08-27  Jules Bergmann  <jules@codesourcery.com>

	Distributed subset subviews.
	* src/vsip/impl/dist.hpp (Whole_dist): New class for non-distributed
	  dimension.
	* src/vsip/impl/distributed-block.hpp (Distributed_block::subblock):
	  New member function.
	* src/vsip/impl/par-expr.hpp (Par_expr_block): Add missing
	  block typedefs reference_type and const_reference_type.
	* src/vsip/impl/par-services-mpi.hpp: Support complex data types.
	* src/vsip/impl/subblock.hpp: Handle maps for Subset_block.
	* src/vsip/impl/view_traits.hpp: Fixe local_type for complex views.
	* src/vsip/map_fwd.hpp (Map_subdomain): Forward decl.
	* src/vsip/map.hpp (Map_subdomain): Implementation.
	  (Map<>::applied_dom): New member function.
	  (Map<>::impl_local_from_global_dom): New member function.
	  (Dist_factory): Support Whole_dist.
	* src/vsip/support.hpp (distribution_type): New enum 'whole'.
	* tests/distributed-block.cpp: Coverage for complex types.

	* benchmarks/vmul.cpp: Remove unused variable, fix message.
	* src/vsip/tensor.hpp: Minor formatting.

2005-08-25  Don McCoy  <don@codesourcery.com>
	
	* src/vsip/impl/fns_elementwise.hpp: added expoavg().
	* src/vsip/impl/fns_scalar.hpp: likewise.

2005-08-25  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Add disable-exceptions option and check for ghs compiler.
	* GNUmakefile.in: Use $(CXXDEP) command instead of hardcoding '$(CXX) -M'.
	* src/vsip/support.hpp: Check whether exceptions are to be used.
	* src/vsip/copy_chain.hpp: Add missing <cassert> include.
	* src/vsip/dense.hpp: Fix name collision.
	* src/vsip/impl/aligned_allocator.hpp: Use THROW macro.
	* src/vsip/impl/dist.hpp: Add dummy return statements.
	* src/vsip/impl/fast-block.hpp: Fix name collision.
	* src/vsip/impl/par-services-none.hpp: Add missing friend declarations.

2005-08-25  Don McCoy  <don@codesourcery.com>
	* src/vsip/tensor.hpp: added subview type transpose
	* src/vsip/impl/subblock.hpp: updated Permuted_block
	  class (store data by-value, added copy constructor).
	  Fixed specialization macro and reverse permutations.
	* tests/tensor-transpose.cpp: fixed declarations and
	  reverse permutations.

2005-08-25  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/domain.hpp: fix improper member specialization
	* src/vsip/tensor.hpp: add "typename" where required.

2005-08-23  Jules Bergmann  <jules@codesourcery.com>

	Implement QR solver.
	* configure.ac: Detect LAPACK libraries, including Intel MKL.
	* src/vsip/math.hpp: Include math-enum.hpp.
	* src/vsip/solvers.hpp: New file.
	* src/vsip/impl/lapack.hpp: New file, abstracts blas and lapack
	  APIs.
	* src/vsip/impl/math-enum.hpp: New file, [math.enum] enumerations.
	* src/vsip/impl/solver-qr.hpp: New file, implement QR solver.
	* src/vsip/impl/temp_buffer.hpp: New file, allocate temporary
	  buffer.
	* tests/solver-qr.cpp: New file, unit tests for QR solver.
	* tests/test.hpp (almost_equal): Overload for complex.
	
	* vsipl++.pc.in: New variables for cppflags and cxxflags.  Include
	  LDFLAGS in Libs.

	* src/vsip/dense.hpp: Fix formatting.
	* tests/regr_prox_lvalue.cpp: Fix file date.

2005-08-23  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/fns_scalar.hpp (mul): Fix bug.
	* src/vsip/impl/reductions.hpp: Use Block_layout to determine order.
	* src/vsip/impl/reductions-idx.hpp: Likewise.

2005-08-22  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: use Dense, not Fast_block
	for FFTM temporaries until prepared to step around padding.
	* tests/fftm.cpp: enable tests, remove chatter, avoid
	trying to make zero-size subviews.

2005-08-18  Jules Bergmann  <jules@codesourcery.com>

	* tests/matrix-transpose.cpp: Unit tests for matrix transpose.
	* tests/tensor-transpose.cpp: Unit tests for tensor transpose.

2005-08-17  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: remove "#if 0" code.
	* tests/fftm.cpp: comment out iffy tests until Fftm<> debugged.

2005-08-17  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp, fft-core.hpp: add support for
	  Fftm<>, on (FFTW2, FFTW3) x (c<->c, r<->c, c<->r).  (Much of
	  it remains untested.)  Document more.  Fix args to in-place 
	  FFTW2.  Fix FFTW3 complex->real argument clobbering.
	  Improve name-mangling conformance ("fft" -> "impl_fft", etc.),
	  namespace usage ("dimension_type" -> "vsip::dimension_type").
	* tests/fftm.cpp: New.  Tests complex <-> complex.
	* src/vsip/domain.hpp: make member impl_at() non-const.

2005-08-16  Don McCoy  <don@codesourcery.com>

	* src/vsip/matrix.hpp: Added support for transpose subview. 
	  Cleaned up type definitions.
	* src/vsip/impl/subblock.hpp: Updated Transposed_block
	  class to store by-value.  Added copy constructor.
	  Fixed references to member holding underlying block
	  (from blk_. to blk_->).

2005-08-12  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Check that timers will compile before using.
	  Fix typo for ipps header detection.
	* src/vsip/impl/profile.hpp: Add empty timer policy No_timer.
	  Selectively compile timer code based on VSIP_IMPL_PROFILE_TIMER. 
	  Rename timer policies for coding standard.
	* src/vsip/profile.cpp: Likewise.

	* apps/sarsim/sarsim.cpp (report_performance): Fix decl/defn
	  mixmatch (missing 'const').
	* src/vsip/impl/signal-fft.hpp (impl_performance): Make 'const'.

2005-08-12  Jules Bergmann  <jules@codesourcery.com>
	
	Add performance measurement for sarsim.
	* apps/sarsim/sarsim.hpp (SarSim): Add processing timers.
	  (SarSim::report_performance): New function, report performance
	  measuered by timers.
	  (SarSim): Fix off-by-one loop conditions for pt_npols.
	* apps/sarsim/mit-sarsim.cpp: Call report_performance, replace
	  assertion with exception.

	* configure.ac (VSIP_IMPL_PROFILE_HARDCODE_CPU_SPEED): Define with
	  CPU speed in MHz if --enable-cpu-mhz option given.
	* src/vsip/profile.cpp (VSIP_IMPL_PROFILE_HARDCODE_CPU_SPEED): Use it
	  if defined.
	  (read_cpu_info): Move /proc/cpuinfo into separate function,
	  use for both Pentium TSX and x86_64 TSC timers.

	* src/vsip/GNUmakefile.inc.in (install): add dependency on libvsip.a
	
2005-08-12  Jules Bergmann  <jules@codesourcery.com>
	
	* benchmarks/GNUmakefile.inc.in: New file.
	* benchmarks/loop.hpp: New file, loop driver for benchmarks with 1-dim.
	* benchmarks/main.cpp: New file, common main for benchmarks.
	* benchmarks/sumval.cpp: New file, benchmark for sumval reduction.
	* benchmarks/vmul.cpp: New file, benchmark for vector multiply.
	* src/vsip/impl/copy_chain.hpp: Add missing include.

2005-08-11  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/subblock.hpp: Corrected implementation of
	  the direct data access functions for the diag subview.
	* tests/extdata-subviews.cpp: Modified diag subview test
	  to use direct data access.
	
2005-08-11  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Do sanity checks on std::complex and
	IPP's types.

2005-08-10  Mark Mitchell  <mark@codesourcery.com>

	* doc/quickstart/quickstart.xml: Fill in organization section.

	* doc/GNUmakefile.inc.in (doc_manuals): Add dependency on gpl.xml.
	* doc/gpl.xml: New file.
	* doc/quickstart/quickstart.xml: Write chapter on VSIPL++
	licensing.  Add GPL as an appendix.

2005-08-10  Jules Bergmann  <jules@codesourcery.com>
	
	* src/vsip/impl/ipp.cpp: Move function calls out of assert predicate.

2005-08-10  Jules Bergmann  <jules@codesourcery.com>

	Fix bug preventing nested unary functions.
	* src/vsip/impl/expr_ternary_block.hpp: Add specialization of
	  Expr_block_storage to hold Ternar_expr_blocks by value.
	* src/vsip/impl/expr_unary_block.hpp (Unar_expr_block): Use
	  Expr_block_storage trait to determine how to hold operand block.
	  Add specialization of Expr_block_storage for Unary_expr_block.

	* src/vsip/impl/expr_serial_evaluator.hpp: Comment out unused
	  parameters.
	* tests/extdata-subviews.cpp: Fix missing 'typename' keyword.

2005-08-10  Jules Bergmann  <jules@codesourcery.com>
	
	* apps/sarsim/simd-48-4: New file, run large synthetic data (double).
	* apps/sarsim/sims-48-4: New file, run large synthetic data (single).
	* apps/sarsim/sims-real: New file, run large real data.
	* apps/sarsim/chk-simd-48-4: New file, checks results of simd-48-4.
	* apps/sarsim/chk-sims-48-4: New file, checks results of sims-48-4.
	* apps/sarsim/vis-real: New file, visual real data output.
	* apps/sarsim/vis-sims-48-4: New file, visual large synthetic output.

2005-08-10  Stefan Seefeld  <stefan@codesourcery.com>

	* configure.ac: Check for Intel's IPP.
	* src/vsip/GNUmakefile.inc.in: Compile IPP wrapper.
	* src/vsip/impl/expr_serial_evaluator.hpp: New serial expression 
	dispatcher.
	* src/vsip/impl/expr_serial_dispatch.hpp: Likewise.
	* src/vsip/impl/ipp.hpp: New IPP wrapper.
	* src/vsip/impl/ipp.cpp: Likewise.
	* src/vsip/impl/metaprogramming.hpp: Add missing <complex> header.
	* src/vsip/impl/type_list.hpp: New type list templates.
	* src/vsip/impl/dispatch-assign.hpp: Use new serial dispatch.
	* tests/expr-test.cpp: Add tests for serial dispatch.
	
2005-08-10  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/matrix.hpp: Add impl_diagblock_type to Matrix.
	* src/vsip/impl/subblock.hpp: Fix typo.

2005-08-09  Don McCoy  <don@codesourcery.com>

	* src/vsip/impl/fns_scalar.hpp: fixed bug in euler() function

2005-08-09  Don McCoy  <don@codesourcery.com>

	* src/vsip/matrix.hpp: Added diag() functions.
	* src/vsip/impl/subblock.hpp: Added Diag_block class.
	* tests/extdata-subviews.cpp: Filled in diag subview test.

2005-08-09  Jules Bergmann  <jules@codesourcery.com>

	* tests/regr_proxy_lvalue_conv.cpp: New file, regression test for
	  proxy lvalue conversion problems.

2005-08-07  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: fix #ifdefs to use names we define.

2005-08-08  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/index.hpp: Removed. Replaced by...
	* src/vsip/impl/vertex.hpp: ...this.
	* src/vsip/domain.hpp: Use new Vertex template.
	* src/vsip/impl/layout.hpp: Adjust.
	* tests/index.cpp: Adjust.
	* tests/view.cpp: Adjust.
	* src/vsip/impl/length.hpp: New Length template.
	* src/vsip/impl/expr_scalar_block.hpp: Use it.
	* src/vsip/impl/expr_binary_operators.hpp: Use it.
	* src/vsip/impl/expr_functor.hpp: Use it.

2005-08-07  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: add 1D real->complex,
	  complex->real, more of 2D, 3D.  Use the correct 
	  array size.  Make by_value() delegate to by_ref().
	  Move benchmark timing calls to Fft_imp members.
	* src/vsip/impl/signal-fft.hpp: add 1D real->complex,
	  complex->real for FFTW2, FFTW3, most of 2D, 3D.
	* tests/fft.cpp: test 1D real->complex, complex->real.

2005-08-05  Mark Mitchell  <mark@codesourcery.com>

	* src/vsip/impl/fns_elementwise.hpp: Remove stray semicolons.

	* src/vsip/fft-double.cpp: Remove dummy function.
	* src/vsip/fft-float.cpp: Likewise.

	* apps/sarsim/sarsim.hpp (SarSim<T>::polarity_type): Remove
	pt_last and pt_size; use pt_npols instead throughout.

2005-08-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/signal.hpp: Use signal-conv-ext.
	* src/vsip/impl/signal-conv-ext.hpp: Bugfix: use stride when
	  accessing direct data.
	* tests/regr_conv_to_subview.cpp: New file, regression test
	  for convolution bug using ext_data.

2005-08-05  Jules Bergmann  <jules@codesourcery.com>

	* apps/sarsim/GNUmakefile: Build dat2xv.
	* apps/sarsim/dat2xv.c: New file, program to generate images
	  from mit-sarsim output.
	* apps/sarsim/sarsim.cpp: Add empty write_output_header() function.
	* apps/sarsim/mit-sarsim.cpp: Separate output of frame header
	  from frame data.  Bug fixes.
	* apps/sarsim/sarsim.hpp: Fix off-by-one error with polarizations.
	  Fix size mismatch when applying equalization weights.
	* apps/sarsim/simd-8-4: Use mit-sarsim.
	* apps/sarsim/sims-8-4: Use mit-sarsim.
	* apps/sarsim/chk-sims-8-4: Script cleanup.
	* apps/sarsim/vis-sims-8-4: New script, generate image.
	* src/vsip/signal.hpp: Use signal-conv instead of signal-conv-ext.

2005-08-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/point-fcn.hpp (extent): Rename to extent_old.
	  Eventually replace usage with 'extent' function returning Length.
	* src/vsip/impl/point.hpp: Likewise.
	* src/vsip/impl/block-copy.hpp:: Likewise.
	* src/vsip/impl/extdata.hpp: Likewise.
	* src/vsip/impl/par-assign.hpp: Likewise.
	* src/vsip/impl/par-chain-assign.hpp: Likewise.
	* src/vsip/impl/par-util.hpp: Likewise.
	* tests/distributed-block.cpp: Likewise.
	* tests/distributed-subviews.cpp: Likewise.
	* tests/fast-block.cpp: Likewise.
	* tests/par_expr.cpp: Likewise.
	* tests/user_storage.cpp: Likewise.
	* tests/view.cpp: Likewise.

2005-08-04  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/block-traits.hpp (Flexible_access_tag): New data
	  access tag.
	* src/vsip/impl/choose-access.hpp: Distinguish between data may
	  be copied (use flexible) and must be copied (use copy).
	* src/vsip/impl/extdata.hpp: Implement flexible access to determine
	  whether to copy data at runtime.
	* src/vsip/impl/layout.hpp: Applied_layout specialization for 3-dim
	  Stride_unit_align.  Separate Storage traits (in Storage) from
	  implementation (new class Allocated_storage).
	* src/vsip/impl/fast-block.hpp: Use Allocated_storage.
	* tests/extdata-output.hpp: Handle additional types.
	* tests/extdata-runtime.cpp: New file, unit tests for runtime
	  determination of access method.
	* tests/plainblock.hpp: Use Allocated_storage.
	* examples/GNUmakefile.inc.in: Remove space after ld -L option.

2005-08-04  Mark Mitchell  <mark@codesourcery.com>

	* apps/sarsim/GNUmakefile: Add mit-sarsim target.
	* apps/sarsim/mit-sarsim.cpp: Fix typo.
	* apps/sarsim/sarsim.cpp (SimpleSarSim): New class.
	* apps/sarsim/sarsim.hpp: Fix typo.

2005-08-03  Mark Mitchell  <mark@codesourcery.com>

	* apps/sarsim/sarsim.cpp: Strip all code.
	* apps/sarsim/sarsim.hpp: New file, containing refactored form of
	old sarsim.cpp.
	* apps/sarsim/mit-sarsim.cpp: New file.
	* GNUmakefile: Remove GCC-isms.

	* apps/sarsim/azimuth-process.hpp: Remove.
	* apps/sarsim/range-process.hpp: Remove.
	* apps/sarsim/sarsim.cpp: Fold range-processing and
	azimuth-processing into a single routine.  Move I/O out of the
	core routine.

2005-08-02  Jules Bergmann  <jules@codesourcery.com>

	Update par-services-none.
	* src/vsip/copy_chain.cpp: New file, Copy_chain implementation.
	* src/vsip/impl/copy_chain.hpp: New file, pseudo DMA chain for
	  par-services-none.
	* src/vsip/impl/par-assign.hpp: Update to new PSFs (get_local_view).
	* src/vsip/impl/par-chain-assign.hpp: Add 'disable_copy' to force
	  local messages (increases test coverage for par-services-none).
	* src/vsip/impl/par-services-none.hpp: Support pseudo DMA chains.
	* tests/distributed-block.cpp: Enable testing of old parallel
	  assigns.
	* tests/mpi.cpp: Removed.

2005-08-02  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/expr_operations.hpp: Make operators and functors conform with
	std::unary_function and std::binary_function.
	* src/vsip/impl/expr_functor.hpp: Likewise.
	* src/vsip/impl/expr_unary_block.hpp: Likewise.
	* src/vsip/impl/expr_binary_block.hpp: Likewise.
	* src/vsip/impl/expr_ternary_block.hpp: Likewise.
	* src/vsip/impl/fns_elementwise.hpp: Likewise.
	* src/vsip/impl/reductions.hpp: Likewise.
	* src/vsip/impl/reductions-idx.hpp: Likewise.
	* src/vsip/impl/fns_userelt.hpp: Define user extension function mechanism.
	* src/vsip/math.hpp: Use it.
	* tests/fns_userelt.cpp: Test it.

2005-08-02  Mark Mitchell  <mark@codesourcery.com>

	* apps/sarsim/range-process.hpp (RangeProcess<T>::i_coef_):
	Remove.
	(RangeProcess<T>::q_coef_): Likewise.
	(RangeProcess<T>::RangeProcess): Don't set them.

	* apps/sarsim/range-process.hpp (RangeProcess<T>::vec_iq_): Remove.
	(RangeProcess<T>:timer_copy1_): Likewise.
	(RangeProcess<T>::process): Do not read data here.
	* apps/sarsim/sarsim.cpp (process): Read it here instead.

	* apps/sarsim/GNUmakefile: Remove USE_EXT_FFT logic.
	(sarsim): Do not link with fft-fftw-impl.o.
	* apps/sarsim/azimuth-process.hpp: Remove USE_EXT_FFT logic.
	* apps/sarsim/range-process.hpp: Likewise.
	(RangeProcess<T>::RangeProcess): Do not use first_.
	(RangeProcess<T>::process): Remove #if 0'd code.
	(RangeProcess<T>.first_): Remove.
	* apps/sarsim/fft-fftw-impl.cpp: Remove.
	* apps/sarsim/fft-fftw-impl.hpp: Likewise.
	* apps/sarsim/fft-fftw.hpp: Likewise.

2005-08-01  Stefan Seefeld  <stefan@codesourcery.com>

	* doc/quickstart/quickstart.xml: Correct spelling of <envar>.

2005-07-31  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/fft-core.hpp, signal-fft.hpp: reorganize and
	simplify to mimimize cut'n'paste to support multiple FFT 
	implementations.  Enable 1D FFTW2 real->complex transform, 
	maybe complex->real too.  Change more names "FFT" -> "Fft".

2005-07-31  Mark Mitchell  <mark@codesourcery.com>

	* doc/quickstart/quickstart.xml: Use <envvar> around
	PKG_CONFIG_PATH.

	* src/vsip/profile.cpp (PosixTime::clocks_per_sec): Define.
	(PosixRealtime::clocks_per_sec): Likewise.
	(PentiumTSCTime::clocks_per_sec): Likewise.
	(X86_64_TSCTime::clocks_per_sec): Likewise.

2005-07-28  Jules Bergmann  <jules@codesourcery.com>

	* tests/reductions.cpp: Fix how expected value for meansqval is
	  computed.
	* tests/test-storage.hpp: Use index_type for get_nth and put_nth
	  index parameter.
	* tests/test.hpp: Use relative and absolute error to compare
	  floating point values.

2005-07-28  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/subblock.hpp: Fix typo, referencing old tuple members.

2005-07-28  Jules Bergmann  <jules@codesourcery.com>

	* tests/reduction.cpp: Fix bug computing expected value for meanval.

2005-07-28  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/extdata.hpp (Desired_block_layout): Keep
	  pack_type same if access_type is direct.
	* src/vsip/impl/subblock.hpp: Add direct data access for
	  Component_block, Subset_block, Transpose_block, Sliced2_block.
	* tests/extdata-subviews.cpp: Tests for subview direct data access.
	* src/vsip/impl/fast-block.hpp: Make direct data access interface
	  public.
	* tests/plainblock.hpp: Likewise.

2005-07-28  Don McCoy  <don@codesourcery.com>
	
	* src/vsip/impl/reductions.hpp: fixed meanval to handle
	  complex types correctly.
	
2005-07-27  Don McCoy  <don@codesourcery.com>
	
	* src/vsip/dense.hpp: added default argument for update to 
	  admit()/release().

2005-07-26  Don McCoy  <don@codesourcery.com>

	* src/vsip/dense.hpp: Fixed size(1,0) bug
	* src/vsip/support.hpp: renamed tuple Dim0/1/2 to impl_dim0/1/2
	* tests/user_storage.cpp: as above.
	
2005-07-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/complex.hpp: Remove using directives.  Include
	  complex-decl.hpp and math.hpp.
	* src/vsip/impl/complex-decl.hpp: New file, Complex
	  declarations not covered by fns_elementwise.hpp.
	* src/vsip/impl/fast-block.hpp: Remove complex.hpp include.
	* src/vsip/impl/fns_elementwise.hpp: Import vsip::impl::{tan,tanh}
	  into vsip::.
	* src/vsip/impl/layout.hpp: Include complex-decl.hpp instead of
	  complex.hpp.
	* src/vsip/tensor.hpp: Include dispatch-assign.hpp.
	* tests/complex.cpp: Test coverage for complex functions ambiguities.
	* tests/test.hpp: Remove unnecessary include of cmath.

2005-07-23  Mark Mitchell  <mark@codesourcery.com>

	* configure.ac (exp10): AC_CHECK_DECL it.
	(exp10f): Likewise.
	(exp10l): Likewise.
	* src/vsip/impl/fns_scalar.hpp (<vsip/impl/config.hpp>): Include
	it.
	(::exp10): Do not use it.
	(exp10): Define, with various overloads, conditionalized on
	whether exp10, exp10f, and exp10l are available in the standard
	library.  
	
	* src/vsip/impl/allocation.hpp (<vsip/impl/config.hpp>): Include
	it, instead of ...
	(<vsip/impl/acconfig.hpp>): .. this.
	* src/vsip/impl/acconfig.hpp (<vsip/impl/config.hpp>): Include
	it, instead of ...
	(<vsip/impl/acconfig.hpp>): .. this.

2005-07-22  Mark Mitchell  <mark@codesourcery.com>

	* tests/QMTest/vpp_database.py (VPPDatabase.GetResource): Fix
	typo.

2005-07-22  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (AR): Substitute it.
	* GNUmakefile.in: Use @AR@.  Exclude srcdir prefix from norm_dir.
	* src/vsip/dense.hpp: Reorganize to better vectorize with ICC.
	  (Dense_storage): New class, similar to Storage that Dense_impl
	  derives from.
	* src/vsip/impl/profile.hpp: Determine clocks_per_second at runtime.
	* src/vsip/profile.cpp: Likewise.
	* src/vsip/impl/reductions.hpp: New file, implements
	  [math.fns.reductions]
	* src/vsip/impl/reductions-idx.hpp: New file, implements
	  [math.fns.reductidx]
	* src/vsip/math.hpp: Include reductions{,-idx}.hpp.
	* src/vsip/support.hpp: Defines for loop vectorization pragmas.
	* tests/distributed-block.cpp: Use get_np_square.
	* tests/reductions-bool.cpp: New file, tests for boolean reductions.
	* tests/reductions.cpp: New file, tests for reductions.
	* tests/reductions-idx.cpp: New file, tests for index reductions.
	* tests/test-storage.hpp: Support tensors.
	* tests/util-par.hpp: Disambiguate call to sqrt().

2005-07-20  Mark Mitchell  <mark@codesourcery.com>

	* GNUMakefile.in (check): Move actions into ...
	* tests/GNUmakefile.inc.in: ... this new file.  Automatically copy
	QMTest extension classes.

2005-07-19  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/aligned_allocator.hpp: Fix printf format.
	* src/vsip/impl/expr_binary_block.hpp: Likewise.
	* src/vsip/impl/par-util.hpp: Remove unnecessary variable.
	* tests/fft.cpp: Gate sinl(), cosl() with ifdef.  Fix ICC control
	  flow warning.

2005-07-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/dist.hpp (impl_local_from_global_index):
	  Correct return type.
	* src/vsip/map.hpp (impl_local_from_global_index): Likewise.

2005-07-15  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/{impl/view_traits,vector,matrix,tensor}.hpp:
	disambiguate impl_View constructors that take a "T const&"
	argument in the same position as a length_type, to allow
	views of blocks with length_type elements.

2005-07-14  Jules Bergmann  <jules@codesourcery.com>

	* tests/regr_view_index.cpp: New file, regression test for
	  vector and matrix views of index_type with initial value.

2005-07-12  Jules Bergmann  <jules@codesourcery.com>

	Support empty domains and empty blocks.
	* src/vsip/domain.hpp: Allow empty domains.
	* src/vsip/impl/block-copy.hpp: Handle empty blocks.
	* src/vsip/impl/domain-utils.hpp (empty_domain): New function,
	  returns empty domain of dimension Dim.
	* src/vsip/impl/point.hpp (valid): New function to simplify
	  iterating over empty domains.

	Simplify mappings to 0 or 1 subblock per processor.
	* src/vsip/dense.hpp (Dense): Use Local_map as default map.
	  (get_local_block): Remove subblock argument.
	  (assert_local): New function.
	* src/vsip/impl/distributed-block.hpp (Distributed_block): Simplify 
	  to hold 0 or 1 subblocks.
	  (get_local_block): Remove subblock argument.
	  (get_local_view): Handle by-value blocks correctly.
	  (assert_local): New function.
	  (view_assert_local): New function.
	* src/vsip/impl/expr_binary_block.hpp (get_local_block): Remove
	  subblock argument.
	* src/vsip/impl/global_map.hpp (impl_subblock): New function to
	  return local subblock.
	* src/vsip/impl/par-chain-assign.hpp: Handle tensor assignment.
	  Simplify for 1 subblock per processor.
	* src/vsip/impl/par-expr.hpp (Par_expr_block): Simplify for
	  1 subblock per processor.
	  (get_local_block): Remove subblock arg.
	* src/vsip/impl/par-util.hpp: New PSF functions.
	  (foreach_point): Simplify for 1 subblock per processor, handle
	  empty subblocks.

 	Local Maps.
	* src/vsip/impl/local_map.hpp: New file, map for local data.
	* src/vsip/impl/dispatch-assign.hpp: Dispatch local_maps.  Generate
	  error if global and local maps mixed.  Handle tensor assigns.
	* src/vsip/impl/block-traits.hpp: Generalize checking of
	  map equality.
	* src/vsip/impl/expr_scalar_block.hpp (Scalar_block): Use Local_map.
	* src/vsip/impl/fast-block.hpp (Fast_block): Use Local_map as default.
	* src/vsip/impl/signal-fft.hpp: Use Local_map by default.
	* src/vsip/support.hpp (Local_map): forward decl.
	  (no_subblock): New const.
	  (no_processor): New const.

	Support for distributed subviews.
	* src/vsip/impl/dist.hpp (impl_subblock_from_index): New function,
	  returns subblock holding index.
	  (impl_local_from_global_index): New function, returns local
	  index corresponding to global index.
	* src/vsip/impl/extdata.hpp (Desired_block_layout): New functor to
	  transform a block's native layout to a desired layout.  Used
	  by Ext_data and Persistent_ext_data.
	  (Ext_data): Temporarily use View_block_storage to hold block,
	  necessary to handle by-value blocks correctly.
	  (Persistent_Ext_data): Likewise.
	* src/vsip/impl/layout.hpp (Is_unit_stride): New trait to determine
	  if packing format is unit stride.
	* src/vsip/impl/refcount.hpp (equiv_type): helper typedef.
	* src/vsip/impl/subblock.hpp: Handle distributed subviews.
	  Moved map projection into map.hpp.  Added Distributed_local_block
	  trait and get_local_block overloads.
	* src/vsip/map_fwd.hpp: Add forward decls for Map_project_1 and
	  Map_project_2.
	* src/vsip/map.hpp: Change subblock ordering to be row-major.
	  (Map::impl_subblock): New function, return local subblock.
	  (Map::impl_subblock_from_index): New function, forwarded to
	  dimension member function.
	  (Map::impl_local_from_global_index): Likewise.
	  (Map_project_1): New class to project a map, removing 1 dimension.
	  (Map_project_2): New class to project a map, removing 2 dimensions.

	Misc.
	* src/vsip/impl/view_traits.hpp: Add local_type convenience typedef.
	* src/vsip/par-services.cpp (new_processors): New function to
	  return number of processor in clique.
	* src/vsip/tensor.hpp: Move whole_domain_type into vsip:: so that
	  a single whole_domain can be used for all tensors.
	  (Tensor): Use dispatch_assign.

	Minor changes.
	* configure.ac: Fix typo in comment.
	* src/vsip/impl/choose-access.hpp: Add comments.
	* src/vsip/vector.hpp: Fix formatting.

	Tests.
	* tests/distributed-block.cpp: Adjust tests for #subblocks <=
	  #processors.  Add coverage for tensors.  Check validity of
	  local views.
	* tests/distributed-subviews.cpp: New test for whole-dimension
	  subviews (vector subviews of matrices, vector & matrix subviews
	  of tensors).
	* tests/extdata-output.hpp: Handle Sliced_block and Sliced2_block.
	* tests/appmap.cpp: Adjust tests for #subblocks <= #processors.
	* tests/map.cpp: Likewise.
	* tests/par_expr.cpp: Likewise.
	* tests/plainblock.hpp: Use Local_map by default.
	* tests/util.hpp (create_view): New overload for tensors.
	* tests/util-par.hpp: Utility functions to compute subblock
	  arrangements (squares, cubes, 2 x N).

2005-07-04  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/subblock.hpp (Sliced2_block_base::size): Bug fix,
	  sometimes returning size for wrong dimension.
	* tests/tensor_subview.cpp: New file, tests for tensor subviews.

2005-07-04  Jules Bergmann  <jules@codesourcery.com>

	Change UPPER_CASE enum, variable, and class names to lower_case
	for enums and variables, and Lower_case for classes.

2005-06-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/map.hpp: Include algorithm, use explicit std::min.
	* src/vsip/impl/par-services-none.hpp (free_chain): Placine 'inline'
	  before 'void'.

2005-06-20  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Fix typo, use enable_fftw3, not enable_mpi.
	* src/vsip/impl/subblock.hpp: Fix Wall warning in impl_stride().

2005-06-20  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac (VSIP_IMPL_PROFILE_TIMER): New acconfig.h define to
	  select profile timer variant.  Make posix timer the default.
	* src/vsip/impl/profile.hpp: Use VSIP_IMPL_PROFILE_TIMER.  Add
	  support for x86_64 TSC timer.

2005-06-20  Jules Bergmann  <jules@codesourcery.com>

	FFTW3 Support.
	* configure.ac: Configure VSIPL++ to use FFTW3 if present.
	* src/vsip/impl/fft-core.hpp (FFT_core): Specializations for FFTW3.
	* src/vsip/impl/signal-fft.hpp: Specializations for FFTW3; change
	  layout_type to Stride_unit; collect and provide profiling data.

	Fast block fill.
	* src/vsip/impl/block-copy.hpp (Block_fill): New class, fill a
	  block with a value in cache-friendly way.
	* src/vsip/matrix.hpp: Use Block_copy for scalar assigments.

	Ext_data improvements
	* src/vsip/impl/extdata.hpp: Provide cost without requiring a
	  complete low-level data access class.  Support access to
	  const blocks.
	* src/vsip/dense.hpp: Make direct data interface public, for
	  subblock use.
	* src/vsip/impl/layout.hpp (is_ct_unit_stride): New static
	  member of packing formats to indicate if unit-stride known
	  at compile time.
	* src/vsip/impl/subblock.hpp: Ext_data support for Sliced_block.

	Optimize handling of simple assignments.
	* src/vsip/impl/block-traits.hpp (Is_expr_block): New trait.
	* src/vsip/impl/expr_binary_block.hpp: Provide dim static member.
	  Specialize Is_expr_block.
	* src/vsip/impl/expr_ternary_block.hpp: Likewise.
	* src/vsip/impl/expr_unary_block.hpp: Likewise.
	* src/vsip/impl/dispatch_assign.hpp: Separate handling of serial
	  assignments from expressions.  Use Ext_data when possible for
	  vector serial assignments.

	* src/vsip/tensor.hpp: Fix whole_domain submatrix operator() to
	  return an impl_type.
	* src/vsip/impl/profile.hpp (Time_in_scope): New class, use RAII
	  to start/stop a timer.
	* src/vsip/impl/refcount.hpp: Add impl_debug_count function.
	* src/vsip/impl/signal-conv-ext.hpp: New file, alternate
	  implementation of Convolution using Ext_data.
	* src/vsip/signal.hpp: Use signal-conv-ext.hpp.

	SAR example program updates.
	* apps/sarsim/GNUmakefile: Determine CC from CXX; Use vsip::FFT
	  by default.
	* apps/sarsim/azimuth-process.hpp: Use vsip::FFT; Use aligned
	  allocation for io_buf_.
	* apps/sarsim/range-process.hpp: Use vsip::FFT; record additional
	  profiling data.
	* apps/sarsim/sarsim.cpp: Store polarizations in Tensor.

	Test updates.
	* tests/convolution.cpp: Measure performance of convolution.  Not
	  enabled for regression testing.
	* tests/fft.cpp: Test FFT accessors.

2005-06-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/fns_elementwise.hpp: Scalar return types for
	  mag, magsq, maxmgsq, minmgsq.
	* src/vsip/impl/fns_scalar.hpp: Likewise.
	* tests/fns_scalar.cpp: Testcases for above functions.
	* tests/test-storage.hpp (Storage): Add specialization for scalar
	  values.

2005-06-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: Fix compilation errors for
	  by-value FFT.
	* tests/fft.cpp: New file, test case for FFT.

2005-06-18  Nathan Myers  <ncm@codesourcery.com>

	* tests/(lots): normalize header date format.

2005-06-18  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/signal-fft.hpp: switch to Fast_block for temporary
	  storage & return result; use mapped blocks (more) correctly.
	* src/vsip/impl/fft-core.hpp: quiet signed/unsigned warnings

2005-06-18  Jules Bergmann  <jules@codesourcery.com>

	* configure.ac: Check if FFTW2 headers are present.
	
2005-06-17  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/(lots): normalize header date format correctly.

2005-06-17  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/(lots): normalize header date format.
	* src/vsip/impl/signal-conv.hpp: inline dim_output_size.

2005-06-17  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/support.hpp: use ptrdiff_t and size_t for index types.

2005-06-17  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/fft-float.cpp, src/vsip/fft-double.cpp,
	  src/vsip/impl/fft-core.hpp: minor cleanups
	* src/vsip/support.hpp: move out Scalar_of and Is_same_type
	* src/vsip/impl/metaprogramming.hpp: add Scalar_of, add 
	  Is_same_type functionality to Type_equal.
	* src/vsip/signal.hpp: include new impl/signal-fft.hpp
	* src/vsip/impl/signal-fft.hpp: new; incorporate minor cleanups,
	  use Ext_data correctly.
	* src/vsip/signal-fft.hpp: remove
	* src/vsip/impl/signal-conv.hpp: fix includes

2005-06-17  Jules Bergmann  <jules@codesourcery.com>

	* apps/sarsim/frm_hdr.c: Remove Id and Log keywords.
	* apps/sarsim/histcmp.c: Likewise.
	* apps/sarsim/misc.c: Likewise.
	* apps/sarsim/read_adts.c: Likewise.
	* apps/sarsim/read_tbv.c: Likewise.
	* apps/sarsim/sarx.h: Likewise.
	
2005-06-17  Nathan Myers  <ncm@codesourcery.com>

	1D complex-complex float FFT using FFTW2; most of 2D, 3D, 
	double, real->complex, complex->real

	* src/vsip/fft-float.cpp, src/vsip/fft-double.cpp,
	  src/vsip/signal-fft.hpp, src/vsip/impl/fft-core.hpp: new.
	* src/vsip/domain.hpp: add lvalue indexed accessor
	* src/vsip/support.hpp: add utility templates Is_same_type<T1,T2>,
	  Scalar_of<>; change index typedefs from long to int.
	* configure.ac: add FFT build options.

2005-06-16  Jules Bergmann  <jules@codesourcery.com>

	SAR example application.
	* apps/sarsim/sarsim.cpp: New file, SAR simulation, derived from
	  MIT/LL RASSP SarSim demo program.
	* apps/sarsim/fft-fftw-impl.cpp: New file, FFT bits that depend
	  on FFTW3 headers.
	* apps/sarsim/azimuth-process.hpp: New file, implements SAR azimuth
	  processing.
	* apps/sarsim/cast-block.hpp: New file, utility for mixed precision
	  expressions.
	* apps/sarsim/fft-common.hpp: New file, common elements for fft.
	* apps/sarsim/fft-fftw.hpp: New file, Vector_FFT using FFTW3.
	* apps/sarsim/fft-fftw-impl.hpp: New file, interface to FFT bits
	  that depend on FFTW3 headers.
	* apps/sarsim/fft.hpp: New file, plan C++ FFT.
	* apps/sarsim/loadview.hpp: New file, utility to load file into view.
	* apps/sarsim/range-process.hpp: New file, implements SAR range
	  processing.
	* apps/sarsim/saveview.hpp: New file, utility to save file from view.
	* apps/sarsim/frm_hdr.c: New file, SarSim C support.
	* apps/sarsim/histcmp.c: New file, likewise.
	* apps/sarsim/misc.c: New file, likewise.
	* apps/sarsim/read_adts.c: New file, likewise.
	* apps/sarsim/read_tbv.c: New file, likewise.
	* apps/sarsim/util_io.c: New file, likewise.
	* apps/sarsim/read_adts.h: New file, likewise.
	* apps/sarsim/read_tbv.h: New file, likewise.
	* apps/sarsim/sarx.h: New file, likewise.
	* apps/sarsim/util_io.h: New file, likewise.
	* apps/sarsim/GNUmakefile: New file, makefile for SAR example.

	Test data for SAR application.
	* apps/sarsim/sims-8-4: New file, run single-precision SAR test.
	* apps/sarsim/simd-8-4: New file, run double-precision SAR test.
	* apps/sarsim/chk-sims-8-4: New file, check single-precision SAR test.
	* apps/sarsim/chk-simd-8-4: New file, check single-precision SAR test.
	* apps/sarsim/test-8/data/: New directory, containing input
	  data for SAR program.
	* apps/sarsim/test-8/ref-plan/: New directory, containing reference
	  output data for SAR program.

	Profiling support:
	* src/vsip/profile.cpp: New file, basic profiling support.
	* src/vsip/impl/profile.hpp: New file, likewise.
	
	* src/vsip/impl/signal-conv.hpp: New function impl_performance() to
	  report on measured performance.
	
2005-06-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/vector.hpp: Add missing argument for parent's
	  constructor.

	Implement Convolution.
	* src/vsip/signal.hpp: New file, wrapper for signal processing
	  objects.
	* src/vsip/vector.hpp (view_domain): New function, return extent
	  of view as domain.
	* src/vsip/impl/signal-conv.hpp: New file, Convolution class.
	* src/vsip/impl/signal-types.hpp: New file, common enums for
	  signal processing.
	* tests/convolution.cpp: New file, test cases for convolution.

	Implement Global_map.
	* src/vsip/support.hpp (Global_map): Change from definition of
	  Serial_map to forward declaration of Global_map.
	* src/vsip/dense.hpp: Include global_map header, apply it at
	  dense construction, specialize get_local_block for serial
	  blocks.
	* src/vsip/impl/distributed-block.hpp: New parallel support
	  functions subblocks_begin and subblocks_end.
	* src/vsip/impl/par-assign.hpp: Use buf_send/recv from par-util.
	* src/vsip/impl/par-chain-assign.hpp: Check if subblock is
	  replicated destination processor before sending.
	* src/vsip/impl/par-services-mpi.hpp: Move functions
	  with view parameters to par-util.
	* src/vsip/impl/par-services-none.hpp: Likewise.
	* src/vsip/impl/par-util.hpp: New file, send/recv functions
	  with view parameters, parallel foreach functions.
	* src/vsip/impl/global_map.hpp: New file, implements Global_map.
	* src/vsip/map.hpp: Add 'impl_working_size' function to determine
	  number of processors owning distributed data.
	* tests/distributed-block.cpp: Add tests for Global_map.  Move
	  common functions to util-par.hpp.
	* tests/par_expr.cpp: Move common function to util.hpp and
	  util-par.hpp.
	* tests/util.hpp: New file, common test functions for cloning
	  views.
	* tests/util-par.hpp: New file, common parallel test functions
	  and classes.
	
	* src/vsip/impl/dispatch-assign.hpp: Use Global_map instead of
	  Serial_map.
	* src/vsip/impl/expr_scalar_block.hpp: Likewise.
	* src/vsip/impl/fast-block.hpp: Likewise.
	* src/vsip/impl/subblock.hpp: Likewise.
	* tests/plainblock.hpp: Likewise.

2005-06-13  Zack Weinberg  <zack@codesourcery.com

	* src/vsip/impl/lvalue-proxy.hpp: Delete True_lvalue_callop_factory;
	rename True_lvalue_implref_factory to True_lvalue_factory.
	(Lvalue_proxy [all specializations]): Hold an uncounted reference
	to the block, not a View_block_storage instance.
	* src/vsip/impl/block-traits.hpp: Delete True_lvalue_callop_factory;
	rename True_lvalue_implref_factory to True_lvalue_factory.
	(Lvalue_factory_type): Add Rebind nested class.
	* src/vsip/dense.hpp: Rename all operator()(index_type, ...) to
	impl_ref(). Update Lvalue_factory_type specialization.
	* src/vsip/impl/subblock.hpp: Add impl_ref() functions to all
	classes that can implement them, and matching Lvalue_factory_type
	specializations.

	* tests/plainblock.hpp: Add impl_ref functions, conditional on
	PLAINBLOCK_ENABLE_IMPL_REF.
	* tests/lvalue-proxy.cpp: Refer to True_lvalue_factory, not
	True_lvalue_callop_factory nor True_lvalue_implref_factory.
	* tests/dense.cpp: Test impl_ref, not operator().
	* tests/view_lvalue.cpp: Include plainblock.hpp.  Do all tests with
	both Dense<n> and Plain_block<n> (except <3>).  Add some tests of
	subblocks.

2005-06-13  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/view_traits: add vsip::impl_[const_]View
	  specializations for std::complex<>
	* src/vsip/{vector,matrix,tensor}.hpp: remove Vector, Matrix,
	  Tensor specializations, also Vector_base etc. apparatus.

2005-06-11  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/complex.hpp, map.hpp, impl/distributed-block.hpp,
	  impl/expr_binary_block.hpp, impl/par-expr.hpp;
	  tests/appmap.cpp, distributed-block.cpp,
	  par_expr.cpp: Clean up "-W -Wall" warnings.

2005-06-09  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/par-services-none.hpp: Add missing include.

	Evaluate parallel expressions with different RHS mappings.
	* src/vsip/impl/block-traits.hpp (Is_par_same_map): New trait.
	  Combination compile-time/run-time check if maps are same.
	  (Combine_return_type): New trait to determine return type of
	  expression tree transformations.
	  (apply_combine): Function set to transform expression trees.
	  (apply_leaf): Function set to perform action at expression trees
	  leaves.
	* src/vsip/dense.hpp (Combine_return_type): Add specialization.
	  (apply_combine): Likewise.
	* src/vsip/impl/distributed-block.hpp: Likewise.
	* src/vsip/impl/dispatch-assign.hpp: Use 'par_expr()' and
	  'par_expr_simple()' (from par-expr.hpp) to evalute
	  distributed expressions.
	* src/vsip/impl/domain-utils.hpp (block_domain): New function.
	  Return block extent as domain.
	* src/vsip/impl/expr_binary_block.hpp
	  (Expr_block_storage): specialization to store Binary_expr_block
	  by-value.
	  (Combine_return_type): Specialization for traversing
	  Binary_expr_block's.
	  (apply_combine): Likewise.
	  (apply_leaf): Likewise.
	  (Is_par_same_map): Likewise.
	* src/vsip/impl/par-expr.hpp: New file, provides classes and
	  functions to evaluate simple and complex distributed
	  expressions.
	* src/vsip/impl/par-services-mpi.hpp: Free buffer.
	* src/vsip/map.hpp (operator==): Compare maps with different types.
	* tests/par_expr.cpp: Extend to cover expressions with
	  different RHS maps, and expressions with more than one
	  operator.

	Merge App_map functionality into Map.
	* src/vsip/map.hpp: Assume App_map functionality.
	* src/vsip/impl/appmap.hpp: Remove file.
	* src/vsip/impl/dispatch-assign.hpp: Use map instead of App_map.
	* src/vsip/impl/distributed-block.hpp: Likewise.
	* src/vsip/impl/par-assign.hpp: Likewise.
	* src/vsip/impl/par-chain-assign.hpp: Likewise.
	* tests/appmap.cpp: Likewise.
	* tests/distributed-block.cpp: Likewise.
	* tests/par_expr.cpp: Likewise.

	Store grid function in std::vector.
	* src/vsip/map.hpp: Store grid function as std::vector,
	  provide additional interface to limit external assumptions
	  on how grid function is stored.
	* src/vsip/impl/appmap.hpp: Likewise.
	* src/vsip/impl/par-services-mpi.hpp (Communicator): Return
	  default processor vector as std::vector.
	* src/vsip/impl/par-services-none.hpp (Communicator): Likewise.
	* src/vsip/impl/par-assign.hpp: Access grid function through
	  general interface.
	* src/vsip/impl/par-chain-assign.hpp: Likewise.

2005-06-08  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/allocation.hpp: add "return" to fix syntax
	  error for the case of no posix_memalign() and no memalign().

2005-06-08  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/view_traits.hpp: Add vsip::impl_View<View,Block>
	  and vsip::impl_const_View<View,Block> base class templates
	  for views.  Also, forward-declare views, and add
	  impl::Const_of_view<V,B> and impl::Dim_of_view<V> utility
	  templates.
	* src/vsip/vector.hpp, matrix.hpp, tensor.hpp: Derive views from
	  vsip::impl_View<> or vsip::impl_const_View<> as appropriate;
	  sanitize member typedef names; eliminate unnecessary member
	  using-directives.

2005-06-06  Mark Mitchell  <mark@codesourcery.com>

	* doc/GNUmakefile.inc.in ($(doc_manuals): Depend on opl.xml.
	* opl.xml: New file.
	* doc/quickstart/quickstart.xml: Use it.

2005-06-03  Zack Weinberg  <zack@codesourcery.com>

	* configure.ac: Add probe for xml.dcl.
	* GNUmakefile.in: Set XML_DCL to the location of xml.dcl as
	determined by configure.  Don't generate documentation if it
	wasn't found.  Use $(XML_DCL) in Jade invocation.  Use wraptex
	in pdfjadetex invocation.
	* doc/wraptex: New file.

2005-06-03  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/impl/lvalue-proxy.hpp: New file.
	* src/vsip/impl/block_traits.hpp (Proxy_lvalue_factory)
	(True_lvalue_callop_factory, True_lvalue_implref_factory): Declare.
	(Lvalue_factory_type): New traits class.
	* src/vsip/dense.hpp: Specialize Lvalue_factory_type appropriately.
	* src/vsip/matrix.hpp, src/vsip/tensor.hpp, src/vsip/vector.hpp:
	Include vsip/impl/lvalue-proxy.hpp.  Add 'factory_type'
	private typedef to Matrix_base, Tensor_base, Vector_base
	respectively. Change those classes' 'reference_type' to
	factory_type::reference_type.  Implement operator() with
	appropriate number of index_type arguments for those classes.

	* tests/lvalue-proxy.cpp, tests/view_lvalue.cpp: New tests.

2005-06-03  Mark Mitchell  <mark@codesourcery.com>

	* src/vsip/impl/refcount.hpp (noincrement_t): Rename to
	noincrement_type.
	(Ref_counted_ptr::Ref_counted_ptr): Adjust accordingly.
	(RPPtr::RPPtr): Likewise.
	(Mutable): New template.
	(Stored_value): Use it, instead of storing the object directly.

2005-06-03  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/allocation.hpp: Update malloc.h and memalign
	  decl to match configure.
	* src/vsip/impl/dispatch-assign.hpp: -Wall cleanup.

2005-06-02  Mark Mitchell  <mark@codesourcery.com>

	* COPYRIGHT: Rebrand VSIPL++Pro as Sourcery VSIPL++.
	* README: Likewise.
	* vsipl++.pc.in: Likewise.
	* doc/quickstart/quickstart.xml: Likewise.
	* scripts/src-release: Likewise.

2005-06-02  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/metaprogramming.hpp (Compare): New class to
	  compare compile-time values against run-time values, while
	  avoiding -Wall warnings.
	* src/vsip/impl/subblock.hpp (Sliced_block_base): Use Compare for
	  unsigned comparison against zero.
	  (Sliced2_block_base): Likewise.
	* tests/tensor.cpp (tc_assign): Fix unused parameter.

2005-06-02  Mark Mitchell  <mark@codesourcery.com>

	* src/vsip/map.hpp: Include <vsip/impl/dist.hpp>.
	(vsip::impl::segment_size): Move to vsip/impl/dist.hpp.
	(vsip::impl::segment_chunks): Likewise.
	(vsip::impl::segment_chunk_size): Likewise.
	(vsip::impl::segment_start): Likewise.
	(vsip::Block_dist): Likewise.
	(vsip::Cyclic_dist): Likewise.
	* src/vsip/impl/subblock.hpp: Include <vsip/impl/dist.hpp>.
	* src/vsip/impl/dist.hpp: New file.

	* configure.ac: Use AS_HELP_STRING.  Remove check for
	std::complex<T>::real() and std::comlpex<T>::imag() being
	lvalues.
	* src/vsip/impl/subblock.hpp (Real_extractor::set): Do not expect
	std::complex<T>::real() to be an lvalue.
	(Imag_extractor::set): Likewise, for std::complex<T>::imag().

2005-06-02  Zack Weinberg  <zack@codesourcery.com>

	* configure.ac: Specify prerequisite headers for AC_CHECK_HEADERS
	and AC_CHECK_DECLS tests.
	Set vsip_impl_avoid_posix_memalign explicitly to the empty string,
	before checking for MPI libs, and to "yes" instead of "true" if
	using LAM-MPI.
	Test vsip_impl_avoid_posix_memalign with test -n, not by executing it.

2005-06-02  Jules Bergmann  <jules@codesourcery.com>

	* vsipl++.pc.in (cxx): New variable, compiler used to build library.
	  (Cflags): Get includes from configure.
	* doc/quickstart/quickstart.xml: Document getting compiler from
	  pkg-config.

2005-06-02  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fns_elementwise.hpp: Provide specialized overloads
	for binary view functions where V1 == V2 to solve issue 40.
	* tests/view_functions.cpp: Test it.

2005-06-02  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/refcount.hpp: put "mutable" where gcc-4 wants it.

2005-06-02  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/impl/expr_scalar_block.hpp (class Scalar_block_base):
	Add missing 'dim' static member.

2005-06-02  Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Add instructions for using pkg-config.
	* vsipl++.pc.in: New file, pkg-config metadata.
	* GNUmakefile.in (install): Install vsipl++.pc .

2005-06-02  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/fns_scalar.hpp: Complete functions as of Table 8.1
	of the spec.
	* src/vsip/impl/fns_elementwise.hpp: Likewise.
	* tests/view_functions.cpp: Test the new functions.

2005-06-02  Jules Bergmann  <jules@codesourcery.com>

	* doc/release/README: Move to ...
	* README: ... here.
	* doc/release/COPYRIGHT: Move to ...
	* COPYRIGHT: ... here.
	* doc/release/COPYING: Move and rename to ...
	* LICENSE: ... this.

2005-06-01  Jules Bergmann  <jules@codesourcery.com>

	Distributed Dense blocks.
	* src/vsip/dense.hpp: Derive Dense blocks with non-serial maps
	  from Distributed_block.  Add speclializations/overloads for
	  Distributed_local_block, Is_simple_distributed_block, and
	  get_local_block().
	* tests/distributed-block.cpp: Use Dense to name distributed blocks.

	Distributed expressions w/o communication.
	* src/vsip/impl/dispatch-assign.hpp (par_expr): Use
	  Distributed_local_block trait to determine local block type.
	* src/vsip/impl/distributed-block.hpp: Add get_local_block
	  function general case and specialization for
	  Distributed_block.
	* src/vsip/impl/expr_binary_block.hpp: Add Distributed_local_block
	  and get_local_block specializations for Binary_expr_block.
	* tests/par_expr.cpp: New file, tests for parallel expressions.

2005-06-01  Mark Mitchell  <mark@codesourcery.com>

	* src/vsip/allocation.cpp (impl_free_align): Return "void".
	* src/vsip/impl/application.hpp (impl_free_align): Likeiwse.

2005-05-27  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile.in (docdir): New variable.
	(DOXYGEN): Likewise.
	(all): Depend on doc.
	(doc): Remove.
	* configure.ac (doxygen): Check for it.
	* doc/GNUmakefile.inc.in (doc/html/index.html): New target.
	(clean): Remove it.
	(install): Install manuals.

2005-05-26  Mark Mitchell  <mark@codesourcery.com>

	* doc/quickstart/quickstart.xml: Adjust name of source directory.
	* scripts/src-release: New script.

2005-05-26  Jules Bergmann  <jules@codesourcery.com>

	* doc/quickstart/quickstart.xml: Add paragraphs on compilers known
	  to work/not work, recommended options for LAM/MPI.  Document
	  configure '--with-mpi-prefix' option.
	* examples/GNUmakefile.inc.in (examples/example1$(EXEEXT)): Use
	  $(LDFLAGS) and $(LIBS).
	* doc/release/COPYING: New file, license for source releases.
	* doc/release/COPYRIGHT: New file, copyright for source releases.
	* doc/release/README: New file, top-level readme for source releases.

2005-05-25  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile.in (datadir): New variable.
	* doc/quickstart/quickstart.xml: Add section on building first
	VSIPL++ program.
	* examples/GNUmakefile.inc.in: Fix typos in variable naming
	convention.
	(install): New rule.
	* src/vsip/GNUmakefile.inc.in (install): Simplify slightly.

	* GNUmakefile.in (prefix): Put it first.
	(EXEEXT): New variable.
	(OBJEXT): Likewise.
	(objects): Use $(OBJEXT).
	(%.o): Rename to ...
	(%.$(OBJEXT)): ... this.
	(%.d): Use $(OBJEXT).
	(check): Fix for objdir != srcdir.
	* src/vsip/GNUmakefile.inc.in (src_vsip_cxx_objects): Use $(OBJEXT).
	* examples/GNUmakefile.inc.in: New file.
	* examples/example1.cpp: Likewise.

	Issue #38
	* src/vsip/initfini.cpp: Rename to ...
	* src/vsip/initfin.cpp: ... this.
	* src/vsip/initfini.hpp: Rename to ...
	* src/vsip/initfin.hpp: ... this.
	* tests/distributed-block.cpp: Include <vsip/initfin.hpp>, not
	<vsip/initfini.hpp>.
	* tests/initfini.cpp: Likewise.
	* tests/map.cpp: Likewise.

2005-05-25  Jules Bergmann  <jules@codesourcery.com>

	Aligned memory allocation.
	* configure.ac: Add checks for memalign and posix_memalign.
	* src/vsip/allocation.cpp: New file, aligned memory allocation
	  routines.
	* src/vsip/impl/allocation.hpp.hpp: Likewise.
	* src/vsip/impl/aligned_allocator.hpp: New file, aligned allocator.
	* src/vsip/impl/layout.hpp (Storage): Template parameter for
	  allocator.
	* src/vsip/dense.hpp: Call storage deallocate() prior to destruction.
	* src/vsip/impl/extdata.hpp: Likewise.
	* src/vsip/impl/fast-block.hpp: Likewise.
	* tests/plainblock.hpp: Likewise.

2005-05-24  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/expr_functions.hpp: Removed, replaced by...
	* src/vsip/impl/fns_elementwise.hpp: ...this new file.
	* src/vsip/impl/expr_functor.hpp: New function dispatching framework.
	* src/vsip/impl/fns_scalar.hpp: Provide more scalar functions.
	* src/vsip/math.hpp: Use fns_elementwise.hpp.
	* src/vsip/impl/view_traits.hpp: Enhance Is_view_type trait.
	* src/vsip/matrix.hpp: Use it.
	* src/vsip/vector.hpp: Likewise.
	* src/vsip/tensor.hpp: Likewise.
	* src/vsip/impl/expr_binary_operators.hpp: Likewise.
	* src/vsip/impl/expr_ternary_block.hpp: Likewise.
	* src/vsip/impl/expr_unary_block.hpp: Likewise.
	* tests/view_operators.cpp: Move function tests into...
	* tests/view_functions.cpp: ...this file.

2005-05-21  Mark Mitchell  <mark@codesourcery.com>

	* doc/GNUmakefile.inc.in: New file.
	* doc/README: Likewise.
	* doc/tex.dsl: Likewise.
	* doc/quickstart/quickstart.xml: Likewise.

	* GNUmakefile.in (.DELETE_ON_ERROR): Set it.
	(all): Move to top of file.
	(exec_prefix): New variab.e
	(prefix): Likewise.
	(includedir): Likewise.
	(libdir): Likewise.
	(INSTALL): Likewise.
	(INSTALL_DATA): Likewise.
	(JADE): Likewise.
	(PDFJADETEX): Likewise.
	(docbook): Likewise.
	(%.xml): Add to vpath.
	(%.o): Do not rm files on error.
	(%.d): Likewise.
	(%.jtex): New rule.
	(%.pdf): Likewise.
	(GNUmakefile): Refine dependencies.
	(config.status): New rule.
	* configure.ac (JADE): Set it.
	(PDFJADETEX): Likewise.
	(AC_PROG_INSTALL): Use it.
	* src/vsip/GNUmakefile.inc.in (install): New rule.

2005-05-20  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile.in (all): Depend on GNUmakefile.
	($(srcdir)/configure): New target.
	(GNUmakefile): Likewise.

2005-05-20  Zack Weinberg  <zack@codesourcery.com>

	* configure.ac: If we cannot find the MPI libraries, fall back
	to --disable-mpi mode, unless the user explicitly said either
	--enable-mpi or --with-mpi-prefix=something.  Look for -lmpich
	before -lmpi.

2005-05-19  Jules Bergmann  <jules@codesourcery.com>

	Implement user-storage (admit/release)
	* src/vsip/dense.hpp: Add Dense_impl base class that implements
	  user-storage (admit/release).
	* src/vsip/impl/layout.hpp (Storage): add rebind() and
	  is_alloc() members.
	* src/vsip/impl/point.hpp: Add 3-dim specializations for next,
	  block get, and block put.
	* tests/dense.cpp: Add tests for user-storage functions when
	  user-storage is not being used.
	* tests/user_storage.cpp: New file, test cases for user-storage.

	* src/vsip/math.hpp: Fix filename in header.

2005-05-18  Zack Weinberg  <zack@codesourcery.com>

	* .cvsignore: New file.
	* src/vsip/impl/.cvsignore: Also ignore acconfig.hpp.in.

2005-05-18  Zack Weinberg  <zack@codesourcery.com>

	* configure.ac: Rewrite MPI probe from scratch, simplifying
	logic and adding ability to use <mpi/mpi.h> as well as <mpi.h>.
	Use AC_CANONICAL_HOST, not AC_CANONICAL_TARGET.  No need for
	AC_PROG_CPP nor AC_PROG_CC.  Unconditionally set language to
	C++ after finding compiler.  Reject compilers known to have bugs
	which VSIPL++ triggers. Fix typo in bug-report address.

	* src/vsip/impl/subblock.hpp: Declare Dist_factory and all its
	specializations with 'struct', not 'class'.

	* src/vsip/impl/par-services-mpi.hpp: Include vsip/impl/config.hpp
	and then VSIP_IMPL_MPI_H, whatever that turns out to be.
	* tests/mpi.cpp: Likewise.
	* tests/context.in: Use @host@, not @target@.
	* tests/QMTest/.cvsignore: New file.

2005-05-17  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/expr_functions.hpp: Add support for mixed scalar/view
	functions.
	* tests/view_operators.cpp: Test mixed scalar/view functions.
	* src/vsip/impl/timer.hpp: New file.
	* src/vsip/impl/subblock.hpp: Infer a subblock's map from the original's
	block's map.
	* src/vsip/map.hpp: Move forward declaration of Map ...
	* src/vsip/map_fwd.hpp: ...here.
	* src/vsip/tensor.hpp: Fixed some adjustments to new naming scheme.

2005-05-13  Jules Bergmann  <jules@codesourcery.com>

	Initial assignment dispatch.
	* src/vsip/impl/block-traits.hpp (Is_simple_distributed_block):
	  New trait.
	* src/vsip/impl/dispatch-assign.hpp: New file, dispatch for
	  serial and distributed assignments.
	* src/vsip/impl/distributed-block.hpp: Implemented 'map()' member
	  function.
	* src/vsip/impl/par-chain-assign.hpp: Copy data that stays on
	  same processor, rather than sending messages.
	* src/vsip/map.hpp (Is_serial_map): New trait Is_serial_map,
	  implemented operator== for Map.
	* src/vsip/matrix.hpp: Use Dispatch_assign for assignments.
	* src/vsip/vector.hpp: Likewise.
	* tests/distributed-block.cpp: Use view operator= for
	  distributed assigments.

2005-05-11  Jules Bergmann  <jules@codesourcery.com>

	Batten down view operators to work only for valid views.
	* src/vsip/impl/expr_binary_operators.hpp
	  (Binary_operator_return_type): Add Tag types to trigger SFINAE
	  if views are not valid.
	* src/vsip/impl/expr_unary_operators.hpp
	  (Unary_operator_return_type): Likewise.
	* src/vsip/impl/view_traits.hpp (Is_view_type): New view trait,
	  provides typedef 'type' for valid views.
	* src/vsip/matrix.hpp (Is_view_type): Provide specialization.
	* src/vsip/tensor.hpp (Is_view_type): Likewise.
	* src/vsip/vector.hpp (Is_view_type): Likewise.

2005-05-11  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/initfini.cpp (vsipl::vsipl): Put a program name in
	  fake argc/argv to prevent MPICH-1.2.6 from segfaulting.

2005-05-10  Nathan Myers  <ncm@codesourcery.com>

	* (almost all files): change all StudlyCaps names except
	  those in the spec.

2005-05-10  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/par-chain-assign.hpp, tests/appmap.cpp:
	  Fix misuse of class name as template parameter formal
	  argument name (AppMap->AppMapT, ExtData->ExtDataT).
	  This is preparatory to fixing non-template-parameter
	  uses of StudlyCaps in the library.

2005-05-09  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/par-services-mpi.hpp: Throw unimplemented() on
	  MPI errors, rather than (incorrectly) use assert().

2005-05-09  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/par-chain-assign.hpp: -Wall cleanup.
	* src/vsip/impl/par-services-mpi.hpp: Likewise.

2005-05-09  Jules Bergmann  <jules@codesourcery.com>

	Use direct access to block data and MPI datatypes for parallel
	assignment.
	* configure.ac: Detect MPICH-1.  Detect if LAM-MPI requires
	  C++ libraries.
	* src/vsip/impl/appmap.hpp: Make lookup_index() public.
	* src/vsip/impl/distributed-block.hpp: Add required include.
	* src/vsip/impl/extdata.hpp: Rename type 'DataSyncAction' to
	  'sync_action_type'.  Change LowLevelDataAccess to use
	  explicit begin/end.  Add PersistentExtData class that exports
	  begin/end.
	* src/vsip/impl/layout.hpp: Fix bug where alloc_data_ member
   	  not being set in constructor.
	* src/vsip/impl/par-assign.hpp: Rename ChainedParallelAssign
	  to PackedParallelAssign.  Remove unnecessary empty messages.
	* src/vsip/impl/par-chain-assign.hpp: New file, implements
	  parallel assignment with real chaining.
	* src/vsip/impl/par-services-mpi.hpp (Communicator): Add
	  send()/recv() for chains (aka MPI_Datatypes).
	  (ChainBuilder) New class to construct DMA chains.
	* tests/distributed-block.cpp: Add loop argument to repeat
	  assignments after setup.
	* tests/extdata.cpp: Update low-level tests to use begin/end.

2005-05-05  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/point.hpp: make op[] const return by value

2005-04-30  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/expr_ternary_block.hpp: New file.

2005-04-28  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/expr_unary_block.hpp: Revert last (incomplete) change.
	* src/vsip/impl/expr_binary_block.hpp: Likewise.
	* src/vsip/matrix.hpp: More use of StoredValue for subblocks.
	* src/vsip/impl/subblock.hpp: Likewise. Add Sliced2Block.
	* tests/matrix.cpp: Fix typo.
	* src/vsip/tensor.hpp: New file.
	* tests/tensor.cpp: New file.

2005-04-27  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/expr_unary_block.hpp: Remove redundant 'const'.
	* src/vsip/impl/expr_binary_block.hpp: Likewise.

	* src/vsip/impl/fns_scalar.hpp: New file.
	* src/vsip/impl/expr_functor.hpp: New file.
	* src/vsip/impl/expr_functions.hpp: New file.
	* src/vsip/math.hpp: Include headers for functions and
	function expressions.
	* tests/view_operators.cpp: Add tests for function expressions.

2005-04-27  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/matrix.hpp: Swap fixed dimension for RowBlock and
	  ColumnBlock typedefs (they were reversed).
	* tests/matrix.cpp: Additional tests for row and column subviews
	  of matrix.


2005-04-26  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/dense.hpp (Dense): Added 3-dim specialization.yy
	* src/vsip/impl/layout.hpp (AppliedLayout): Added 3-dim
	  specialization.
	* tests/dense.cpp: Added coverage for 3-dim dense blocks.

2005-04-25  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/refcount.hpp: Make StoredValue RefCountedPtr compliant.
	* src/vsip/impl/subblock.hpp: Change storage trait to StoredValue for
	subblock types.
	* src/vsip/vector.hpp: Streamline subblock allocation.
	* src/vsip/matrix.hpp: Likewise.

2005-04-21  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/domain.hpp: eliminate Domain_base<1>; add const,
	  this->, impl_, private: and protected: where appropriate;
	  change function struct operator()() to members apply().

2005-04-21  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/vector.hpp: Add missing subview types and fix
	compound assign operators.
	* src/vsip/matrix.hpp: Add support for column and row subviews
	as well as real and imaginary component views for complex matrices.
	* src/vsip/impl/subblock.hpp: Adjust SlicedBlock for use in Matrix.
	* src/vsip/impl/par-services-mpi.hpp: Remove redundant ';'.
	* tests/vector.cpp: Test compound assign operators.
	* tests/matrix.cpp: New matrix tests.

2005-04-20  Nathan Myers  <ncm@codesourcery.com>

	* src/vsip/impl/domain.hpp: Rewrite. Built & tested
	  on gcc-4 and gcc-3.3.

2005-04-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/noncopyable.hpp (NonCopyable): Add comment.on
	  (NonAssignable): Remove protected constructor to avoid GCC
	  '-W -Wall' warnings.

	Implement simulate message passing for par-services-none.
	* src/vsip/impl/par-services-none.hpp (Communicator): Implemented
	  message passing via queuing of message between send/receive.
	* tests/distributed-block.cpp: Remove direct references to MPI,
	  use par-services instead.

	Cleanup for '-Wall' warnings.
	* src/vsip/impl/appmap.hpp (AppMap): Change initializer list
	  ordering to match class declaration.
	* src/vsip/impl/extdata.hpp (mem_required): Change return type
	  to 'size_t'.
	* src/vsip/impl/par-assign.hpp: Remove unused variables and debug
	  sprintfs.
	* src/vsip/impl/layout.hpp: Remove unused parameter name.
	* tests/extdata-output.hpp: Likewise.
	* tests/fast-block.hpp: Likewise.

2005-04-18  Nathan Myers <ncm@codesourcery.com>

	Prepare to replace domain.hpp
	* src/vsip/domain.hpp: add members impl_add_in (which call op+=)
	* src/vsip/impl/layout.hpp: include impl/index.hpp
	* tests/domain.cpp: call member impl_add_in instead of op+=
	* tests/view.cpp: include impl/index.hpp
	* src/vsip/initfini.hpp: comment

2005-04-18  Jules Bergmann  <jules@codesourcery.com>

	Implement direct data access for blocks.
	* src/vsip/dense.hpp: Use new AppliedLayout for layout policy,
	  (replaces DenseLayout).  Use Storage for management of raw
	  data array, it understands complex interleaved and split
	  formats.
	* src/vsip/support.hpp (tuple): Add static const member
	  variables's Dim0, Dim1, and Dim2.
	* src/vsip/impl/block-copy.hpp: New file, copies data
	  between a block and a regular array.
	* src/vsip/impl/block-traits.hpp (BlockLayout): New trait
	  to represent block layout and data access.
	* src/vsip/impl/choose-access.hpp: New file, Choose data
	  access type based on block's data access type, block's
	  layout, and requested layout.
	* src/vsip/impl/extdata.hpp: New file, implements low-level
	  data access (LowLevelDataAccess), high-level data acess
	  (ExtData), utility classes, and utility functions.
	* src/vsip/impl/fast-block.hpp: New file, block capable of
	  aligned (non-dense) storage and split/interleaved complex
	  storage.
	* src/vsip/impl/layout.hpp: New file, provides layout and
	  storage classes to handle packing formats and complex
	  formats respectively.
	* src/vsip/impl/metaprogramming.hpp: New file, utilities for
	  template meta-programming.
	* src/vsip/impl/point-fcn.hpp: New file, contains functions
	  previously point.hpp dependent on views.
	* src/vsip/impl/point.hpp: Move functions dependent on views
	  to point-fcn.hpp to simplify header dependencies.
	* src/vsip/impl/refcount.hpp (RPPtr): New reference counted
	  point class that takes reference counting actions as policy.
	* src/vsip/impl/subblock.hpp: Add BlockLayout traits for
	  SubsetBlock and TransposeBlock.
	* tests/extdata-fft.cpp: New file, test/example for using
	  extdata with pseudo-signal processing objects.
	* tests/extdata-matadd.cpp: New file, test/example for using
	  extdata interface with matrix-add example.
	* tests/extdata.cpp: New file, test/example for using extdata.
	* tests/extdata-output.hpp: New file, utilities to print
	  layout formats.
	* tests/fast-block.cpp: New file, tests for FastBlock.
	* tests/plainblock.hpp: New file, implements plain block
	  similar to Dense but with no direct data access.
	* tests/vector.cpp: Minor, change type names from _t to _type
	  suffix.
	* tests/view.cpp: Include point-fcn.hpp header.

2005-04-17  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Let 'make check' run 'qmtest run'.
	* tests/GNUmakefile.inc.in: Removed.
	* src/vsip/impl/view_traits.hpp: New file forward-declaring traits
	used by...
	* src/vsip/vector.hpp: ...this.
	* src/vsip/matrix.hpp: ...and this.
	* src/vsip/impl/expr_unary_operators.hpp: ...and this.
	* src/vsip/impl/expr_binary_operators.hpp: ...and this.
	* tests/expression.cpp: Use <vsip/math.hpp>.

2005-04-15  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile.in: Make evaluation of 'norm_dir' and 'dir_var' lazy.
	* tests/QMTest/configuration.in: New QMTest-based testing harness.
	* tests/QMTest/vpp_database.py: Likewise.
	* tests/QMTest/classes.qmc: Likewise.
	* tests/context.in: Likewise.
	* configure.ac: Call 'AC_CANONICAL_TARGET' as required by testing harness.
	* config.guess: New file.
	* config.sub: New file.
	* install.sh: New file.

	* src/vsip/vector.hpp: Add support for complex vectors.
	* tests/vector.cpp: Test the extended API.
	* src/vsip/impl/expression.hpp: Removed.
	* tests/expr-test.cpp: Use math.hpp instead of expression.hpp.
	* tests/expression.cpp: Likewise.

2005-04-14  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/math.hpp: New file, mathematical functions and
	  operations [math].

2005-04-08  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUMakefile.in: Fix dependency generation rule.
	* src/vsip/impl/par-services-mpi.hpp: Fix compiler warning.

2005-04-06  Jules Bergmann  <jules@codesourcery.com>

	* tests/complex.cpp: Make atan() argument type explicit float.

2005-04-05  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/matrix.hpp: Add missing return for several operator= and
	  operator-'op'= functions.
	* src/vsip/vector.hpp: Likewise.
	* src/vsip/impl/point.hpp (next): Comment out unused parameter
	  name.
	* tests/block_interface.hpp (block_1d_interface_test): Fake
	  use of unused variables.
	* tests/map.cpp (count_subblocks): Change 'count' from int to
	  avoid warning.
	* tests/static_assert (test_assert_unsigned): Fake use of
	  unused variables.
	* tests/test.hpp (use_variable): New function, creates a variable
	  use.
	* tests/view.cpp: Add tests for scalar assignment.  Add test
	  coverage for some of missing returns on view operator=.

2005-04-04  Jules Bergmann  <jules@codesourcery.com>

	* GNUmakefile.in: Locate .d files in build directory, if different
	  from source directory.

2005-04-01  Jules Bergmann  <jules@codesourcery.com>

	Distributed blocks.
	* configure.ac: Keep MPI includes and libs in CPPFLAGS and LIBS.
	  Renamed USE_MPI to USE_PAR.  Fail if mpi enabled but no
	  mpi.h found, link against lammpi++ library for LAM, prune
	  _darcs directory from template file search.
	* GNUmakefile.in: Rename USE_MPI to USE_PAR.
	* tests/GNUmakefile.inc.in: Add distributed-block.cpp to list of
	  parallel tests.  Rename USE_MPI to USE_PAR.
	* src/vsip/impl/appmap.hpp: New file, applied map = map + domain.
	* src/vsip/impl/block-traits (DistributedLocalBlock): New traits
	  class to give the local block type of a distributed block.
	* src/vsip/impl/distributed-block.hpp: New file, implements
	  distrubited block.
	* src/vsip/impl/domain-utils.hpp: New file, utilities for domains,
	  includes projection, construction, intersection, and size.
	* src/vsip/impl/par-assign.hpp: New file, algorithms for
	  parallel assignment.  SimpleParallelAssign{SOL, DOL} are
	  horribly inefficient.  ChainedParallelAssign is an
	  improvement, it precomputes communcation patterns,
	  consolidates messages, and eliminates some (but not all)
	  unnecessary copies.  Direct data access to is necessary to
	  completely eliminate unnecessary copies and allocations.
	* src/vsip/impl/par-services.hpp: New file, includes appropriate
	  parallel services file (currently -mpi or -none).
	* src/vsip/impl/par-services-mpi.hpp: New file, abstraction
	  barrier for MPI parallel services.
	* src/vsip/impl/par-services-none.hpp: New file, provides empty
	  parallel services for serial execution.
	* src/vsip/impl/point.hpp: New file, Index-like class for general
	  programming.
	* src/vsip/impl/refcount.hpp: Bug fix for copy constructor.
	* src/vsip/initfini.cpp: Create and destroy parallel services
	  (ParServices).
	* src/vsip/initfini.hpp: Add ParService* member to vsipl object.
	* src/vsip/map.hpp (split_tuple): New function, split a number into
	  into dimensional components.
	  (Map): Make AppMap a friend class, add impl_rank() member function,
	  store communicator in map, use default communicator to compute
	  default grid function.
	* src/vsip/matrix.hpp: Add optional map parameter to constructors.
	  (ViewOfDim): new class to construct a view of a given dimension.
	* src/vsip/vector.hpp: Likewise.
	* src/vsip/par-services.cpp: New file, declare static storage.
	* tests/appmap.cpp: New file, unit tests for applied maps.
	* tests/distributed-block.cpp: New file, unit tests for
	  DistributedBlock and parallel assignment of vectors and matrices.
	* tests/initfini.cpp (main): Run just one of tests per invocation
	  (MPI, and hence vsipl++, cannot be re-initialized after
	  finalization).
	* tests/map.cpp (main): Initialize library with vsipl object.
	* tests/output.hpp: New file, utility functions to write
	  VSIPL++ objects to streams.
	* tests/mpi.cpp: Remove usage of VSIP_IMPL_PAR_SERVICE.

2005-03-31  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile: Removed.
	* src/vsip/GNUmakefile.inc: Removed.
	* tests/GNUmakefile.inc: Removed.

	* autogen.sh: New file.
	* configure.ac: New file.
	* src/vsip/impl/config.hpp: New file.
	* GNUmakefile.in: New file.
	* src/vsip/GNUmakefile.inc.in: New file.
	* tests/GNUmakefile.inc.in: New file.
	* tests/mpi.cpp: New file.

2005-03-31  Jules Bergmann  <jules@codesourcery.com>

	Fix to correctly assign non-const_views with different value type
	and/or block type.
	* src/vsip/matrix.hpp (Matrix): New function,
	  operator=(Matrix<T0, Block0 const&).
	* src/vsip/vector.hpp (Vector): New function,
	  operator=(Vector<T0, Block0 const&).
	* tests/test-storage.hpp: Add dimension order template parameter
	  to Storage and ConstStorage classes.
	* tests/view.cpp: Add test-cases to cover view assignment from
	  non-const_view with different value and block types.

2005-03-29  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/block-traits.hpp: Add ExprBlockStorage trait.
	* src/vsip/impl/expr_binary_block.hpp: Add type parameters for
	type conversions during operation evaluation.
	* src/vsip/impl/expr_unary_block.hpp: Likewise.
	* src/vsip/impl/expr_scalar_block.hpp: Specialize ExprBlockStorage.
	* src/vsip/impl/expr_unary_operators.hpp: New file.
	* src/vsip/impl/expr_binary_operators.hpp: New file.
	* src/vsip/impl/expr_operations.hpp: Change template parameter names.
	* tests/view_operators.cpp: New file.
	* tests/expr-test.cpp: Adjust to API changes in ExprBlocks.
	* tests/expression.cpp: Likewise.

2005-03-28  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/vector.hpp: Add missing return statements as well as an
	explicit cast for constructor that imports from a different block type.
	* src/vsip/impl/subblock.hpp: Fix error in ComponentBlock
	constructor.

2005-03-25  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/domain.hpp (Domain<3>::size): Make function 'inline'.
	  (Domain<3>::operator[]) Likewise.

2005-03-25  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/matrix.hpp: New file, implements matrix views.
	* src/vsip/vector.hpp: Handle subview block reference count through
	  RAII.
	* tests/view.cpp: New file, unit tests for vectors and matrixs
	  (redundant with unit tests in vector.cpp).
	* tests/test-storage.hpp: New file, storage classes to generalize
	  view tests.

2005-03-23  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/refcount.hpp: Add decrement_block_count() function.
	* src/vsip/vector.hpp: Fix subview member functions.
	* tests/vector.cpp: Tests for vector subviews.

2005-03-23  Jules Bergmann  <jules@codesourcery.com>

	Implementation of Map, BlockDist, and CyclicDist.
	* src/vsip/map.hpp: New file, implementation of Map, BlockDist,
	  and CyclicDist class ([view.mapclass] and [view.distribute.*]).
	* src/vsip/impl/value-iterator.hpp: New file, value iterator used
	  for Map's subblock_iterator and processor_iterator.
	* tests/map.cpp: New file, unit tests for maps and distributions.


2005-03-23  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/support.hpp: Change 'row3_t' and 'col3_t' to 'row3_type'
	  and 'col3_type' respectively.

2005-03-21  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/block-traits.hpp: New file for block traits,
	  primary class definition for ViewBlockStorage.
	* src/vsip/impl/expr_binary_block.hpp (BinaryExprBlock):
	  Make class copyable, add ViewBlockStorage specialization.
	* src/vsip/impl/expr_unary_block.hpp (UnaryExprBlock): Likewise.
	* src/vsip/impl/noncopyable.hpp: Add NonAssignable class.
	* src/vsip/impl/refcount.hpp: Add StoredValue class.
	* src/vsip/vector.hpp (const_Vector): Use ViewBlockStorage trait
	  to determine how block should be stored.
	* tests/expr-test.cpp: New file, additional tests for expression
	  templates.

2005-03-21  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/dense.hpp (Dense): Change 'order_t' to 'order_type'.

2005-03-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/vector.hpp (Vector): Add constructor from const_Vector
	  with different value and block types.
	  (Vector::operator=): Add 'const' qualifier to assignment from
	  const_Vector.  Required when assigning from a temporary.
	* tests/vector.cpp: Added test cases for assignment from temporary
	  and construction from temporary.

2005-03-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/refcount.hpp (RefCount::increment_count): Made
	  function inline.
	  (RefCount::decrement_count): Likewise.

2005-03-18  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/complex.hpp: New file, implementing [complex]
	  functionality.
	* tests/complex.hpp: New file, unit tests for [complex].
	* src/vsip/dense.hpp: Remove include <complex>.
	* src/vsip/support.hpp: Add comment on location of vsip::complex.
	* tests/test.hpp (equal): specializations for double and complex<>.

2005-03-17  Jules Bergmann  <jules@codesourcery.com>

	Change typename suffix to "_type" (from "_t")
	* src/vsip/counter.cpp: Likewise.
	* src/vsip/dense.hpp: Likewise.
	* src/vsip/domain.hpp: Likewise.
	* src/vsip/support.hpp: Likewise.
	* src/vsip/vector.hpp: Likewise.
	* src/vsip/impl/counter.hpp: Likewise.
	* src/vsip/impl/expr_binary_block.hpp: Likewise.
	* src/vsip/impl/expr_scalar_block.hpp: Likewise.
	* src/vsip/impl/expr_unary_block.hpp: Likewise.
	* src/vsip/impl/index.hpp: Likewise.
	* src/vsip/impl/subblock.hpp: Likewise.
	* tests/block_interface.hpp: Likewise.
	* tests/counter.cpp: Likewise.
	* tests/dense.cpp: Likewise.
	* tests/domain.cpp: Likewise.
	* tests/expression.cpp: Likewise.
	* tests/static_assert.cpp: Likewise.
	* tests/subblock.cpp: Likewise.
	* tests/vector.cpp: Likewise.

2005-03-15  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/vector.hpp (const_Vector): Allocate Dense block on
	  construction, remove constructor from Vector.
	  (Vector): Forward construction to base class, add put(), operator=()
	  member functions.
	  (ViewConversion): Fix template parameters.
	* tests/vector.cpp: New file, tests for Vector and const_Vector.

2005-03-02  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/vector.hpp: New file.
	* src/vsip/impl/refcount.hpp: Add RefCountedPtr class.

2005-03-02  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/noncopyable.hpp: New file.
	* src/vsip/impl/expr_unary_block.hpp: New file.
	* src/vsip/impl/expr_operations.hpp: New file.
	* src/vsip/impl/expr_binary_block.hpp: New file.
	* src/vsip/impl/expr_scalar_block.hpp: New file.
	* src/vsip/impl/expression.hpp: New file.
	* tests/block_interface.hpp: New file.
	* tests/expression.cpp: New file.

2005-03-01  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/dense.hpp: Provide map() methods.
	* src/vsip/impl/promote.hpp: Provide Promotion templates.

2005-02-23  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/impl/subblock.hpp: New file.
	* tests/subblock.hpp: New file.

	* src/vsip/domain.hpp (Domain<1>): Add impl_nth and impl_last
	member functions.
	(Domain<1>::is_valid): Use impl_last.

2005-02-16  Stefan Seefeld  <stefan@codesourcery.com>

	* GNUmakefile: Add targets 'depend' and 'doc'.
	* doc/Doxyfile: Process subdirectories during documentation.

2005-02-16  Zack Weinberg  <zack@codesourcery.com>

	* GNUmakefile: Do not include .d files if doing a clean.
	(clean): Also delete .d files.
	* tests/GNUmakefile.inc (clean): No need to delete $(tests_cxx_objects).

2005-02-11  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/refcount.hpp (RefCount): Start count at 1.
	* tests/refcount.cpp (deref): New function,
	(test_simple): Update for new RefCount semantics.
	(test_chain_1): Likewise.
	(test_chain_2): Likewise.
	* tests/dense.cpp (test_stack_dense): Likewise.
	(test_heap_dense): Likewise.

2005-02-09  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/impl/static_assert.hpp: New file.
	* tests/static_assert.cpp: Likewise.

2005-02-07  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/dense.hpp (DenseLayout::index): Comment out unused
	parameter names.

2005-01-29  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/domain.hpp (Domain<1>::is_valid):
	Cast index_ and	length_ to stride_t to ensure signed arithmetic.
	Improve grammar	in comment.
	(Domain<1>::operator=): Add return statement.

2005-01-28  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/dense.hpp: Fix typo.

2005-01-28  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/dense.hpp, src/vsip/impl/refcount.hpp,
	tests/dense.cpp, tests/refcount.cpp, tests/test.hpp: New files.
	* src/vsip/support.hpp (impl::RowMajor): New class.
	(impl::ColMajor) Likewise.
	(SerialMap) New placeholder class.
	(impl::unimplemented) New exception class.
	* src/vsip/domain.hpp (Domain<1>::operator[]) fix precondition.


2005-01-27  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/support.cpp, src/vsip/counter.cpp: New files.
	* src/vsip/support.hpp (VSIP_IMPL_NORETURN): New macro.
	(VSIP_IMPL_THROW): Likewise.
	(VSIP_HAS_EXCEPTIONS): Define to 1 only if not already defined.
	(vsip::impl::fatal_exception): Declare.
	* src/vsip/counter.cpp: No need to include <stdexcept> nor <cstdlib>.
	(CheckedCounter): Add overflow and underflow static member functions.
	(CheckedCounter::operator+=, CheckedCounter::operator-=): Use them.
	(operator==, operator!=, operator<, operator>, operator<=)
	(operator>=): Mark with VSIP_NOTHROW.

2005-01-26  Stefan Seefeld  <stefan@codesourcery.com>

	* tests/domain.cpp: Fix typo.

2005-01-24  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/domain.hpp: New, Domain class template.
	* tests/domain.cpp: New, Domain API tests.

2005-01-24  Zack Weinberg  <zack@codesourcery.com>

	* GNUmakefile: Mention LDFLAGS.
	* tests/GNUmakefile.inc: Honor LDFLAGS when linking executables.

2005-01-23  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/support.hpp: Include cassert, fix typo.
	* tests/support.cpp: Use include cassert instead of assert.h.

2005-01-22  Stefan Seefeld  <stefan@marvin>

	* src/vsip/impl/index.hpp: remove redundant and buggy code

2005-01-22  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/impl/counter.hpp: Change ValT to value_t throughout.
	Add non-member operator+ and operator- with value_t left argument.
	Tidy comment about lack of conversion to bool.
	* tests/counter.cpp: Include <cassert>.  Add tests of nondestructive
	arithmetic with an integer literal on the left of the operator.
	Remove commented-out tests for conversion to bool.  Change
	one use of CheckedCounter::ValT to value_t.

	* src/vsip/initfini.hpp: Include vsip/impl/counter.hpp.
	(vsipl::use_count): Make a CheckedCounter.
	* src/vsip/initfini.cpp: Update to match.

	* tests/.cvsignore: New file, ignore *.d.
	* tests/GNUmakefile.inc: Add $(tests_cxx_sources) to
	$(cxx_sources) so they get dependencies calculated.

2005-01-22  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/impl/counter.hpp: New, checked-counter class.
	* tests/support.cpp: New, tests for checked counters.

2005-01-21  Stefan Seefeld  <stefan@codesourcery.com>

	* src/vsip/impl/index.hpp: New Index API.
	* src/tests/index.cpp: New tests for Index API.

2005-01-21  Zack Weinberg  <zack@codesourcery.com>

	* doc/.cvsignore, src/.cvsignore, src/vsip/.cvsignore
	* src/vsip/impl/.cvsignore: New files.

2005-01-20  Mark Mitchell  <mark@codesourcery.com>

	* src/vsip/GNUmakefile.inc (src_vsip_CXXFLAGS): Define.
	(src_vsip_CXXINCLUDES): Likewise.

2005-01-20  Zack Weinberg  <zack@codesourcery.com>

	* src/vsip/initfini.hpp, src/vsip/initfini.cpp
	* tests/initfini.cpp: New files.

2005-01-20  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile (AR): New variable.
	(subdirs): Add src/vsip.
	(srcdir): New variable.
	(objects): New variable.
	(all): Mark it PHONY.
	(check): New target.
	(clean): New target.
	* src/vsip/GNUmakefile.inc: New file.
	* tests/GNUmakefile.inc: Likewise.

	* GNUmakefile (CXXCPPFLAGS): New variable.
	(CXXFLAGS): Use it.

2005-01-20  Zack Weinberg  <zack@codesourcery.com>

	* doc/Doxyfile: New file.

2005-01-20  Jules Bergmann  <jules@codesourcery.com>

	* src/vsip/support.hpp: New file.
	* tests/support.cpp: New file.

2005-01-20  Mark Mitchell  <mark@codesourcery.com>

	* GNUmakefile: New file.

2005-01-19  Jules Bergmann  <jules@codesourcery.com>

	* Created repository.
